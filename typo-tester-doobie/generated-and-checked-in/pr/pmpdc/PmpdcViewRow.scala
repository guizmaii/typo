/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pmpdc

import adventureworks.production.culture.CultureId
import adventureworks.production.productdescription.ProductdescriptionId
import adventureworks.production.productmodel.ProductmodelId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet
import java.time.LocalDateTime

case class PmpdcViewRow(
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.productmodelid]] */
  productmodelid: Option[ProductmodelId],
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.productdescriptionid]] */
  productdescriptionid: Option[ProductdescriptionId],
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.cultureid]] */
  cultureid: Option[CultureId],
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object PmpdcViewRow {
  implicit val decoder: Decoder[PmpdcViewRow] =
    (c: HCursor) =>
      for {
        productmodelid <- c.downField("productmodelid").as[Option[ProductmodelId]]
        productdescriptionid <- c.downField("productdescriptionid").as[Option[ProductdescriptionId]]
        cultureid <- c.downField("cultureid").as[Option[CultureId]]
        modifieddate <- c.downField("modifieddate").as[Option[LocalDateTime]]
      } yield PmpdcViewRow(productmodelid, productdescriptionid, cultureid, modifieddate)
  implicit val encoder: Encoder[PmpdcViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "productmodelid" := row.productmodelid,
        "productdescriptionid" := row.productdescriptionid,
        "cultureid" := row.cultureid,
        "modifieddate" := row.modifieddate
      )}
  implicit val read: Read[PmpdcViewRow] =
    new Read[PmpdcViewRow](
      gets = List(
        (Get[ProductmodelId], Nullability.Nullable),
        (Get[ProductdescriptionId], Nullability.Nullable),
        (Get[CultureId], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PmpdcViewRow(
        productmodelid = Get[ProductmodelId].unsafeGetNullable(rs, i + 0),
        productdescriptionid = Get[ProductdescriptionId].unsafeGetNullable(rs, i + 1),
        cultureid = Get[CultureId].unsafeGetNullable(rs, i + 2),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 3)
      )
    )
  

}
