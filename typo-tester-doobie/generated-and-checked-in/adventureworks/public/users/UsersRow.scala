/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package users

import adventureworks.customtypes.TypoOffsetDateTime
import adventureworks.customtypes.TypoUnknownCitext
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class UsersRow(
  userId: UsersId,
  name: String,
  lastName: Option[String],
  email: TypoUnknownCitext,
  password: String,
  createdAt: TypoOffsetDateTime,
  verifiedOn: Option[TypoOffsetDateTime]
)

object UsersRow {
  implicit lazy val decoder: Decoder[UsersRow] = Decoder.forProduct7[UsersRow, UsersId, String, Option[String], TypoUnknownCitext, String, TypoOffsetDateTime, Option[TypoOffsetDateTime]]("user_id", "name", "last_name", "email", "password", "created_at", "verified_on")(UsersRow.apply)(UsersId.decoder, Decoder.decodeString, Decoder.decodeOption(Decoder.decodeString), TypoUnknownCitext.decoder, Decoder.decodeString, TypoOffsetDateTime.decoder, Decoder.decodeOption(TypoOffsetDateTime.decoder))
  implicit lazy val encoder: Encoder[UsersRow] = Encoder.forProduct7[UsersRow, UsersId, String, Option[String], TypoUnknownCitext, String, TypoOffsetDateTime, Option[TypoOffsetDateTime]]("user_id", "name", "last_name", "email", "password", "created_at", "verified_on")(x => (x.userId, x.name, x.lastName, x.email, x.password, x.createdAt, x.verifiedOn))(UsersId.encoder, Encoder.encodeString, Encoder.encodeOption(Encoder.encodeString), TypoUnknownCitext.encoder, Encoder.encodeString, TypoOffsetDateTime.encoder, Encoder.encodeOption(TypoOffsetDateTime.encoder))
  implicit lazy val read: Read[UsersRow] = new Read[UsersRow](
    gets = List(
      (UsersId.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.Nullable),
      (TypoUnknownCitext.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (TypoOffsetDateTime.get, Nullability.NoNulls),
      (TypoOffsetDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => UsersRow(
      userId = UsersId.get.unsafeGetNonNullable(rs, i + 0),
      name = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 1),
      lastName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 2),
      email = TypoUnknownCitext.get.unsafeGetNonNullable(rs, i + 3),
      password = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 4),
      createdAt = TypoOffsetDateTime.get.unsafeGetNonNullable(rs, i + 5),
      verifiedOn = TypoOffsetDateTime.get.unsafeGetNullable(rs, i + 6)
    )
  )
}
