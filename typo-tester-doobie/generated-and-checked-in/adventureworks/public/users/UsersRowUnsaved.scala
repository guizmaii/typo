/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package users

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoOffsetDateTime
import adventureworks.customtypes.TypoUnknownCitext
import io.circe.Decoder
import io.circe.Encoder

/** This class corresponds to a row in table `public.users` which has not been persisted yet */
case class UsersRowUnsaved(
  userId: UsersId,
  name: String,
  lastName: Option[String],
  email: TypoUnknownCitext,
  password: String,
  verifiedOn: Option[TypoOffsetDateTime],
  /** Default: now() */
  createdAt: Defaulted[TypoOffsetDateTime] = Defaulted.UseDefault
) {
  def toRow(createdAtDefault: => TypoOffsetDateTime): UsersRow =
    UsersRow(
      userId = userId,
      name = name,
      lastName = lastName,
      email = email,
      password = password,
      verifiedOn = verifiedOn,
      createdAt = createdAt match {
                    case Defaulted.UseDefault => createdAtDefault
                    case Defaulted.Provided(value) => value
                  }
    )
}
object UsersRowUnsaved {
  implicit lazy val decoder: Decoder[UsersRowUnsaved] = Decoder.forProduct7[UsersRowUnsaved, UsersId, String, Option[String], TypoUnknownCitext, String, Option[TypoOffsetDateTime], Defaulted[TypoOffsetDateTime]]("user_id", "name", "last_name", "email", "password", "verified_on", "created_at")(UsersRowUnsaved.apply)(UsersId.decoder, Decoder.decodeString, Decoder.decodeOption(Decoder.decodeString), TypoUnknownCitext.decoder, Decoder.decodeString, Decoder.decodeOption(TypoOffsetDateTime.decoder), Defaulted.decoder(TypoOffsetDateTime.decoder))
  implicit lazy val encoder: Encoder[UsersRowUnsaved] = Encoder.forProduct7[UsersRowUnsaved, UsersId, String, Option[String], TypoUnknownCitext, String, Option[TypoOffsetDateTime], Defaulted[TypoOffsetDateTime]]("user_id", "name", "last_name", "email", "password", "verified_on", "created_at")(x => (x.userId, x.name, x.lastName, x.email, x.password, x.verifiedOn, x.createdAt))(UsersId.encoder, Encoder.encodeString, Encoder.encodeOption(Encoder.encodeString), TypoUnknownCitext.encoder, Encoder.encodeString, Encoder.encodeOption(TypoOffsetDateTime.encoder), Defaulted.encoder(TypoOffsetDateTime.encoder))
}
