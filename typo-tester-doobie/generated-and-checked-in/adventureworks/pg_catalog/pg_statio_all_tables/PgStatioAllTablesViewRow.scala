/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statio_all_tables

import adventureworks.pg_catalog.pg_class.PgClassId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatioAllTablesViewRow(
  /** Points to [[pg_class.PgClassRow.oid]] */
  relid: PgClassId,
  /** Points to [[pg_namespace.PgNamespaceRow.nspname]] */
  schemaname: Option[String],
  /** Points to [[pg_class.PgClassRow.relname]] */
  relname: String,
  heapBlksRead: /* nullability unknown */ Option[Long],
  heapBlksHit: /* nullability unknown */ Option[Long],
  idxBlksRead: /* nullability unknown */ Option[Long],
  idxBlksHit: /* nullability unknown */ Option[Long],
  toastBlksRead: /* nullability unknown */ Option[Long],
  toastBlksHit: /* nullability unknown */ Option[Long],
  tidxBlksRead: /* nullability unknown */ Option[Long],
  tidxBlksHit: /* nullability unknown */ Option[Long]
)

object PgStatioAllTablesViewRow {
  implicit lazy val decoder: Decoder[PgStatioAllTablesViewRow] = Decoder.forProduct11[PgStatioAllTablesViewRow, PgClassId, Option[String], String, /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long]]("relid", "schemaname", "relname", "heap_blks_read", "heap_blks_hit", "idx_blks_read", "idx_blks_hit", "toast_blks_read", "toast_blks_hit", "tidx_blks_read", "tidx_blks_hit")(PgStatioAllTablesViewRow.apply)(PgClassId.decoder, Decoder.decodeOption(Decoder.decodeString), Decoder.decodeString, Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong))
  implicit lazy val encoder: Encoder[PgStatioAllTablesViewRow] = Encoder.forProduct11[PgStatioAllTablesViewRow, PgClassId, Option[String], String, /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Long]]("relid", "schemaname", "relname", "heap_blks_read", "heap_blks_hit", "idx_blks_read", "idx_blks_hit", "toast_blks_read", "toast_blks_hit", "tidx_blks_read", "tidx_blks_hit")(x => (x.relid, x.schemaname, x.relname, x.heapBlksRead, x.heapBlksHit, x.idxBlksRead, x.idxBlksHit, x.toastBlksRead, x.toastBlksHit, x.tidxBlksRead, x.tidxBlksHit))(PgClassId.encoder, Encoder.encodeOption(Encoder.encodeString), Encoder.encodeString, Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong))
  implicit lazy val read: Read[PgStatioAllTablesViewRow] = new Read[PgStatioAllTablesViewRow](
    gets = List(
      (PgClassId.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatioAllTablesViewRow(
      relid = PgClassId.get.unsafeGetNonNullable(rs, i + 0),
      schemaname = Meta.StringMeta.get.unsafeGetNullable(rs, i + 1),
      relname = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 2),
      heapBlksRead = Meta.LongMeta.get.unsafeGetNullable(rs, i + 3),
      heapBlksHit = Meta.LongMeta.get.unsafeGetNullable(rs, i + 4),
      idxBlksRead = Meta.LongMeta.get.unsafeGetNullable(rs, i + 5),
      idxBlksHit = Meta.LongMeta.get.unsafeGetNullable(rs, i + 6),
      toastBlksRead = Meta.LongMeta.get.unsafeGetNullable(rs, i + 7),
      toastBlksHit = Meta.LongMeta.get.unsafeGetNullable(rs, i + 8),
      tidxBlksRead = Meta.LongMeta.get.unsafeGetNullable(rs, i + 9),
      tidxBlksHit = Meta.LongMeta.get.unsafeGetNullable(rs, i + 10)
    )
  )
}
