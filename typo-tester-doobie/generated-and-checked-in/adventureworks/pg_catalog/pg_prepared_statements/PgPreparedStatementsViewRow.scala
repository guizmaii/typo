/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_prepared_statements

import adventureworks.customtypes.TypoOffsetDateTime
import adventureworks.customtypes.TypoRegtype
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgPreparedStatementsViewRow(
  name: String,
  statement: String,
  prepareTime: TypoOffsetDateTime,
  parameterTypes: Array[TypoRegtype],
  fromSql: Boolean,
  genericPlans: Long,
  customPlans: Long
)

object PgPreparedStatementsViewRow {
  implicit lazy val decoder: Decoder[PgPreparedStatementsViewRow] = Decoder.forProduct7[PgPreparedStatementsViewRow, String, String, TypoOffsetDateTime, Array[TypoRegtype], Boolean, Long, Long]("name", "statement", "prepare_time", "parameter_types", "from_sql", "generic_plans", "custom_plans")(PgPreparedStatementsViewRow.apply)(Decoder.decodeString, Decoder.decodeString, TypoOffsetDateTime.decoder, Decoder.decodeArray[TypoRegtype](TypoRegtype.decoder, implicitly), Decoder.decodeBoolean, Decoder.decodeLong, Decoder.decodeLong)
  implicit lazy val encoder: Encoder[PgPreparedStatementsViewRow] = Encoder.forProduct7[PgPreparedStatementsViewRow, String, String, TypoOffsetDateTime, Array[TypoRegtype], Boolean, Long, Long]("name", "statement", "prepare_time", "parameter_types", "from_sql", "generic_plans", "custom_plans")(x => (x.name, x.statement, x.prepareTime, x.parameterTypes, x.fromSql, x.genericPlans, x.customPlans))(Encoder.encodeString, Encoder.encodeString, TypoOffsetDateTime.encoder, Encoder.encodeIterable[TypoRegtype, Array](TypoRegtype.encoder, implicitly), Encoder.encodeBoolean, Encoder.encodeLong, Encoder.encodeLong)
  implicit lazy val read: Read[PgPreparedStatementsViewRow] = new Read[PgPreparedStatementsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (TypoOffsetDateTime.get, Nullability.NoNulls),
      (TypoRegtype.arrayGet, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgPreparedStatementsViewRow(
      name = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 0),
      statement = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 1),
      prepareTime = TypoOffsetDateTime.get.unsafeGetNonNullable(rs, i + 2),
      parameterTypes = TypoRegtype.arrayGet.unsafeGetNonNullable(rs, i + 3),
      fromSql = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 4),
      genericPlans = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 5),
      customPlans = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 6)
    )
  )
}
