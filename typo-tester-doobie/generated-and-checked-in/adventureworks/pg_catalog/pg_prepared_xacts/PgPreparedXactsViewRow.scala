/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_prepared_xacts

import adventureworks.customtypes.TypoOffsetDateTime
import adventureworks.customtypes.TypoXid
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgPreparedXactsViewRow(
  transaction: TypoXid,
  gid: String,
  prepared: TypoOffsetDateTime,
  owner: Option[String],
  database: Option[String]
)

object PgPreparedXactsViewRow {
  implicit lazy val decoder: Decoder[PgPreparedXactsViewRow] = Decoder.forProduct5[PgPreparedXactsViewRow, TypoXid, String, TypoOffsetDateTime, Option[String], Option[String]]("transaction", "gid", "prepared", "owner", "database")(PgPreparedXactsViewRow.apply)(TypoXid.decoder, Decoder.decodeString, TypoOffsetDateTime.decoder, Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString))
  implicit lazy val encoder: Encoder[PgPreparedXactsViewRow] = Encoder.forProduct5[PgPreparedXactsViewRow, TypoXid, String, TypoOffsetDateTime, Option[String], Option[String]]("transaction", "gid", "prepared", "owner", "database")(x => (x.transaction, x.gid, x.prepared, x.owner, x.database))(TypoXid.encoder, Encoder.encodeString, TypoOffsetDateTime.encoder, Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString))
  implicit lazy val read: Read[PgPreparedXactsViewRow] = new Read[PgPreparedXactsViewRow](
    gets = List(
      (TypoXid.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (TypoOffsetDateTime.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgPreparedXactsViewRow(
      transaction = TypoXid.get.unsafeGetNonNullable(rs, i + 0),
      gid = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 1),
      prepared = TypoOffsetDateTime.get.unsafeGetNonNullable(rs, i + 2),
      owner = Meta.StringMeta.get.unsafeGetNullable(rs, i + 3),
      database = Meta.StringMeta.get.unsafeGetNullable(rs, i + 4)
    )
  )
}
