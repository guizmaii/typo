/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_available_extension_versions

import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgAvailableExtensionVersionsViewRow(
  name: String,
  version: String,
  installed: Boolean,
  superuser: Boolean,
  trusted: Boolean,
  relocatable: Boolean,
  schema: String,
  requires: Array[String],
  comment: String
)

object PgAvailableExtensionVersionsViewRow {
  implicit lazy val decoder: Decoder[PgAvailableExtensionVersionsViewRow] = Decoder.forProduct9[PgAvailableExtensionVersionsViewRow, String, String, Boolean, Boolean, Boolean, Boolean, String, Array[String], String]("name", "version", "installed", "superuser", "trusted", "relocatable", "schema", "requires", "comment")(PgAvailableExtensionVersionsViewRow.apply)(Decoder.decodeString, Decoder.decodeString, Decoder.decodeBoolean, Decoder.decodeBoolean, Decoder.decodeBoolean, Decoder.decodeBoolean, Decoder.decodeString, Decoder.decodeArray[String](Decoder.decodeString, implicitly), Decoder.decodeString)
  implicit lazy val encoder: Encoder[PgAvailableExtensionVersionsViewRow] = Encoder.forProduct9[PgAvailableExtensionVersionsViewRow, String, String, Boolean, Boolean, Boolean, Boolean, String, Array[String], String]("name", "version", "installed", "superuser", "trusted", "relocatable", "schema", "requires", "comment")(x => (x.name, x.version, x.installed, x.superuser, x.trusted, x.relocatable, x.schema, x.requires, x.comment))(Encoder.encodeString, Encoder.encodeString, Encoder.encodeBoolean, Encoder.encodeBoolean, Encoder.encodeBoolean, Encoder.encodeBoolean, Encoder.encodeString, Encoder.encodeIterable[String, Array](Encoder.encodeString, implicitly), Encoder.encodeString)
  implicit lazy val read: Read[PgAvailableExtensionVersionsViewRow] = new Read[PgAvailableExtensionVersionsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (adventureworks.StringArrayMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgAvailableExtensionVersionsViewRow(
      name = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 0),
      version = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 1),
      installed = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 2),
      superuser = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 3),
      trusted = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 4),
      relocatable = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 5),
      schema = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 6),
      requires = adventureworks.StringArrayMeta.get.unsafeGetNonNullable(rs, i + 7),
      comment = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 8)
    )
  )
}
