/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_replication_slots

import adventureworks.customtypes.TypoOffsetDateTime
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatReplicationSlotsViewRow(
  /** Points to [[pg_replication_slots.PgReplicationSlotsViewRow.slotName]] */
  slotName: String,
  spillTxns: Long,
  spillCount: Long,
  spillBytes: Long,
  streamTxns: Long,
  streamCount: Long,
  streamBytes: Long,
  totalTxns: Long,
  totalBytes: Long,
  statsReset: TypoOffsetDateTime
)

object PgStatReplicationSlotsViewRow {
  implicit lazy val decoder: Decoder[PgStatReplicationSlotsViewRow] = Decoder.forProduct10[PgStatReplicationSlotsViewRow, String, Long, Long, Long, Long, Long, Long, Long, Long, TypoOffsetDateTime]("slot_name", "spill_txns", "spill_count", "spill_bytes", "stream_txns", "stream_count", "stream_bytes", "total_txns", "total_bytes", "stats_reset")(PgStatReplicationSlotsViewRow.apply)(Decoder.decodeString, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong, TypoOffsetDateTime.decoder)
  implicit lazy val encoder: Encoder[PgStatReplicationSlotsViewRow] = Encoder.forProduct10[PgStatReplicationSlotsViewRow, String, Long, Long, Long, Long, Long, Long, Long, Long, TypoOffsetDateTime]("slot_name", "spill_txns", "spill_count", "spill_bytes", "stream_txns", "stream_count", "stream_bytes", "total_txns", "total_bytes", "stats_reset")(x => (x.slotName, x.spillTxns, x.spillCount, x.spillBytes, x.streamTxns, x.streamCount, x.streamBytes, x.totalTxns, x.totalBytes, x.statsReset))(Encoder.encodeString, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong, TypoOffsetDateTime.encoder)
  implicit lazy val read: Read[PgStatReplicationSlotsViewRow] = new Read[PgStatReplicationSlotsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (TypoOffsetDateTime.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatReplicationSlotsViewRow(
      slotName = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 0),
      spillTxns = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 1),
      spillCount = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 2),
      spillBytes = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 3),
      streamTxns = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 4),
      streamCount = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 5),
      streamBytes = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 6),
      totalTxns = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 7),
      totalBytes = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 8),
      statsReset = TypoOffsetDateTime.get.unsafeGetNonNullable(rs, i + 9)
    )
  )
}
