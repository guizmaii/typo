/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_shmem_allocations

import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgShmemAllocationsViewRow(
  name: String,
  off: Long,
  size: Long,
  allocatedSize: Long
)

object PgShmemAllocationsViewRow {
  implicit lazy val decoder: Decoder[PgShmemAllocationsViewRow] = Decoder.forProduct4[PgShmemAllocationsViewRow, String, Long, Long, Long]("name", "off", "size", "allocated_size")(PgShmemAllocationsViewRow.apply)(Decoder.decodeString, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong)
  implicit lazy val encoder: Encoder[PgShmemAllocationsViewRow] = Encoder.forProduct4[PgShmemAllocationsViewRow, String, Long, Long, Long]("name", "off", "size", "allocated_size")(x => (x.name, x.off, x.size, x.allocatedSize))(Encoder.encodeString, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong)
  implicit lazy val read: Read[PgShmemAllocationsViewRow] = new Read[PgShmemAllocationsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgShmemAllocationsViewRow(
      name = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 0),
      off = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 1),
      size = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 2),
      allocatedSize = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 3)
    )
  )
}
