/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_wal

import adventureworks.customtypes.TypoOffsetDateTime
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatWalViewRow(
  walRecords: Long,
  walFpi: Long,
  walBytes: BigDecimal,
  walBuffersFull: Long,
  walWrite: Long,
  walSync: Long,
  walWriteTime: Double,
  walSyncTime: Double,
  statsReset: TypoOffsetDateTime
)

object PgStatWalViewRow {
  implicit lazy val decoder: Decoder[PgStatWalViewRow] = Decoder.forProduct9[PgStatWalViewRow, Long, Long, BigDecimal, Long, Long, Long, Double, Double, TypoOffsetDateTime]("wal_records", "wal_fpi", "wal_bytes", "wal_buffers_full", "wal_write", "wal_sync", "wal_write_time", "wal_sync_time", "stats_reset")(PgStatWalViewRow.apply)(Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeBigDecimal, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeDouble, Decoder.decodeDouble, TypoOffsetDateTime.decoder)
  implicit lazy val encoder: Encoder[PgStatWalViewRow] = Encoder.forProduct9[PgStatWalViewRow, Long, Long, BigDecimal, Long, Long, Long, Double, Double, TypoOffsetDateTime]("wal_records", "wal_fpi", "wal_bytes", "wal_buffers_full", "wal_write", "wal_sync", "wal_write_time", "wal_sync_time", "stats_reset")(x => (x.walRecords, x.walFpi, x.walBytes, x.walBuffersFull, x.walWrite, x.walSync, x.walWriteTime, x.walSyncTime, x.statsReset))(Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeBigDecimal, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeDouble, Encoder.encodeDouble, TypoOffsetDateTime.encoder)
  implicit lazy val read: Read[PgStatWalViewRow] = new Read[PgStatWalViewRow](
    gets = List(
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.ScalaBigDecimalMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.DoubleMeta.get, Nullability.NoNulls),
      (Meta.DoubleMeta.get, Nullability.NoNulls),
      (TypoOffsetDateTime.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatWalViewRow(
      walRecords = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 0),
      walFpi = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 1),
      walBytes = Meta.ScalaBigDecimalMeta.get.unsafeGetNonNullable(rs, i + 2),
      walBuffersFull = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 3),
      walWrite = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 4),
      walSync = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 5),
      walWriteTime = Meta.DoubleMeta.get.unsafeGetNonNullable(rs, i + 6),
      walSyncTime = Meta.DoubleMeta.get.unsafeGetNonNullable(rs, i + 7),
      statsReset = TypoOffsetDateTime.get.unsafeGetNonNullable(rs, i + 8)
    )
  )
}
