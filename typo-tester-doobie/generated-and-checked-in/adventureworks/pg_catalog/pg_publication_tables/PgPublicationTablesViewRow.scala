/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_publication_tables

import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgPublicationTablesViewRow(
  pubname: String,
  schemaname: String,
  tablename: String
)

object PgPublicationTablesViewRow {
  implicit lazy val decoder: Decoder[PgPublicationTablesViewRow] = Decoder.forProduct3[PgPublicationTablesViewRow, String, String, String]("pubname", "schemaname", "tablename")(PgPublicationTablesViewRow.apply)(Decoder.decodeString, Decoder.decodeString, Decoder.decodeString)
  implicit lazy val encoder: Encoder[PgPublicationTablesViewRow] = Encoder.forProduct3[PgPublicationTablesViewRow, String, String, String]("pubname", "schemaname", "tablename")(x => (x.pubname, x.schemaname, x.tablename))(Encoder.encodeString, Encoder.encodeString, Encoder.encodeString)
  implicit lazy val read: Read[PgPublicationTablesViewRow] = new Read[PgPublicationTablesViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgPublicationTablesViewRow(
      pubname = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 0),
      schemaname = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 1),
      tablename = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 2)
    )
  )
}
