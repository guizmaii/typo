/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_config

import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgConfigViewRow(
  name: String,
  setting: String
)

object PgConfigViewRow {
  implicit lazy val decoder: Decoder[PgConfigViewRow] = Decoder.forProduct2[PgConfigViewRow, String, String]("name", "setting")(PgConfigViewRow.apply)(Decoder.decodeString, Decoder.decodeString)
  implicit lazy val encoder: Encoder[PgConfigViewRow] = Encoder.forProduct2[PgConfigViewRow, String, String]("name", "setting")(x => (x.name, x.setting))(Encoder.encodeString, Encoder.encodeString)
  implicit lazy val read: Read[PgConfigViewRow] = new Read[PgConfigViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgConfigViewRow(
      name = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 0),
      setting = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 1)
    )
  )
}
