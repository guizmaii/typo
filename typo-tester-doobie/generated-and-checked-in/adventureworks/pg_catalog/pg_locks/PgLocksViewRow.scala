/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_locks

import adventureworks.customtypes.TypoOffsetDateTime
import adventureworks.customtypes.TypoXid
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgLocksViewRow(
  locktype: String,
  database: /* oid */ Long,
  relation: /* oid */ Long,
  page: Int,
  tuple: Int,
  virtualxid: String,
  transactionid: TypoXid,
  classid: /* oid */ Long,
  objid: /* oid */ Long,
  objsubid: Int,
  virtualtransaction: String,
  pid: Int,
  mode: String,
  granted: Boolean,
  fastpath: Boolean,
  waitstart: TypoOffsetDateTime
)

object PgLocksViewRow {
  implicit lazy val decoder: Decoder[PgLocksViewRow] = Decoder.forProduct16[PgLocksViewRow, String, /* oid */ Long, /* oid */ Long, Int, Int, String, TypoXid, /* oid */ Long, /* oid */ Long, Int, String, Int, String, Boolean, Boolean, TypoOffsetDateTime]("locktype", "database", "relation", "page", "tuple", "virtualxid", "transactionid", "classid", "objid", "objsubid", "virtualtransaction", "pid", "mode", "granted", "fastpath", "waitstart")(PgLocksViewRow.apply)(Decoder.decodeString, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeInt, Decoder.decodeInt, Decoder.decodeString, TypoXid.decoder, Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeInt, Decoder.decodeString, Decoder.decodeInt, Decoder.decodeString, Decoder.decodeBoolean, Decoder.decodeBoolean, TypoOffsetDateTime.decoder)
  implicit lazy val encoder: Encoder[PgLocksViewRow] = Encoder.forProduct16[PgLocksViewRow, String, /* oid */ Long, /* oid */ Long, Int, Int, String, TypoXid, /* oid */ Long, /* oid */ Long, Int, String, Int, String, Boolean, Boolean, TypoOffsetDateTime]("locktype", "database", "relation", "page", "tuple", "virtualxid", "transactionid", "classid", "objid", "objsubid", "virtualtransaction", "pid", "mode", "granted", "fastpath", "waitstart")(x => (x.locktype, x.database, x.relation, x.page, x.tuple, x.virtualxid, x.transactionid, x.classid, x.objid, x.objsubid, x.virtualtransaction, x.pid, x.mode, x.granted, x.fastpath, x.waitstart))(Encoder.encodeString, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeInt, Encoder.encodeInt, Encoder.encodeString, TypoXid.encoder, Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeInt, Encoder.encodeString, Encoder.encodeInt, Encoder.encodeString, Encoder.encodeBoolean, Encoder.encodeBoolean, TypoOffsetDateTime.encoder)
  implicit lazy val read: Read[PgLocksViewRow] = new Read[PgLocksViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.IntMeta.get, Nullability.NoNulls),
      (Meta.IntMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (TypoXid.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.IntMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.IntMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (TypoOffsetDateTime.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgLocksViewRow(
      locktype = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 0),
      database = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 1),
      relation = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 2),
      page = Meta.IntMeta.get.unsafeGetNonNullable(rs, i + 3),
      tuple = Meta.IntMeta.get.unsafeGetNonNullable(rs, i + 4),
      virtualxid = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 5),
      transactionid = TypoXid.get.unsafeGetNonNullable(rs, i + 6),
      classid = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 7),
      objid = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 8),
      objsubid = Meta.IntMeta.get.unsafeGetNonNullable(rs, i + 9),
      virtualtransaction = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 10),
      pid = Meta.IntMeta.get.unsafeGetNonNullable(rs, i + 11),
      mode = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 12),
      granted = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 13),
      fastpath = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 14),
      waitstart = TypoOffsetDateTime.get.unsafeGetNonNullable(rs, i + 15)
    )
  )
}
