/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_slru

import adventureworks.customtypes.TypoOffsetDateTime
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.Structure.Relation

class PgStatSlruViewStructure[Row](val prefix: Option[String], val extract: Row => PgStatSlruViewRow, val merge: (Row, PgStatSlruViewRow) => Row)
  extends Relation[PgStatSlruViewFields, PgStatSlruViewRow, Row]
    with PgStatSlruViewFields[Row] { outer =>

  override val name = new Field[String, Row](prefix, "name", None, None)(x => extract(x).name, (row, value) => merge(row, extract(row).copy(name = value)))
  override val blksZeroed = new Field[Long, Row](prefix, "blks_zeroed", None, Some("int8"))(x => extract(x).blksZeroed, (row, value) => merge(row, extract(row).copy(blksZeroed = value)))
  override val blksHit = new Field[Long, Row](prefix, "blks_hit", None, Some("int8"))(x => extract(x).blksHit, (row, value) => merge(row, extract(row).copy(blksHit = value)))
  override val blksRead = new Field[Long, Row](prefix, "blks_read", None, Some("int8"))(x => extract(x).blksRead, (row, value) => merge(row, extract(row).copy(blksRead = value)))
  override val blksWritten = new Field[Long, Row](prefix, "blks_written", None, Some("int8"))(x => extract(x).blksWritten, (row, value) => merge(row, extract(row).copy(blksWritten = value)))
  override val blksExists = new Field[Long, Row](prefix, "blks_exists", None, Some("int8"))(x => extract(x).blksExists, (row, value) => merge(row, extract(row).copy(blksExists = value)))
  override val flushes = new Field[Long, Row](prefix, "flushes", None, Some("int8"))(x => extract(x).flushes, (row, value) => merge(row, extract(row).copy(flushes = value)))
  override val truncates = new Field[Long, Row](prefix, "truncates", None, Some("int8"))(x => extract(x).truncates, (row, value) => merge(row, extract(row).copy(truncates = value)))
  override val statsReset = new Field[TypoOffsetDateTime, Row](prefix, "stats_reset", Some("text"), Some("timestamptz"))(x => extract(x).statsReset, (row, value) => merge(row, extract(row).copy(statsReset = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](name, blksZeroed, blksHit, blksRead, blksWritten, blksExists, flushes, truncates, statsReset)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgStatSlruViewRow, merge: (NewRow, PgStatSlruViewRow) => NewRow): PgStatSlruViewStructure[NewRow] =
    new PgStatSlruViewStructure(prefix, extract, merge)
}
