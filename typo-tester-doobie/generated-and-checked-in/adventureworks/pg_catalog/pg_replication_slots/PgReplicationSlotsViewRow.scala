/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_replication_slots

import adventureworks.customtypes.TypoXid
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgReplicationSlotsViewRow(
  slotName: /* nullability unknown */ Option[String],
  plugin: /* nullability unknown */ Option[String],
  slotType: /* nullability unknown */ Option[String],
  datoid: /* nullability unknown */ Option[/* oid */ Long],
  /** Points to [[pg_database.PgDatabaseRow.datname]] */
  database: Option[String],
  temporary: /* nullability unknown */ Option[Boolean],
  active: /* nullability unknown */ Option[Boolean],
  activePid: /* nullability unknown */ Option[Int],
  xmin: /* nullability unknown */ Option[TypoXid],
  catalogXmin: /* nullability unknown */ Option[TypoXid],
  restartLsn: /* nullability unknown */ Option[/* pg_lsn */ Long],
  confirmedFlushLsn: /* nullability unknown */ Option[/* pg_lsn */ Long],
  walStatus: /* nullability unknown */ Option[String],
  safeWalSize: /* nullability unknown */ Option[Long],
  twoPhase: /* nullability unknown */ Option[Boolean]
)

object PgReplicationSlotsViewRow {
  implicit lazy val decoder: Decoder[PgReplicationSlotsViewRow] = Decoder.forProduct15[PgReplicationSlotsViewRow, /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[/* oid */ Long], Option[String], /* nullability unknown */ Option[Boolean], /* nullability unknown */ Option[Boolean], /* nullability unknown */ Option[Int], /* nullability unknown */ Option[TypoXid], /* nullability unknown */ Option[TypoXid], /* nullability unknown */ Option[/* pg_lsn */ Long], /* nullability unknown */ Option[/* pg_lsn */ Long], /* nullability unknown */ Option[String], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Boolean]]("slot_name", "plugin", "slot_type", "datoid", "database", "temporary", "active", "active_pid", "xmin", "catalog_xmin", "restart_lsn", "confirmed_flush_lsn", "wal_status", "safe_wal_size", "two_phase")(PgReplicationSlotsViewRow.apply)(Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeBoolean), Decoder.decodeOption(Decoder.decodeBoolean), Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(TypoXid.decoder), Decoder.decodeOption(TypoXid.decoder), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeLong), Decoder.decodeOption(Decoder.decodeBoolean))
  implicit lazy val encoder: Encoder[PgReplicationSlotsViewRow] = Encoder.forProduct15[PgReplicationSlotsViewRow, /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[/* oid */ Long], Option[String], /* nullability unknown */ Option[Boolean], /* nullability unknown */ Option[Boolean], /* nullability unknown */ Option[Int], /* nullability unknown */ Option[TypoXid], /* nullability unknown */ Option[TypoXid], /* nullability unknown */ Option[/* pg_lsn */ Long], /* nullability unknown */ Option[/* pg_lsn */ Long], /* nullability unknown */ Option[String], /* nullability unknown */ Option[Long], /* nullability unknown */ Option[Boolean]]("slot_name", "plugin", "slot_type", "datoid", "database", "temporary", "active", "active_pid", "xmin", "catalog_xmin", "restart_lsn", "confirmed_flush_lsn", "wal_status", "safe_wal_size", "two_phase")(x => (x.slotName, x.plugin, x.slotType, x.datoid, x.database, x.temporary, x.active, x.activePid, x.xmin, x.catalogXmin, x.restartLsn, x.confirmedFlushLsn, x.walStatus, x.safeWalSize, x.twoPhase))(Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeBoolean), Encoder.encodeOption(Encoder.encodeBoolean), Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(TypoXid.encoder), Encoder.encodeOption(TypoXid.encoder), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeLong), Encoder.encodeOption(Encoder.encodeBoolean))
  implicit lazy val read: Read[PgReplicationSlotsViewRow] = new Read[PgReplicationSlotsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.BooleanMeta.get, Nullability.Nullable),
      (Meta.BooleanMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (TypoXid.get, Nullability.Nullable),
      (TypoXid.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.LongMeta.get, Nullability.Nullable),
      (Meta.BooleanMeta.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgReplicationSlotsViewRow(
      slotName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 0),
      plugin = Meta.StringMeta.get.unsafeGetNullable(rs, i + 1),
      slotType = Meta.StringMeta.get.unsafeGetNullable(rs, i + 2),
      datoid = Meta.LongMeta.get.unsafeGetNullable(rs, i + 3),
      database = Meta.StringMeta.get.unsafeGetNullable(rs, i + 4),
      temporary = Meta.BooleanMeta.get.unsafeGetNullable(rs, i + 5),
      active = Meta.BooleanMeta.get.unsafeGetNullable(rs, i + 6),
      activePid = Meta.IntMeta.get.unsafeGetNullable(rs, i + 7),
      xmin = TypoXid.get.unsafeGetNullable(rs, i + 8),
      catalogXmin = TypoXid.get.unsafeGetNullable(rs, i + 9),
      restartLsn = Meta.LongMeta.get.unsafeGetNullable(rs, i + 10),
      confirmedFlushLsn = Meta.LongMeta.get.unsafeGetNullable(rs, i + 11),
      walStatus = Meta.StringMeta.get.unsafeGetNullable(rs, i + 12),
      safeWalSize = Meta.LongMeta.get.unsafeGetNullable(rs, i + 13),
      twoPhase = Meta.BooleanMeta.get.unsafeGetNullable(rs, i + 14)
    )
  )
}
