/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package view_column_usage

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class ViewColumnUsageViewRow(
  viewCatalog: SqlIdentifier,
  viewSchema: SqlIdentifier,
  viewName: SqlIdentifier,
  tableCatalog: SqlIdentifier,
  tableSchema: SqlIdentifier,
  tableName: SqlIdentifier,
  columnName: SqlIdentifier
)

object ViewColumnUsageViewRow {
  implicit lazy val decoder: Decoder[ViewColumnUsageViewRow] = Decoder.forProduct7[ViewColumnUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("view_catalog", "view_schema", "view_name", "table_catalog", "table_schema", "table_name", "column_name")(ViewColumnUsageViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder)
  implicit lazy val encoder: Encoder[ViewColumnUsageViewRow] = Encoder.forProduct7[ViewColumnUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("view_catalog", "view_schema", "view_name", "table_catalog", "table_schema", "table_name", "column_name")(x => (x.viewCatalog, x.viewSchema, x.viewName, x.tableCatalog, x.tableSchema, x.tableName, x.columnName))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder)
  implicit lazy val read: Read[ViewColumnUsageViewRow] = new Read[ViewColumnUsageViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => ViewColumnUsageViewRow(
      viewCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      viewSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      viewName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      tableCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 3),
      tableSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      tableName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 5),
      columnName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 6)
    )
  )
}
