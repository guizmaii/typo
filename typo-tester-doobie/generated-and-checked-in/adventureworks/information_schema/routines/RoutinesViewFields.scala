/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routines

import adventureworks.information_schema.CardinalNumber
import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.TimeStamp
import adventureworks.information_schema.YesOrNo
import typo.dsl.SqlExpr.Field

trait RoutinesViewFields[Row] {
  val specificCatalog: Field[SqlIdentifier, Row]
  val specificSchema: Field[SqlIdentifier, Row]
  val specificName: Field[SqlIdentifier, Row]
  val routineCatalog: Field[SqlIdentifier, Row]
  val routineSchema: Field[SqlIdentifier, Row]
  val routineName: Field[SqlIdentifier, Row]
  val routineType: Field[CharacterData, Row]
  val moduleCatalog: Field[SqlIdentifier, Row]
  val moduleSchema: Field[SqlIdentifier, Row]
  val moduleName: Field[SqlIdentifier, Row]
  val udtCatalog: Field[SqlIdentifier, Row]
  val udtSchema: Field[SqlIdentifier, Row]
  val udtName: Field[SqlIdentifier, Row]
  val dataType: Field[CharacterData, Row]
  val characterMaximumLength: Field[CardinalNumber, Row]
  val characterOctetLength: Field[CardinalNumber, Row]
  val characterSetCatalog: Field[SqlIdentifier, Row]
  val characterSetSchema: Field[SqlIdentifier, Row]
  val characterSetName: Field[SqlIdentifier, Row]
  val collationCatalog: Field[SqlIdentifier, Row]
  val collationSchema: Field[SqlIdentifier, Row]
  val collationName: Field[SqlIdentifier, Row]
  val numericPrecision: Field[CardinalNumber, Row]
  val numericPrecisionRadix: Field[CardinalNumber, Row]
  val numericScale: Field[CardinalNumber, Row]
  val datetimePrecision: Field[CardinalNumber, Row]
  val intervalType: Field[CharacterData, Row]
  val intervalPrecision: Field[CardinalNumber, Row]
  val typeUdtCatalog: Field[SqlIdentifier, Row]
  val typeUdtSchema: Field[SqlIdentifier, Row]
  val typeUdtName: Field[SqlIdentifier, Row]
  val scopeCatalog: Field[SqlIdentifier, Row]
  val scopeSchema: Field[SqlIdentifier, Row]
  val scopeName: Field[SqlIdentifier, Row]
  val maximumCardinality: Field[CardinalNumber, Row]
  val dtdIdentifier: Field[SqlIdentifier, Row]
  val routineBody: Field[CharacterData, Row]
  val routineDefinition: Field[CharacterData, Row]
  val externalName: Field[CharacterData, Row]
  val externalLanguage: Field[CharacterData, Row]
  val parameterStyle: Field[CharacterData, Row]
  val isDeterministic: Field[YesOrNo, Row]
  val sqlDataAccess: Field[CharacterData, Row]
  val isNullCall: Field[YesOrNo, Row]
  val sqlPath: Field[CharacterData, Row]
  val schemaLevelRoutine: Field[YesOrNo, Row]
  val maxDynamicResultSets: Field[CardinalNumber, Row]
  val isUserDefinedCast: Field[YesOrNo, Row]
  val isImplicitlyInvocable: Field[YesOrNo, Row]
  val securityType: Field[CharacterData, Row]
  val toSqlSpecificCatalog: Field[SqlIdentifier, Row]
  val toSqlSpecificSchema: Field[SqlIdentifier, Row]
  val toSqlSpecificName: Field[SqlIdentifier, Row]
  val asLocator: Field[YesOrNo, Row]
  val created: Field[TimeStamp, Row]
  val lastAltered: Field[TimeStamp, Row]
  val newSavepointLevel: Field[YesOrNo, Row]
  val isUdtDependent: Field[YesOrNo, Row]
  val resultCastFromDataType: Field[CharacterData, Row]
  val resultCastAsLocator: Field[YesOrNo, Row]
  val resultCastCharMaxLength: Field[CardinalNumber, Row]
  val resultCastCharOctetLength: Field[CardinalNumber, Row]
  val resultCastCharSetCatalog: Field[SqlIdentifier, Row]
  val resultCastCharSetSchema: Field[SqlIdentifier, Row]
  val resultCastCharSetName: Field[SqlIdentifier, Row]
  val resultCastCollationCatalog: Field[SqlIdentifier, Row]
  val resultCastCollationSchema: Field[SqlIdentifier, Row]
  val resultCastCollationName: Field[SqlIdentifier, Row]
  val resultCastNumericPrecision: Field[CardinalNumber, Row]
  val resultCastNumericPrecisionRadix: Field[CardinalNumber, Row]
  val resultCastNumericScale: Field[CardinalNumber, Row]
  val resultCastDatetimePrecision: Field[CardinalNumber, Row]
  val resultCastIntervalType: Field[CharacterData, Row]
  val resultCastIntervalPrecision: Field[CardinalNumber, Row]
  val resultCastTypeUdtCatalog: Field[SqlIdentifier, Row]
  val resultCastTypeUdtSchema: Field[SqlIdentifier, Row]
  val resultCastTypeUdtName: Field[SqlIdentifier, Row]
  val resultCastScopeCatalog: Field[SqlIdentifier, Row]
  val resultCastScopeSchema: Field[SqlIdentifier, Row]
  val resultCastScopeName: Field[SqlIdentifier, Row]
  val resultCastMaximumCardinality: Field[CardinalNumber, Row]
  val resultCastDtdIdentifier: Field[SqlIdentifier, Row]
}
object RoutinesViewFields extends RoutinesViewStructure[RoutinesViewRow](None, identity, (_, x) => x)

