/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package check_constraint_routine_usage

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class CheckConstraintRoutineUsageViewRow(
  constraintCatalog: SqlIdentifier,
  constraintSchema: SqlIdentifier,
  constraintName: SqlIdentifier,
  specificCatalog: SqlIdentifier,
  specificSchema: SqlIdentifier,
  specificName: SqlIdentifier
)

object CheckConstraintRoutineUsageViewRow {
  implicit lazy val decoder: Decoder[CheckConstraintRoutineUsageViewRow] = Decoder.forProduct6[CheckConstraintRoutineUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("constraint_catalog", "constraint_schema", "constraint_name", "specific_catalog", "specific_schema", "specific_name")(CheckConstraintRoutineUsageViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder)
  implicit lazy val encoder: Encoder[CheckConstraintRoutineUsageViewRow] = Encoder.forProduct6[CheckConstraintRoutineUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("constraint_catalog", "constraint_schema", "constraint_name", "specific_catalog", "specific_schema", "specific_name")(x => (x.constraintCatalog, x.constraintSchema, x.constraintName, x.specificCatalog, x.specificSchema, x.specificName))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder)
  implicit lazy val read: Read[CheckConstraintRoutineUsageViewRow] = new Read[CheckConstraintRoutineUsageViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => CheckConstraintRoutineUsageViewRow(
      constraintCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      constraintSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      constraintName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      specificCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 3),
      specificSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      specificName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 5)
    )
  )
}
