/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package `_pg_foreign_tables`

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgForeignTablesViewRow(
  foreignTableCatalog: SqlIdentifier,
  foreignTableSchema: SqlIdentifier,
  foreignTableName: SqlIdentifier,
  ftoptions: Array[String],
  foreignServerCatalog: SqlIdentifier,
  foreignServerName: SqlIdentifier,
  authorizationIdentifier: SqlIdentifier
)

object PgForeignTablesViewRow {
  implicit lazy val decoder: Decoder[PgForeignTablesViewRow] = Decoder.forProduct7[PgForeignTablesViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, Array[String], SqlIdentifier, SqlIdentifier, SqlIdentifier]("foreign_table_catalog", "foreign_table_schema", "foreign_table_name", "ftoptions", "foreign_server_catalog", "foreign_server_name", "authorization_identifier")(PgForeignTablesViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, Decoder.decodeArray[String](Decoder.decodeString, implicitly), SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder)
  implicit lazy val encoder: Encoder[PgForeignTablesViewRow] = Encoder.forProduct7[PgForeignTablesViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, Array[String], SqlIdentifier, SqlIdentifier, SqlIdentifier]("foreign_table_catalog", "foreign_table_schema", "foreign_table_name", "ftoptions", "foreign_server_catalog", "foreign_server_name", "authorization_identifier")(x => (x.foreignTableCatalog, x.foreignTableSchema, x.foreignTableName, x.ftoptions, x.foreignServerCatalog, x.foreignServerName, x.authorizationIdentifier))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, Encoder.encodeIterable[String, Array](Encoder.encodeString, implicitly), SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder)
  implicit lazy val read: Read[PgForeignTablesViewRow] = new Read[PgForeignTablesViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (adventureworks.StringArrayMeta.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgForeignTablesViewRow(
      foreignTableCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      foreignTableSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      foreignTableName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      ftoptions = adventureworks.StringArrayMeta.get.unsafeGetNonNullable(rs, i + 3),
      foreignServerCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      foreignServerName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 5),
      authorizationIdentifier = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 6)
    )
  )
}
