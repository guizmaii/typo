/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package foreign_table_options

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class ForeignTableOptionsViewRow(
  /** Points to [[`_pg_foreign_tables`.PgForeignTablesViewRow.foreignTableCatalog]] */
  foreignTableCatalog: SqlIdentifier,
  /** Points to [[`_pg_foreign_tables`.PgForeignTablesViewRow.foreignTableSchema]] */
  foreignTableSchema: SqlIdentifier,
  /** Points to [[`_pg_foreign_tables`.PgForeignTablesViewRow.foreignTableName]] */
  foreignTableName: SqlIdentifier,
  optionName: SqlIdentifier,
  optionValue: CharacterData
)

object ForeignTableOptionsViewRow {
  implicit lazy val decoder: Decoder[ForeignTableOptionsViewRow] = Decoder.forProduct5[ForeignTableOptionsViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData]("foreign_table_catalog", "foreign_table_schema", "foreign_table_name", "option_name", "option_value")(ForeignTableOptionsViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, CharacterData.decoder)
  implicit lazy val encoder: Encoder[ForeignTableOptionsViewRow] = Encoder.forProduct5[ForeignTableOptionsViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData]("foreign_table_catalog", "foreign_table_schema", "foreign_table_name", "option_name", "option_value")(x => (x.foreignTableCatalog, x.foreignTableSchema, x.foreignTableName, x.optionName, x.optionValue))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, CharacterData.encoder)
  implicit lazy val read: Read[ForeignTableOptionsViewRow] = new Read[ForeignTableOptionsViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (CharacterData.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => ForeignTableOptionsViewRow(
      foreignTableCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      foreignTableSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      foreignTableName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      optionName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 3),
      optionValue = CharacterData.get.unsafeGetNonNullable(rs, i + 4)
    )
  )
}
