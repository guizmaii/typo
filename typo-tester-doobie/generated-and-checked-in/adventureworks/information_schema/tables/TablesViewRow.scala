/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package tables

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.YesOrNo
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class TablesViewRow(
  tableCatalog: SqlIdentifier,
  tableSchema: SqlIdentifier,
  tableName: SqlIdentifier,
  tableType: CharacterData,
  selfReferencingColumnName: SqlIdentifier,
  referenceGeneration: CharacterData,
  userDefinedTypeCatalog: SqlIdentifier,
  userDefinedTypeSchema: SqlIdentifier,
  userDefinedTypeName: SqlIdentifier,
  isInsertableInto: YesOrNo,
  isTyped: YesOrNo,
  commitAction: CharacterData
)

object TablesViewRow {
  implicit lazy val decoder: Decoder[TablesViewRow] = Decoder.forProduct12[TablesViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData, SqlIdentifier, CharacterData, SqlIdentifier, SqlIdentifier, SqlIdentifier, YesOrNo, YesOrNo, CharacterData]("table_catalog", "table_schema", "table_name", "table_type", "self_referencing_column_name", "reference_generation", "user_defined_type_catalog", "user_defined_type_schema", "user_defined_type_name", "is_insertable_into", "is_typed", "commit_action")(TablesViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, CharacterData.decoder, SqlIdentifier.decoder, CharacterData.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, YesOrNo.decoder, YesOrNo.decoder, CharacterData.decoder)
  implicit lazy val encoder: Encoder[TablesViewRow] = Encoder.forProduct12[TablesViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData, SqlIdentifier, CharacterData, SqlIdentifier, SqlIdentifier, SqlIdentifier, YesOrNo, YesOrNo, CharacterData]("table_catalog", "table_schema", "table_name", "table_type", "self_referencing_column_name", "reference_generation", "user_defined_type_catalog", "user_defined_type_schema", "user_defined_type_name", "is_insertable_into", "is_typed", "commit_action")(x => (x.tableCatalog, x.tableSchema, x.tableName, x.tableType, x.selfReferencingColumnName, x.referenceGeneration, x.userDefinedTypeCatalog, x.userDefinedTypeSchema, x.userDefinedTypeName, x.isInsertableInto, x.isTyped, x.commitAction))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, CharacterData.encoder, SqlIdentifier.encoder, CharacterData.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, YesOrNo.encoder, YesOrNo.encoder, CharacterData.encoder)
  implicit lazy val read: Read[TablesViewRow] = new Read[TablesViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (CharacterData.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (CharacterData.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (YesOrNo.get, Nullability.NoNulls),
      (YesOrNo.get, Nullability.NoNulls),
      (CharacterData.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => TablesViewRow(
      tableCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      tableSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      tableName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      tableType = CharacterData.get.unsafeGetNonNullable(rs, i + 3),
      selfReferencingColumnName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      referenceGeneration = CharacterData.get.unsafeGetNonNullable(rs, i + 5),
      userDefinedTypeCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 6),
      userDefinedTypeSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 7),
      userDefinedTypeName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 8),
      isInsertableInto = YesOrNo.get.unsafeGetNonNullable(rs, i + 9),
      isTyped = YesOrNo.get.unsafeGetNonNullable(rs, i + 10),
      commitAction = CharacterData.get.unsafeGetNonNullable(rs, i + 11)
    )
  )
}
