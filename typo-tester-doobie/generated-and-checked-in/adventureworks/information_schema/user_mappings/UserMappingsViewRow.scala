/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package user_mappings

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class UserMappingsViewRow(
  /** Points to [[`_pg_user_mappings`.PgUserMappingsViewRow.authorizationIdentifier]] */
  authorizationIdentifier: SqlIdentifier,
  /** Points to [[`_pg_user_mappings`.PgUserMappingsViewRow.foreignServerCatalog]] */
  foreignServerCatalog: SqlIdentifier,
  /** Points to [[`_pg_user_mappings`.PgUserMappingsViewRow.foreignServerName]] */
  foreignServerName: SqlIdentifier
)

object UserMappingsViewRow {
  implicit lazy val decoder: Decoder[UserMappingsViewRow] = Decoder.forProduct3[UserMappingsViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier]("authorization_identifier", "foreign_server_catalog", "foreign_server_name")(UserMappingsViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder)
  implicit lazy val encoder: Encoder[UserMappingsViewRow] = Encoder.forProduct3[UserMappingsViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier]("authorization_identifier", "foreign_server_catalog", "foreign_server_name")(x => (x.authorizationIdentifier, x.foreignServerCatalog, x.foreignServerName))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder)
  implicit lazy val read: Read[UserMappingsViewRow] = new Read[UserMappingsViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => UserMappingsViewRow(
      authorizationIdentifier = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      foreignServerCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      foreignServerName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2)
    )
  )
}
