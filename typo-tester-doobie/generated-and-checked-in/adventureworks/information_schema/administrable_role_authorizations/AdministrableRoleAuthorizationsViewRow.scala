/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package administrable_role_authorizations

import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class AdministrableRoleAuthorizationsViewRow(
  /** Points to [[applicable_roles.ApplicableRolesViewRow.grantee]] */
  grantee: Option[/* nullability unknown */ String],
  /** Points to [[applicable_roles.ApplicableRolesViewRow.roleName]] */
  roleName: Option[/* nullability unknown */ String],
  /** Points to [[applicable_roles.ApplicableRolesViewRow.isGrantable]] */
  isGrantable: Option[/* nullability unknown */ /* max 3 chars */ String]
)

object AdministrableRoleAuthorizationsViewRow {
  implicit lazy val decoder: Decoder[AdministrableRoleAuthorizationsViewRow] = Decoder.forProduct3[AdministrableRoleAuthorizationsViewRow, Option[/* nullability unknown */ String], Option[/* nullability unknown */ String], Option[/* nullability unknown */ /* max 3 chars */ String]]("grantee", "role_name", "is_grantable")(AdministrableRoleAuthorizationsViewRow.apply)(Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString))
  implicit lazy val encoder: Encoder[AdministrableRoleAuthorizationsViewRow] = Encoder.forProduct3[AdministrableRoleAuthorizationsViewRow, Option[/* nullability unknown */ String], Option[/* nullability unknown */ String], Option[/* nullability unknown */ /* max 3 chars */ String]]("grantee", "role_name", "is_grantable")(x => (x.grantee, x.roleName, x.isGrantable))(Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString))
  implicit lazy val read: Read[AdministrableRoleAuthorizationsViewRow] = new Read[AdministrableRoleAuthorizationsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => AdministrableRoleAuthorizationsViewRow(
      grantee = Meta.StringMeta.get.unsafeGetNullable(rs, i + 0),
      roleName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 1),
      isGrantable = Meta.StringMeta.get.unsafeGetNullable(rs, i + 2)
    )
  )
}
