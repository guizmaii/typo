/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package `_pg_foreign_data_wrappers`

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgForeignDataWrappersViewRow(
  oid: /* oid */ Long,
  fdwowner: /* oid */ Long,
  fdwoptions: Array[String],
  foreignDataWrapperCatalog: SqlIdentifier,
  foreignDataWrapperName: SqlIdentifier,
  authorizationIdentifier: SqlIdentifier,
  foreignDataWrapperLanguage: CharacterData
)

object PgForeignDataWrappersViewRow {
  implicit lazy val decoder: Decoder[PgForeignDataWrappersViewRow] = Decoder.forProduct7[PgForeignDataWrappersViewRow, /* oid */ Long, /* oid */ Long, Array[String], SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData]("oid", "fdwowner", "fdwoptions", "foreign_data_wrapper_catalog", "foreign_data_wrapper_name", "authorization_identifier", "foreign_data_wrapper_language")(PgForeignDataWrappersViewRow.apply)(Decoder.decodeLong, Decoder.decodeLong, Decoder.decodeArray[String](Decoder.decodeString, implicitly), SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, CharacterData.decoder)
  implicit lazy val encoder: Encoder[PgForeignDataWrappersViewRow] = Encoder.forProduct7[PgForeignDataWrappersViewRow, /* oid */ Long, /* oid */ Long, Array[String], SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData]("oid", "fdwowner", "fdwoptions", "foreign_data_wrapper_catalog", "foreign_data_wrapper_name", "authorization_identifier", "foreign_data_wrapper_language")(x => (x.oid, x.fdwowner, x.fdwoptions, x.foreignDataWrapperCatalog, x.foreignDataWrapperName, x.authorizationIdentifier, x.foreignDataWrapperLanguage))(Encoder.encodeLong, Encoder.encodeLong, Encoder.encodeIterable[String, Array](Encoder.encodeString, implicitly), SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, CharacterData.encoder)
  implicit lazy val read: Read[PgForeignDataWrappersViewRow] = new Read[PgForeignDataWrappersViewRow](
    gets = List(
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (adventureworks.StringArrayMeta.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (CharacterData.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgForeignDataWrappersViewRow(
      oid = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 0),
      fdwowner = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 1),
      fdwoptions = adventureworks.StringArrayMeta.get.unsafeGetNonNullable(rs, i + 2),
      foreignDataWrapperCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 3),
      foreignDataWrapperName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      authorizationIdentifier = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 5),
      foreignDataWrapperLanguage = CharacterData.get.unsafeGetNonNullable(rs, i + 6)
    )
  )
}
