/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package table_privileges

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.YesOrNo
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class TablePrivilegesViewRow(
  grantor: SqlIdentifier,
  grantee: SqlIdentifier,
  tableCatalog: SqlIdentifier,
  tableSchema: SqlIdentifier,
  tableName: SqlIdentifier,
  privilegeType: CharacterData,
  isGrantable: YesOrNo,
  withHierarchy: YesOrNo
)

object TablePrivilegesViewRow {
  implicit lazy val decoder: Decoder[TablePrivilegesViewRow] = Decoder.forProduct8[TablePrivilegesViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData, YesOrNo, YesOrNo]("grantor", "grantee", "table_catalog", "table_schema", "table_name", "privilege_type", "is_grantable", "with_hierarchy")(TablePrivilegesViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, CharacterData.decoder, YesOrNo.decoder, YesOrNo.decoder)
  implicit lazy val encoder: Encoder[TablePrivilegesViewRow] = Encoder.forProduct8[TablePrivilegesViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, CharacterData, YesOrNo, YesOrNo]("grantor", "grantee", "table_catalog", "table_schema", "table_name", "privilege_type", "is_grantable", "with_hierarchy")(x => (x.grantor, x.grantee, x.tableCatalog, x.tableSchema, x.tableName, x.privilegeType, x.isGrantable, x.withHierarchy))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, CharacterData.encoder, YesOrNo.encoder, YesOrNo.encoder)
  implicit lazy val read: Read[TablePrivilegesViewRow] = new Read[TablePrivilegesViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (CharacterData.get, Nullability.NoNulls),
      (YesOrNo.get, Nullability.NoNulls),
      (YesOrNo.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => TablePrivilegesViewRow(
      grantor = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      grantee = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      tableCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      tableSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 3),
      tableName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      privilegeType = CharacterData.get.unsafeGetNonNullable(rs, i + 5),
      isGrantable = YesOrNo.get.unsafeGetNonNullable(rs, i + 6),
      withHierarchy = YesOrNo.get.unsafeGetNonNullable(rs, i + 7)
    )
  )
}
