/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package constraint_table_usage

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class ConstraintTableUsageViewRow(
  tableCatalog: SqlIdentifier,
  tableSchema: SqlIdentifier,
  tableName: SqlIdentifier,
  constraintCatalog: SqlIdentifier,
  constraintSchema: SqlIdentifier,
  constraintName: SqlIdentifier
)

object ConstraintTableUsageViewRow {
  implicit lazy val decoder: Decoder[ConstraintTableUsageViewRow] = Decoder.forProduct6[ConstraintTableUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("table_catalog", "table_schema", "table_name", "constraint_catalog", "constraint_schema", "constraint_name")(ConstraintTableUsageViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder)
  implicit lazy val encoder: Encoder[ConstraintTableUsageViewRow] = Encoder.forProduct6[ConstraintTableUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("table_catalog", "table_schema", "table_name", "constraint_catalog", "constraint_schema", "constraint_name")(x => (x.tableCatalog, x.tableSchema, x.tableName, x.constraintCatalog, x.constraintSchema, x.constraintName))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder)
  implicit lazy val read: Read[ConstraintTableUsageViewRow] = new Read[ConstraintTableUsageViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => ConstraintTableUsageViewRow(
      tableCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      tableSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      tableName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      constraintCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 3),
      constraintSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      constraintName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 5)
    )
  )
}
