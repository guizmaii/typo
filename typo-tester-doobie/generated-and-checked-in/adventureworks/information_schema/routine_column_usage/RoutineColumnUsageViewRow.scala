/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routine_column_usage

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class RoutineColumnUsageViewRow(
  specificCatalog: SqlIdentifier,
  specificSchema: SqlIdentifier,
  specificName: SqlIdentifier,
  routineCatalog: SqlIdentifier,
  routineSchema: SqlIdentifier,
  routineName: SqlIdentifier,
  tableCatalog: SqlIdentifier,
  tableSchema: SqlIdentifier,
  tableName: SqlIdentifier,
  columnName: SqlIdentifier
)

object RoutineColumnUsageViewRow {
  implicit lazy val decoder: Decoder[RoutineColumnUsageViewRow] = Decoder.forProduct10[RoutineColumnUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("specific_catalog", "specific_schema", "specific_name", "routine_catalog", "routine_schema", "routine_name", "table_catalog", "table_schema", "table_name", "column_name")(RoutineColumnUsageViewRow.apply)(SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder, SqlIdentifier.decoder)
  implicit lazy val encoder: Encoder[RoutineColumnUsageViewRow] = Encoder.forProduct10[RoutineColumnUsageViewRow, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier, SqlIdentifier]("specific_catalog", "specific_schema", "specific_name", "routine_catalog", "routine_schema", "routine_name", "table_catalog", "table_schema", "table_name", "column_name")(x => (x.specificCatalog, x.specificSchema, x.specificName, x.routineCatalog, x.routineSchema, x.routineName, x.tableCatalog, x.tableSchema, x.tableName, x.columnName))(SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder, SqlIdentifier.encoder)
  implicit lazy val read: Read[RoutineColumnUsageViewRow] = new Read[RoutineColumnUsageViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls),
      (SqlIdentifier.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => RoutineColumnUsageViewRow(
      specificCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 0),
      specificSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 1),
      specificName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 2),
      routineCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 3),
      routineSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 4),
      routineName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 5),
      tableCatalog = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 6),
      tableSchema = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 7),
      tableName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 8),
      columnName = SqlIdentifier.get.unsafeGetNonNullable(rs, i + 9)
    )
  )
}
