/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vjobcandidateemployment

import adventureworks.customtypes.TypoLocalDate
import adventureworks.humanresources.jobcandidate.JobcandidateId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class VjobcandidateemploymentViewRow(
  /** Points to [[jobcandidate.JobcandidateRow.jobcandidateid]] */
  jobcandidateid: JobcandidateId,
  `Emp.StartDate`: TypoLocalDate,
  `Emp.EndDate`: TypoLocalDate,
  `Emp.OrgName`: /* max 100 chars */ String,
  `Emp.JobTitle`: /* max 100 chars */ String,
  `Emp.Responsibility`: String,
  `Emp.FunctionCategory`: String,
  `Emp.IndustryCategory`: String,
  `Emp.Loc.CountryRegion`: String,
  `Emp.Loc.State`: String,
  `Emp.Loc.City`: String
)

object VjobcandidateemploymentViewRow {
  implicit lazy val decoder: Decoder[VjobcandidateemploymentViewRow] = Decoder.forProduct11[VjobcandidateemploymentViewRow, JobcandidateId, TypoLocalDate, TypoLocalDate, /* max 100 chars */ String, /* max 100 chars */ String, String, String, String, String, String, String]("jobcandidateid", "Emp.StartDate", "Emp.EndDate", "Emp.OrgName", "Emp.JobTitle", "Emp.Responsibility", "Emp.FunctionCategory", "Emp.IndustryCategory", "Emp.Loc.CountryRegion", "Emp.Loc.State", "Emp.Loc.City")(VjobcandidateemploymentViewRow.apply)(JobcandidateId.decoder, TypoLocalDate.decoder, TypoLocalDate.decoder, Decoder.decodeString, Decoder.decodeString, Decoder.decodeString, Decoder.decodeString, Decoder.decodeString, Decoder.decodeString, Decoder.decodeString, Decoder.decodeString)
  implicit lazy val encoder: Encoder[VjobcandidateemploymentViewRow] = Encoder.forProduct11[VjobcandidateemploymentViewRow, JobcandidateId, TypoLocalDate, TypoLocalDate, /* max 100 chars */ String, /* max 100 chars */ String, String, String, String, String, String, String]("jobcandidateid", "Emp.StartDate", "Emp.EndDate", "Emp.OrgName", "Emp.JobTitle", "Emp.Responsibility", "Emp.FunctionCategory", "Emp.IndustryCategory", "Emp.Loc.CountryRegion", "Emp.Loc.State", "Emp.Loc.City")(x => (x.jobcandidateid, x.`Emp.StartDate`, x.`Emp.EndDate`, x.`Emp.OrgName`, x.`Emp.JobTitle`, x.`Emp.Responsibility`, x.`Emp.FunctionCategory`, x.`Emp.IndustryCategory`, x.`Emp.Loc.CountryRegion`, x.`Emp.Loc.State`, x.`Emp.Loc.City`))(JobcandidateId.encoder, TypoLocalDate.encoder, TypoLocalDate.encoder, Encoder.encodeString, Encoder.encodeString, Encoder.encodeString, Encoder.encodeString, Encoder.encodeString, Encoder.encodeString, Encoder.encodeString, Encoder.encodeString)
  implicit lazy val read: Read[VjobcandidateemploymentViewRow] = new Read[VjobcandidateemploymentViewRow](
    gets = List(
      (JobcandidateId.get, Nullability.NoNulls),
      (TypoLocalDate.get, Nullability.NoNulls),
      (TypoLocalDate.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => VjobcandidateemploymentViewRow(
      jobcandidateid = JobcandidateId.get.unsafeGetNonNullable(rs, i + 0),
      `Emp.StartDate` = TypoLocalDate.get.unsafeGetNonNullable(rs, i + 1),
      `Emp.EndDate` = TypoLocalDate.get.unsafeGetNonNullable(rs, i + 2),
      `Emp.OrgName` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 3),
      `Emp.JobTitle` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 4),
      `Emp.Responsibility` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 5),
      `Emp.FunctionCategory` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 6),
      `Emp.IndustryCategory` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 7),
      `Emp.Loc.CountryRegion` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 8),
      `Emp.Loc.State` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 9),
      `Emp.Loc.City` = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 10)
    )
  )
}
