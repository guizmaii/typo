/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package so

import adventureworks.sales.specialoffer.SpecialofferId
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SoRow(
  id: Option[Int],
  /** Points to [[sales.specialoffer.SpecialofferRow.specialofferid]] */
  specialofferid: Option[SpecialofferId],
  /** Points to [[sales.specialoffer.SpecialofferRow.description]] */
  description: Option[String],
  /** Points to [[sales.specialoffer.SpecialofferRow.discountpct]] */
  discountpct: Option[BigDecimal],
  /** Points to [[sales.specialoffer.SpecialofferRow.type]] */
  `type`: Option[String],
  /** Points to [[sales.specialoffer.SpecialofferRow.category]] */
  category: Option[String],
  /** Points to [[sales.specialoffer.SpecialofferRow.startdate]] */
  startdate: Option[LocalDateTime],
  /** Points to [[sales.specialoffer.SpecialofferRow.enddate]] */
  enddate: Option[LocalDateTime],
  /** Points to [[sales.specialoffer.SpecialofferRow.minqty]] */
  minqty: Option[Int],
  /** Points to [[sales.specialoffer.SpecialofferRow.maxqty]] */
  maxqty: Option[Int],
  /** Points to [[sales.specialoffer.SpecialofferRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[sales.specialoffer.SpecialofferRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object SoRow {
  implicit val oFormat: OFormat[SoRow] = new OFormat[SoRow]{
    override def writes(o: SoRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "specialofferid" -> o.specialofferid,
        "description" -> o.description,
        "discountpct" -> o.discountpct,
        "type" -> o.`type`,
        "category" -> o.category,
        "startdate" -> o.startdate,
        "enddate" -> o.enddate,
        "minqty" -> o.minqty,
        "maxqty" -> o.maxqty,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SoRow] = {
      JsResult.fromTry(
        Try(
          SoRow(
            id = json.\("id").toOption.map(_.as[Int]),
            specialofferid = json.\("specialofferid").toOption.map(_.as[SpecialofferId]),
            description = json.\("description").toOption.map(_.as[String]),
            discountpct = json.\("discountpct").toOption.map(_.as[BigDecimal]),
            `type` = json.\("type").toOption.map(_.as[String]),
            category = json.\("category").toOption.map(_.as[String]),
            startdate = json.\("startdate").toOption.map(_.as[LocalDateTime]),
            enddate = json.\("enddate").toOption.map(_.as[LocalDateTime]),
            minqty = json.\("minqty").toOption.map(_.as[Int]),
            maxqty = json.\("maxqty").toOption.map(_.as[Int]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
