/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package d

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.production.document.DocumentId
import java.time.LocalDateTime
import java.util.UUID

sealed abstract class DFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class DFieldValue[T](name: String, value: T) extends DFieldOrIdValue(name, value)

object DFieldValue {
  case class title(override val value: Option[String]) extends DFieldValue("title", value)
  case class owner(override val value: Option[BusinessentityId]) extends DFieldValue("owner", value)
  case class folderflag(override val value: Boolean) extends DFieldValue("folderflag", value)
  case class filename(override val value: Option[String]) extends DFieldValue("filename", value)
  case class fileextension(override val value: Option[String]) extends DFieldValue("fileextension", value)
  case class revision(override val value: Option[String]) extends DFieldValue("revision", value)
  case class changenumber(override val value: Option[Int]) extends DFieldValue("changenumber", value)
  case class status(override val value: Option[Int]) extends DFieldValue("status", value)
  case class documentsummary(override val value: Option[String]) extends DFieldValue("documentsummary", value)
  case class document(override val value: Option[Byte]) extends DFieldValue("document", value)
  case class rowguid(override val value: Option[UUID]) extends DFieldValue("rowguid", value)
  case class modifieddate(override val value: Option[LocalDateTime]) extends DFieldValue("modifieddate", value)
  case class documentnode(override val value: Option[DocumentId]) extends DFieldValue("documentnode", value)
}
