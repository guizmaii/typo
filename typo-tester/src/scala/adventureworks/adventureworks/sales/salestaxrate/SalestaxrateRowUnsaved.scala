/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salestaxrate

import adventureworks.Defaulted
import adventureworks.person.stateprovince.StateprovinceId
import adventureworks.public.Name
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `sales.salestaxrate` which has not been persisted yet */
case class SalestaxrateRowUnsaved(
  stateprovinceid: StateprovinceId,
  taxtype: Int,
  taxrate: Defaulted[BigDecimal],
  name: Name,
  rowguid: Defaulted[UUID],
  modifieddate: Defaulted[LocalDateTime]
)
object SalestaxrateRowUnsaved {
  implicit val oFormat: OFormat[SalestaxrateRowUnsaved] = new OFormat[SalestaxrateRowUnsaved]{
    override def writes(o: SalestaxrateRowUnsaved): JsObject =
      Json.obj(
        "stateprovinceid" -> o.stateprovinceid,
        "taxtype" -> o.taxtype,
        "taxrate" -> o.taxrate,
        "name" -> o.name,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SalestaxrateRowUnsaved] = {
      JsResult.fromTry(
        Try(
          SalestaxrateRowUnsaved(
            stateprovinceid = json.\("stateprovinceid").as[StateprovinceId],
            taxtype = json.\("taxtype").as[Int],
            taxrate = json.\("taxrate").as[Defaulted[BigDecimal]],
            name = json.\("name").as[Name],
            rowguid = json.\("rowguid").as[Defaulted[UUID]],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
