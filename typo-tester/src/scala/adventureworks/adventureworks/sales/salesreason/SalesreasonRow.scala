/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesreason

import adventureworks.public.Name
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SalesreasonRow(
  /** Primary key for SalesReason records.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesreason","column_name":"salesreasonid","ordinal_position":1,"column_default":"nextval('sales.salesreason_salesreasonid_seq'::regclass)","is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  salesreasonid: SalesreasonId,
  /** Sales reason description.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesreason","column_name":"name","ordinal_position":2,"is_nullable":"NO","data_type":"character varying","character_maximum_length":50,"character_octet_length":200,"domain_catalog":"Adventureworks","domain_schema":"public","domain_name":"Name","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  name: Name,
  /** Category the sales reason belongs to.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesreason","column_name":"reasontype","ordinal_position":3,"is_nullable":"NO","data_type":"character varying","character_maximum_length":50,"character_octet_length":200,"domain_catalog":"Adventureworks","domain_schema":"public","domain_name":"Name","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  reasontype: Name,
  /** debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesreason","column_name":"modifieddate","ordinal_position":4,"column_default":"now()","is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  modifieddate: LocalDateTime
)

object SalesreasonRow {
  implicit val oFormat: OFormat[SalesreasonRow] = new OFormat[SalesreasonRow]{
    override def writes(o: SalesreasonRow): JsObject =
      Json.obj(
        "salesreasonid" -> o.salesreasonid,
        "name" -> o.name,
        "reasontype" -> o.reasontype,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SalesreasonRow] = {
      JsResult.fromTry(
        Try(
          SalesreasonRow(
            salesreasonid = json.\("salesreasonid").as[SalesreasonId],
            name = json.\("name").as[Name],
            reasontype = json.\("reasontype").as[Name],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
