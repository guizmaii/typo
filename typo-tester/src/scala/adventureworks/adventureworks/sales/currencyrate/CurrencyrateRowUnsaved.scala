/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package currencyrate

import adventureworks.Defaulted
import adventureworks.sales.currency.CurrencyId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `sales.currencyrate` which has not been persisted yet */
case class CurrencyrateRowUnsaved(
  /** Date and time the exchange rate was obtained.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"currencyrate","column_name":"currencyratedate","ordinal_position":2,"is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  currencyratedate: LocalDateTime,
  /** Exchange rate was converted from this currency code.
      Points to [[currency.CurrencyRow.currencycode]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"currencyrate","column_name":"fromcurrencycode","ordinal_position":3,"is_nullable":"NO","data_type":"character","character_maximum_length":3,"character_octet_length":12,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"bpchar","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  fromcurrencycode: CurrencyId,
  /** Exchange rate was converted to this currency code.
      Points to [[currency.CurrencyRow.currencycode]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"currencyrate","column_name":"tocurrencycode","ordinal_position":4,"is_nullable":"NO","data_type":"character","character_maximum_length":3,"character_octet_length":12,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"bpchar","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  tocurrencycode: CurrencyId,
  /** Average exchange rate for the day.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"currencyrate","column_name":"averagerate","ordinal_position":5,"is_nullable":"NO","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  averagerate: BigDecimal,
  /** Final exchange rate for the day.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"currencyrate","column_name":"endofdayrate","ordinal_position":6,"is_nullable":"NO","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  endofdayrate: BigDecimal,
  /** Default: now()
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"currencyrate","column_name":"modifieddate","ordinal_position":7,"column_default":"now()","is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  modifieddate: Defaulted[LocalDateTime]
) {
  def unsafeToRow(currencyrateid: CurrencyrateId): CurrencyrateRow =
    CurrencyrateRow(
      currencyrateid = currencyrateid,
      currencyratedate = currencyratedate,
      fromcurrencycode = fromcurrencycode,
      tocurrencycode = tocurrencycode,
      averagerate = averagerate,
      endofdayrate = endofdayrate,
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => sys.error("cannot produce row when you depend on a value which is defaulted in database")
                       case Defaulted.Provided(value) => value
                     }
    )
}
object CurrencyrateRowUnsaved {
  implicit val oFormat: OFormat[CurrencyrateRowUnsaved] = new OFormat[CurrencyrateRowUnsaved]{
    override def writes(o: CurrencyrateRowUnsaved): JsObject =
      Json.obj(
        "currencyratedate" -> o.currencyratedate,
        "fromcurrencycode" -> o.fromcurrencycode,
        "tocurrencycode" -> o.tocurrencycode,
        "averagerate" -> o.averagerate,
        "endofdayrate" -> o.endofdayrate,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[CurrencyrateRowUnsaved] = {
      JsResult.fromTry(
        Try(
          CurrencyrateRowUnsaved(
            currencyratedate = json.\("currencyratedate").as[LocalDateTime],
            fromcurrencycode = json.\("fromcurrencycode").as[CurrencyId],
            tocurrencycode = json.\("tocurrencycode").as[CurrencyId],
            averagerate = json.\("averagerate").as[BigDecimal],
            endofdayrate = json.\("endofdayrate").as[BigDecimal],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
