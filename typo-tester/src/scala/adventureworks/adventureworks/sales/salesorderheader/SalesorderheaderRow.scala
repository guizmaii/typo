/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesorderheader

import adventureworks.person.address.AddressId
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.AccountNumberDomain
import adventureworks.public.FlagDomain
import adventureworks.public.OrderNumberDomain
import adventureworks.purchasing.shipmethod.ShipmethodId
import adventureworks.sales.creditcard.CreditcardId
import adventureworks.sales.currencyrate.CurrencyrateId
import adventureworks.sales.customer.CustomerId
import adventureworks.sales.salesterritory.SalesterritoryId
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SalesorderheaderRow(
  salesorderid: SalesorderheaderId /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"salesorderid","ordinal_position":1,"column_default":"nextval('sales.salesorderheader_salesorderid_seq'::regclass)","is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  revisionnumber: Int /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"revisionnumber","ordinal_position":2,"column_default":"0","is_nullable":"NO","data_type":"smallint","numeric_precision":16,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int2","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  orderdate: LocalDateTime /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"orderdate","ordinal_position":3,"column_default":"now()","is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  duedate: LocalDateTime /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"duedate","ordinal_position":4,"is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  shipdate: Option[LocalDateTime] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"shipdate","ordinal_position":5,"is_nullable":"YES","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  status: Int /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"status","ordinal_position":6,"column_default":"1","is_nullable":"NO","data_type":"smallint","numeric_precision":16,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int2","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  onlineorderflag: FlagDomain /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"onlineorderflag","ordinal_position":7,"column_default":"true","is_nullable":"NO","data_type":"boolean","domain_catalog":"Adventureworks","domain_schema":"public","domain_name":"Flag","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  purchaseordernumber: Option[OrderNumberDomain] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"purchaseordernumber","ordinal_position":9,"is_nullable":"YES","data_type":"character varying","character_maximum_length":25,"character_octet_length":100,"domain_catalog":"Adventureworks","domain_schema":"public","domain_name":"OrderNumber","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  accountnumber: Option[AccountNumberDomain] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"accountnumber","ordinal_position":10,"is_nullable":"YES","data_type":"character varying","character_maximum_length":15,"character_octet_length":60,"domain_catalog":"Adventureworks","domain_schema":"public","domain_name":"AccountNumber","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[customer.CustomerRow.customerid]] */
  customerid: CustomerId /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"customerid","ordinal_position":11,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"11","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[salesperson.SalespersonRow.businessentityid]] */
  salespersonid: Option[BusinessentityId] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"salespersonid","ordinal_position":12,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"12","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[salesterritory.SalesterritoryRow.territoryid]] */
  territoryid: Option[SalesterritoryId] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"territoryid","ordinal_position":13,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"13","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[person.address.AddressRow.addressid]] */
  billtoaddressid: AddressId /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"billtoaddressid","ordinal_position":14,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"14","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[person.address.AddressRow.addressid]] */
  shiptoaddressid: AddressId /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"shiptoaddressid","ordinal_position":15,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"15","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.shipmethod.ShipmethodRow.shipmethodid]] */
  shipmethodid: ShipmethodId /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"shipmethodid","ordinal_position":16,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"16","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[creditcard.CreditcardRow.creditcardid]] */
  creditcardid: Option[CreditcardId] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"creditcardid","ordinal_position":17,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"17","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  creditcardapprovalcode: Option[String] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"creditcardapprovalcode","ordinal_position":18,"is_nullable":"YES","data_type":"character varying","character_maximum_length":15,"character_octet_length":60,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"18","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[currencyrate.CurrencyrateRow.currencyrateid]] */
  currencyrateid: Option[CurrencyrateId] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"currencyrateid","ordinal_position":19,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"19","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  subtotal: BigDecimal /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"subtotal","ordinal_position":20,"column_default":"0.00","is_nullable":"NO","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"20","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  taxamt: BigDecimal /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"taxamt","ordinal_position":21,"column_default":"0.00","is_nullable":"NO","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"21","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  freight: BigDecimal /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"freight","ordinal_position":22,"column_default":"0.00","is_nullable":"NO","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"22","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  totaldue: Option[BigDecimal] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"totaldue","ordinal_position":23,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"23","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  comment: Option[String] /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"comment","ordinal_position":24,"is_nullable":"YES","data_type":"character varying","character_maximum_length":128,"character_octet_length":512,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"24","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  rowguid: UUID /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"rowguid","ordinal_position":25,"column_default":"uuid_generate_v1()","is_nullable":"NO","data_type":"uuid","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"uuid","dtd_identifier":"25","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  modifieddate: LocalDateTime /* {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"salesorderheader","column_name":"modifieddate","ordinal_position":26,"column_default":"now()","is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"26","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
)

object SalesorderheaderRow {
  def rowParser(prefix: String): RowParser[SalesorderheaderRow] = { row =>
    Success(
      SalesorderheaderRow(
        salesorderid = row[SalesorderheaderId](prefix + "salesorderid"),
        revisionnumber = row[Int](prefix + "revisionnumber"),
        orderdate = row[LocalDateTime](prefix + "orderdate"),
        duedate = row[LocalDateTime](prefix + "duedate"),
        shipdate = row[Option[LocalDateTime]](prefix + "shipdate"),
        status = row[Int](prefix + "status"),
        onlineorderflag = row[FlagDomain](prefix + "onlineorderflag"),
        purchaseordernumber = row[Option[OrderNumberDomain]](prefix + "purchaseordernumber"),
        accountnumber = row[Option[AccountNumberDomain]](prefix + "accountnumber"),
        customerid = row[CustomerId](prefix + "customerid"),
        salespersonid = row[Option[BusinessentityId]](prefix + "salespersonid"),
        territoryid = row[Option[SalesterritoryId]](prefix + "territoryid"),
        billtoaddressid = row[AddressId](prefix + "billtoaddressid"),
        shiptoaddressid = row[AddressId](prefix + "shiptoaddressid"),
        shipmethodid = row[ShipmethodId](prefix + "shipmethodid"),
        creditcardid = row[Option[CreditcardId]](prefix + "creditcardid"),
        creditcardapprovalcode = row[Option[String]](prefix + "creditcardapprovalcode"),
        currencyrateid = row[Option[CurrencyrateId]](prefix + "currencyrateid"),
        subtotal = row[BigDecimal](prefix + "subtotal"),
        taxamt = row[BigDecimal](prefix + "taxamt"),
        freight = row[BigDecimal](prefix + "freight"),
        totaldue = row[Option[BigDecimal]](prefix + "totaldue"),
        comment = row[Option[String]](prefix + "comment"),
        rowguid = row[UUID](prefix + "rowguid"),
        modifieddate = row[LocalDateTime](prefix + "modifieddate")
      )
    )
  }

  implicit val oFormat: OFormat[SalesorderheaderRow] = new OFormat[SalesorderheaderRow]{
    override def writes(o: SalesorderheaderRow): JsObject =
      Json.obj(
        "salesorderid" -> o.salesorderid,
        "revisionnumber" -> o.revisionnumber,
        "orderdate" -> o.orderdate,
        "duedate" -> o.duedate,
        "shipdate" -> o.shipdate,
        "status" -> o.status,
        "onlineorderflag" -> o.onlineorderflag,
        "purchaseordernumber" -> o.purchaseordernumber,
        "accountnumber" -> o.accountnumber,
        "customerid" -> o.customerid,
        "salespersonid" -> o.salespersonid,
        "territoryid" -> o.territoryid,
        "billtoaddressid" -> o.billtoaddressid,
        "shiptoaddressid" -> o.shiptoaddressid,
        "shipmethodid" -> o.shipmethodid,
        "creditcardid" -> o.creditcardid,
        "creditcardapprovalcode" -> o.creditcardapprovalcode,
        "currencyrateid" -> o.currencyrateid,
        "subtotal" -> o.subtotal,
        "taxamt" -> o.taxamt,
        "freight" -> o.freight,
        "totaldue" -> o.totaldue,
        "comment" -> o.comment,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SalesorderheaderRow] = {
      JsResult.fromTry(
        Try(
          SalesorderheaderRow(
            salesorderid = json.\("salesorderid").as[SalesorderheaderId],
            revisionnumber = json.\("revisionnumber").as[Int],
            orderdate = json.\("orderdate").as[LocalDateTime],
            duedate = json.\("duedate").as[LocalDateTime],
            shipdate = json.\("shipdate").toOption.map(_.as[LocalDateTime]),
            status = json.\("status").as[Int],
            onlineorderflag = json.\("onlineorderflag").as[FlagDomain],
            purchaseordernumber = json.\("purchaseordernumber").toOption.map(_.as[OrderNumberDomain]),
            accountnumber = json.\("accountnumber").toOption.map(_.as[AccountNumberDomain]),
            customerid = json.\("customerid").as[CustomerId],
            salespersonid = json.\("salespersonid").toOption.map(_.as[BusinessentityId]),
            territoryid = json.\("territoryid").toOption.map(_.as[SalesterritoryId]),
            billtoaddressid = json.\("billtoaddressid").as[AddressId],
            shiptoaddressid = json.\("shiptoaddressid").as[AddressId],
            shipmethodid = json.\("shipmethodid").as[ShipmethodId],
            creditcardid = json.\("creditcardid").toOption.map(_.as[CreditcardId]),
            creditcardapprovalcode = json.\("creditcardapprovalcode").toOption.map(_.as[String]),
            currencyrateid = json.\("currencyrateid").toOption.map(_.as[CurrencyrateId]),
            subtotal = json.\("subtotal").as[BigDecimal],
            taxamt = json.\("taxamt").as[BigDecimal],
            freight = json.\("freight").as[BigDecimal],
            totaldue = json.\("totaldue").toOption.map(_.as[BigDecimal]),
            comment = json.\("comment").toOption.map(_.as[String]),
            rowguid = json.\("rowguid").as[UUID],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
