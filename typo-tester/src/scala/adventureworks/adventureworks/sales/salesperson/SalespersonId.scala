/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesperson

import anorm.Column
import anorm.ParameterMetaData
import anorm.ToStatement
import play.api.libs.json.Format

case class SalespersonId(value: Int) extends AnyVal
object SalespersonId {
  implicit val ordering: Ordering[SalespersonId] = Ordering.by(_.value)
  implicit val format: Format[SalespersonId] = implicitly[Format[Int]].bimap(SalespersonId.apply, _.value)
  implicit val toStatement: ToStatement[SalespersonId] = implicitly[ToStatement[Int]].contramap(_.value)
  implicit val column: Column[SalespersonId] = implicitly[Column[Int]].map(SalespersonId.apply)
  implicit val parameterMetadata: ParameterMetaData[SalespersonId] = new ParameterMetaData[SalespersonId] {
    override def sqlType: String = implicitly[ParameterMetaData[Int]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[Int]].jdbcType
  }

}
