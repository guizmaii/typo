/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesperson

import adventureworks.Defaulted
import adventureworks.sales.salesterritory.SalesterritoryId
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `sales.salesperson` which has not been persisted yet */
case class SalespersonRowUnsaved(
  territoryid: Option[SalesterritoryId],
  salesquota: Option[BigDecimal],
  bonus: Defaulted[BigDecimal],
  commissionpct: Defaulted[BigDecimal],
  salesytd: Defaulted[BigDecimal],
  saleslastyear: Defaulted[BigDecimal],
  rowguid: Defaulted[UUID],
  modifieddate: Defaulted[LocalDateTime]
)
object SalespersonRowUnsaved {
  implicit val oFormat: OFormat[SalespersonRowUnsaved] = new OFormat[SalespersonRowUnsaved]{
    override def writes(o: SalespersonRowUnsaved): JsObject =
      Json.obj(
        "territoryid" -> o.territoryid,
        "salesquota" -> o.salesquota,
        "bonus" -> o.bonus,
        "commissionpct" -> o.commissionpct,
        "salesytd" -> o.salesytd,
        "saleslastyear" -> o.saleslastyear,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SalespersonRowUnsaved] = {
      JsResult.fromTry(
        Try(
          SalespersonRowUnsaved(
            territoryid = json.\("territoryid").toOption.map(_.as[SalesterritoryId]),
            salesquota = json.\("salesquota").toOption.map(_.as[BigDecimal]),
            bonus = json.\("bonus").as[Defaulted[BigDecimal]],
            commissionpct = json.\("commissionpct").as[Defaulted[BigDecimal]],
            salesytd = json.\("salesytd").as[Defaulted[BigDecimal]],
            saleslastyear = json.\("saleslastyear").as[Defaulted[BigDecimal]],
            rowguid = json.\("rowguid").as[Defaulted[UUID]],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
