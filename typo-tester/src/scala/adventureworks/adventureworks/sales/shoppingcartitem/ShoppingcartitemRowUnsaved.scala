/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package shoppingcartitem

import adventureworks.Defaulted
import adventureworks.production.product.ProductId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `sales.shoppingcartitem` which has not been persisted yet */
case class ShoppingcartitemRowUnsaved(
  /** Shopping cart identification number.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"shoppingcartitem","column_name":"shoppingcartid","ordinal_position":2,"is_nullable":"NO","data_type":"character varying","character_maximum_length":50,"character_octet_length":200,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  shoppingcartid: String,
  /** Default: 1
      Product quantity ordered.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"shoppingcartitem","column_name":"quantity","ordinal_position":3,"column_default":"1","is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  quantity: Defaulted[Int],
  /** Product ordered. Foreign key to Product.ProductID.
      Points to [[production.product.ProductRow.productid]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"shoppingcartitem","column_name":"productid","ordinal_position":4,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  productid: ProductId,
  /** Default: now()
      Date the time the record was created.
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"shoppingcartitem","column_name":"datecreated","ordinal_position":5,"column_default":"now()","is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  datecreated: Defaulted[LocalDateTime],
  /** Default: now()
      debug: {"table_catalog":"Adventureworks","table_schema":"sales","table_name":"shoppingcartitem","column_name":"modifieddate","ordinal_position":6,"column_default":"now()","is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  modifieddate: Defaulted[LocalDateTime]
) {
  def unsafeToRow(shoppingcartitemid: ShoppingcartitemId): ShoppingcartitemRow =
    ShoppingcartitemRow(
      shoppingcartitemid = shoppingcartitemid,
      shoppingcartid = shoppingcartid,
      quantity = quantity match {
                   case Defaulted.UseDefault => sys.error("cannot produce row when you depend on a value which is defaulted in database")
                   case Defaulted.Provided(value) => value
                 },
      productid = productid,
      datecreated = datecreated match {
                      case Defaulted.UseDefault => sys.error("cannot produce row when you depend on a value which is defaulted in database")
                      case Defaulted.Provided(value) => value
                    },
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => sys.error("cannot produce row when you depend on a value which is defaulted in database")
                       case Defaulted.Provided(value) => value
                     }
    )
}
object ShoppingcartitemRowUnsaved {
  implicit val oFormat: OFormat[ShoppingcartitemRowUnsaved] = new OFormat[ShoppingcartitemRowUnsaved]{
    override def writes(o: ShoppingcartitemRowUnsaved): JsObject =
      Json.obj(
        "shoppingcartid" -> o.shoppingcartid,
        "quantity" -> o.quantity,
        "productid" -> o.productid,
        "datecreated" -> o.datecreated,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[ShoppingcartitemRowUnsaved] = {
      JsResult.fromTry(
        Try(
          ShoppingcartitemRowUnsaved(
            shoppingcartid = json.\("shoppingcartid").as[String],
            quantity = json.\("quantity").as[Defaulted[Int]],
            productid = json.\("productid").as[ProductId],
            datecreated = json.\("datecreated").as[Defaulted[LocalDateTime]],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
