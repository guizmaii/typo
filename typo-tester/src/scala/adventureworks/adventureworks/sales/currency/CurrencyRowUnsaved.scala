/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package currency

import adventureworks.Defaulted
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class CurrencyRowUnsaved(
  name: String,
  modifieddate: Defaulted[LocalDateTime]
)
object CurrencyRowUnsaved {
  implicit val oFormat: OFormat[CurrencyRowUnsaved] = new OFormat[CurrencyRowUnsaved]{
    override def writes(o: CurrencyRowUnsaved): JsObject =
      Json.obj(
        "name" -> o.name,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[CurrencyRowUnsaved] = {
      JsResult.fromTry(
        Try(
          CurrencyRowUnsaved(
            name = json.\("name").as[String],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
