/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package purchasing
package purchaseorderdetail

import adventureworks.production.product.ProductId
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PurchaseorderdetailRow(
  /** Points to [[purchaseorderheader.PurchaseorderheaderRow.purchaseorderid]] */
  purchaseorderid: PurchaseorderheaderId /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"purchaseorderid","ordinal_position":1,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  purchaseorderdetailid: Int /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"purchaseorderdetailid","ordinal_position":2,"column_default":"nextval('purchasing.purchaseorderdetail_purchaseorderdetailid_seq'::regclass)","is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  duedate: LocalDateTime /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"duedate","ordinal_position":3,"is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  orderqty: Int /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"orderqty","ordinal_position":4,"is_nullable":"NO","data_type":"smallint","numeric_precision":16,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int2","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[production.product.ProductRow.productid]] */
  productid: ProductId /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"productid","ordinal_position":5,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  unitprice: BigDecimal /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"unitprice","ordinal_position":6,"is_nullable":"NO","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  receivedqty: BigDecimal /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"receivedqty","ordinal_position":8,"is_nullable":"NO","data_type":"numeric","numeric_precision":8,"numeric_precision_radix":10,"numeric_scale":2,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  rejectedqty: BigDecimal /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"rejectedqty","ordinal_position":9,"is_nullable":"NO","data_type":"numeric","numeric_precision":8,"numeric_precision_radix":10,"numeric_scale":2,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  modifieddate: LocalDateTime /* {"table_catalog":"Adventureworks","table_schema":"purchasing","table_name":"purchaseorderdetail","column_name":"modifieddate","ordinal_position":11,"column_default":"now()","is_nullable":"NO","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"11","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
){
   val compositeId: PurchaseorderdetailId = PurchaseorderdetailId(purchaseorderid, purchaseorderdetailid)
 }

object PurchaseorderdetailRow {
  def rowParser(prefix: String): RowParser[PurchaseorderdetailRow] = { row =>
    Success(
      PurchaseorderdetailRow(
        purchaseorderid = row[PurchaseorderheaderId](prefix + "purchaseorderid"),
        purchaseorderdetailid = row[Int](prefix + "purchaseorderdetailid"),
        duedate = row[LocalDateTime](prefix + "duedate"),
        orderqty = row[Int](prefix + "orderqty"),
        productid = row[ProductId](prefix + "productid"),
        unitprice = row[BigDecimal](prefix + "unitprice"),
        receivedqty = row[BigDecimal](prefix + "receivedqty"),
        rejectedqty = row[BigDecimal](prefix + "rejectedqty"),
        modifieddate = row[LocalDateTime](prefix + "modifieddate")
      )
    )
  }

  implicit val oFormat: OFormat[PurchaseorderdetailRow] = new OFormat[PurchaseorderdetailRow]{
    override def writes(o: PurchaseorderdetailRow): JsObject =
      Json.obj(
        "purchaseorderid" -> o.purchaseorderid,
        "purchaseorderdetailid" -> o.purchaseorderdetailid,
        "duedate" -> o.duedate,
        "orderqty" -> o.orderqty,
        "productid" -> o.productid,
        "unitprice" -> o.unitprice,
        "receivedqty" -> o.receivedqty,
        "rejectedqty" -> o.rejectedqty,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PurchaseorderdetailRow] = {
      JsResult.fromTry(
        Try(
          PurchaseorderdetailRow(
            purchaseorderid = json.\("purchaseorderid").as[PurchaseorderheaderId],
            purchaseorderdetailid = json.\("purchaseorderdetailid").as[Int],
            duedate = json.\("duedate").as[LocalDateTime],
            orderqty = json.\("orderqty").as[Int],
            productid = json.\("productid").as[ProductId],
            unitprice = json.\("unitprice").as[BigDecimal],
            receivedqty = json.\("receivedqty").as[BigDecimal],
            rejectedqty = json.\("rejectedqty").as[BigDecimal],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
