/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package purchasing
package purchaseorderdetail

import adventureworks.Defaulted
import adventureworks.production.product.ProductId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PurchaseorderdetailRowUnsaved(
  duedate: LocalDateTime,
  orderqty: Int,
  productid: ProductId,
  unitprice: BigDecimal,
  receivedqty: BigDecimal,
  rejectedqty: BigDecimal,
  modifieddate: Defaulted[LocalDateTime]
)
object PurchaseorderdetailRowUnsaved {
  implicit val oFormat: OFormat[PurchaseorderdetailRowUnsaved] = new OFormat[PurchaseorderdetailRowUnsaved]{
    override def writes(o: PurchaseorderdetailRowUnsaved): JsObject =
      Json.obj(
        "duedate" -> o.duedate,
        "orderqty" -> o.orderqty,
        "productid" -> o.productid,
        "unitprice" -> o.unitprice,
        "receivedqty" -> o.receivedqty,
        "rejectedqty" -> o.rejectedqty,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PurchaseorderdetailRowUnsaved] = {
      JsResult.fromTry(
        Try(
          PurchaseorderdetailRowUnsaved(
            duedate = json.\("duedate").as[LocalDateTime],
            orderqty = json.\("orderqty").as[Int],
            productid = json.\("productid").as[ProductId],
            unitprice = json.\("unitprice").as[BigDecimal],
            receivedqty = json.\("receivedqty").as[BigDecimal],
            rejectedqty = json.\("rejectedqty").as[BigDecimal],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
