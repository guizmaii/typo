/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package purchasing
package vendor

import adventureworks.Defaulted
import adventureworks.public.AccountNumberDomain
import adventureworks.public.FlagDomain
import adventureworks.public.NameDomain
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `purchasing.vendor` which has not been persisted yet */
case class VendorRowUnsaved(
  accountnumber: AccountNumberDomain,
  name: NameDomain,
  creditrating: Int,
  preferredvendorstatus: Defaulted[FlagDomain],
  activeflag: Defaulted[FlagDomain],
  purchasingwebserviceurl: Option[String],
  modifieddate: Defaulted[LocalDateTime]
)
object VendorRowUnsaved {
  implicit val oFormat: OFormat[VendorRowUnsaved] = new OFormat[VendorRowUnsaved]{
    override def writes(o: VendorRowUnsaved): JsObject =
      Json.obj(
        "accountnumber" -> o.accountnumber,
        "name" -> o.name,
        "creditrating" -> o.creditrating,
        "preferredvendorstatus" -> o.preferredvendorstatus,
        "activeflag" -> o.activeflag,
        "purchasingwebserviceurl" -> o.purchasingwebserviceurl,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[VendorRowUnsaved] = {
      JsResult.fromTry(
        Try(
          VendorRowUnsaved(
            accountnumber = json.\("accountnumber").as[AccountNumberDomain],
            name = json.\("name").as[NameDomain],
            creditrating = json.\("creditrating").as[Int],
            preferredvendorstatus = json.\("preferredvendorstatus").as[Defaulted[FlagDomain]],
            activeflag = json.\("activeflag").as[Defaulted[FlagDomain]],
            purchasingwebserviceurl = json.\("purchasingwebserviceurl").toOption.map(_.as[String]),
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
