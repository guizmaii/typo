/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productcategory

import adventureworks.Defaulted
import adventureworks.public.NameDomain
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class ProductcategoryRowUnsaved(
  name: NameDomain,
  rowguid: Defaulted[UUID],
  modifieddate: Defaulted[LocalDateTime]
)
object ProductcategoryRowUnsaved {
  implicit val oFormat: OFormat[ProductcategoryRowUnsaved] = new OFormat[ProductcategoryRowUnsaved]{
    override def writes(o: ProductcategoryRowUnsaved): JsObject =
      Json.obj(
        "name" -> o.name,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[ProductcategoryRowUnsaved] = {
      JsResult.fromTry(
        Try(
          ProductcategoryRowUnsaved(
            name = json.\("name").as[NameDomain],
            rowguid = json.\("rowguid").as[Defaulted[UUID]],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
