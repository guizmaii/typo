/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package workorder

import adventureworks.Defaulted
import adventureworks.production.product.ProductId
import adventureworks.production.scrapreason.ScrapreasonId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class WorkorderRowUnsaved(
  productid: ProductId,
  orderqty: Int,
  scrappedqty: Int,
  startdate: LocalDateTime,
  enddate: Option[LocalDateTime],
  duedate: LocalDateTime,
  scrapreasonid: Option[ScrapreasonId],
  modifieddate: Defaulted[LocalDateTime]
)
object WorkorderRowUnsaved {
  implicit val oFormat: OFormat[WorkorderRowUnsaved] = new OFormat[WorkorderRowUnsaved]{
    override def writes(o: WorkorderRowUnsaved): JsObject =
      Json.obj(
        "productid" -> o.productid,
        "orderqty" -> o.orderqty,
        "scrappedqty" -> o.scrappedqty,
        "startdate" -> o.startdate,
        "enddate" -> o.enddate,
        "duedate" -> o.duedate,
        "scrapreasonid" -> o.scrapreasonid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[WorkorderRowUnsaved] = {
      JsResult.fromTry(
        Try(
          WorkorderRowUnsaved(
            productid = json.\("productid").as[ProductId],
            orderqty = json.\("orderqty").as[Int],
            scrappedqty = json.\("scrappedqty").as[Int],
            startdate = json.\("startdate").as[LocalDateTime],
            enddate = json.\("enddate").toOption.map(_.as[LocalDateTime]),
            duedate = json.\("duedate").as[LocalDateTime],
            scrapreasonid = json.\("scrapreasonid").toOption.map(_.as[ScrapreasonId]),
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
