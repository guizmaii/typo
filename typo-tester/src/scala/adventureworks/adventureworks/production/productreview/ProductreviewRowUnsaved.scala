/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productreview

import adventureworks.Defaulted
import adventureworks.public.NameDomain
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class ProductreviewRowUnsaved(
  productid: Int,
  reviewername: NameDomain,
  reviewdate: Defaulted[LocalDateTime],
  emailaddress: String,
  rating: Int,
  comments: Option[String],
  modifieddate: Defaulted[LocalDateTime]
)
object ProductreviewRowUnsaved {
  implicit val oFormat: OFormat[ProductreviewRowUnsaved] = new OFormat[ProductreviewRowUnsaved]{
    override def writes(o: ProductreviewRowUnsaved): JsObject =
      Json.obj(
        "productid" -> o.productid,
        "reviewername" -> o.reviewername,
        "reviewdate" -> o.reviewdate,
        "emailaddress" -> o.emailaddress,
        "rating" -> o.rating,
        "comments" -> o.comments,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[ProductreviewRowUnsaved] = {
      JsResult.fromTry(
        Try(
          ProductreviewRowUnsaved(
            productid = json.\("productid").as[Int],
            reviewername = json.\("reviewername").as[NameDomain],
            reviewdate = json.\("reviewdate").as[Defaulted[LocalDateTime]],
            emailaddress = json.\("emailaddress").as[String],
            rating = json.\("rating").as[Int],
            comments = json.\("comments").toOption.map(_.as[String]),
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
