/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productmodel

import adventureworks.Defaulted
import adventureworks.public.NameDomain
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class ProductmodelRowUnsaved(
  name: NameDomain,
  catalogdescription: Option[/* xml */ String],
  instructions: Option[/* xml */ String],
  rowguid: Defaulted[UUID],
  modifieddate: Defaulted[LocalDateTime]
)
object ProductmodelRowUnsaved {
  implicit val oFormat: OFormat[ProductmodelRowUnsaved] = new OFormat[ProductmodelRowUnsaved]{
    override def writes(o: ProductmodelRowUnsaved): JsObject =
      Json.obj(
        "name" -> o.name,
        "catalogdescription" -> o.catalogdescription,
        "instructions" -> o.instructions,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[ProductmodelRowUnsaved] = {
      JsResult.fromTry(
        Try(
          ProductmodelRowUnsaved(
            name = json.\("name").as[NameDomain],
            catalogdescription = json.\("catalogdescription").toOption.map(_.as[/* xml */ String]),
            instructions = json.\("instructions").toOption.map(_.as[/* xml */ String]),
            rowguid = json.\("rowguid").as[Defaulted[UUID]],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
