/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productcosthistory

import adventureworks.Defaulted
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `production.productcosthistory` which has not been persisted yet */
case class ProductcosthistoryRowUnsaved(
  enddate: Option[LocalDateTime],
  standardcost: BigDecimal,
  modifieddate: Defaulted[LocalDateTime]
)
object ProductcosthistoryRowUnsaved {
  implicit val oFormat: OFormat[ProductcosthistoryRowUnsaved] = new OFormat[ProductcosthistoryRowUnsaved]{
    override def writes(o: ProductcosthistoryRowUnsaved): JsObject =
      Json.obj(
        "enddate" -> o.enddate,
        "standardcost" -> o.standardcost,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[ProductcosthistoryRowUnsaved] = {
      JsResult.fromTry(
        Try(
          ProductcosthistoryRowUnsaved(
            enddate = json.\("enddate").toOption.map(_.as[LocalDateTime]),
            standardcost = json.\("standardcost").as[BigDecimal],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
