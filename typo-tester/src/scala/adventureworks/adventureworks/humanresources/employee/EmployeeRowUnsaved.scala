/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package employee

import adventureworks.Defaulted
import adventureworks.public.Flag
import java.time.LocalDate
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `humanresources.employee` which has not been persisted yet */
case class EmployeeRowUnsaved(
  nationalidnumber: String,
  loginid: String,
  jobtitle: String,
  birthdate: LocalDate,
  maritalstatus: /* bpchar */ String,
  gender: /* bpchar */ String,
  hiredate: LocalDate,
  salariedflag: Defaulted[Flag],
  vacationhours: Defaulted[Int],
  sickleavehours: Defaulted[Int],
  currentflag: Defaulted[Flag],
  rowguid: Defaulted[UUID],
  modifieddate: Defaulted[LocalDateTime],
  organizationnode: Defaulted[Option[String]]
)
object EmployeeRowUnsaved {
  implicit val oFormat: OFormat[EmployeeRowUnsaved] = new OFormat[EmployeeRowUnsaved]{
    override def writes(o: EmployeeRowUnsaved): JsObject =
      Json.obj(
        "nationalidnumber" -> o.nationalidnumber,
        "loginid" -> o.loginid,
        "jobtitle" -> o.jobtitle,
        "birthdate" -> o.birthdate,
        "maritalstatus" -> o.maritalstatus,
        "gender" -> o.gender,
        "hiredate" -> o.hiredate,
        "salariedflag" -> o.salariedflag,
        "vacationhours" -> o.vacationhours,
        "sickleavehours" -> o.sickleavehours,
        "currentflag" -> o.currentflag,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate,
        "organizationnode" -> o.organizationnode
      )
  
    override def reads(json: JsValue): JsResult[EmployeeRowUnsaved] = {
      JsResult.fromTry(
        Try(
          EmployeeRowUnsaved(
            nationalidnumber = json.\("nationalidnumber").as[String],
            loginid = json.\("loginid").as[String],
            jobtitle = json.\("jobtitle").as[String],
            birthdate = json.\("birthdate").as[LocalDate],
            maritalstatus = json.\("maritalstatus").as[/* bpchar */ String],
            gender = json.\("gender").as[/* bpchar */ String],
            hiredate = json.\("hiredate").as[LocalDate],
            salariedflag = json.\("salariedflag").as[Defaulted[Flag]],
            vacationhours = json.\("vacationhours").as[Defaulted[Int]],
            sickleavehours = json.\("sickleavehours").as[Defaulted[Int]],
            currentflag = json.\("currentflag").as[Defaulted[Flag]],
            rowguid = json.\("rowguid").as[Defaulted[UUID]],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]],
            organizationnode = json.\("organizationnode").as[Defaulted[Option[String]]]
          )
        )
      )
    }
  }
}
