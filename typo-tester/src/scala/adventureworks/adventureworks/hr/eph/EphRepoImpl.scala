/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package eph

import anorm.NamedParameter
import anorm.ParameterValue
import anorm.SqlStringInterpolation
import java.sql.Connection

object EphRepoImpl extends EphRepo {
  override def selectAll(implicit c: Connection): List[EphRow] = {
    SQL"""select id, businessentityid, ratechangedate, rate, payfrequency, modifieddate from hr.eph""".as(EphRow.rowParser("").*)
  }
  override def selectByFieldValues(fieldValues: List[EphFieldOrIdValue[_]])(implicit c: Connection): List[EphRow] = {
    fieldValues match {
      case Nil => selectAll
      case nonEmpty =>
        val namedParams = nonEmpty.map{
          case EphFieldValue.id(value) => NamedParameter("id", ParameterValue.from(value))
          case EphFieldValue.businessentityid(value) => NamedParameter("businessentityid", ParameterValue.from(value))
          case EphFieldValue.ratechangedate(value) => NamedParameter("ratechangedate", ParameterValue.from(value))
          case EphFieldValue.rate(value) => NamedParameter("rate", ParameterValue.from(value))
          case EphFieldValue.payfrequency(value) => NamedParameter("payfrequency", ParameterValue.from(value))
          case EphFieldValue.modifieddate(value) => NamedParameter("modifieddate", ParameterValue.from(value))
        }
        val q = s"""select * from hr.eph where ${namedParams.map(x => s"${x.name} = {${x.name}}").mkString(" AND ")}"""
        // this line is here to include an extension method which is only needed for scala 3. no import is emitted for `SQL` to avoid warning for scala 2
        import anorm._
        SQL(q)
          .on(namedParams: _*)
          .as(EphRow.rowParser("").*)
    }
  
  }
}
