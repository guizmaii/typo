/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import anorm.Column
import anorm.ParameterMetaData
import anorm.ToStatement
import play.api.libs.json.Format

case class AccountNumberDomain(value: String) extends AnyVal
object AccountNumberDomain {
  implicit def ordering(implicit ev: Ordering[String]): Ordering[AccountNumberDomain] = Ordering.by(_.value)
  implicit val format: Format[AccountNumberDomain] = implicitly[Format[String]].bimap(AccountNumberDomain.apply, _.value)
  implicit val toStatement: ToStatement[AccountNumberDomain] = implicitly[ToStatement[String]].contramap(_.value)
  implicit val column: Column[AccountNumberDomain] = implicitly[Column[String]].map(AccountNumberDomain.apply)
  implicit val parameterMetadata: ParameterMetaData[AccountNumberDomain] = new ParameterMetaData[AccountNumberDomain] {
    override def sqlType: String = implicitly[ParameterMetaData[String]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[String]].jdbcType
  }

}
