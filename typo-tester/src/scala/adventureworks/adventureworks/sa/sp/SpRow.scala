/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sp

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.salesterritory.SalesterritoryId
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SpRow(
  /** debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"id","ordinal_position":1,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  id: Option[Int],
  /** Points to [[sales.salesperson.SalespersonRow.businessentityid]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"businessentityid","ordinal_position":2,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  businessentityid: Option[BusinessentityId],
  /** Points to [[sales.salesperson.SalespersonRow.territoryid]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"territoryid","ordinal_position":3,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  territoryid: Option[SalesterritoryId],
  /** Points to [[sales.salesperson.SalespersonRow.salesquota]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"salesquota","ordinal_position":4,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  salesquota: Option[BigDecimal],
  /** Points to [[sales.salesperson.SalespersonRow.bonus]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"bonus","ordinal_position":5,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  bonus: Option[BigDecimal],
  /** Points to [[sales.salesperson.SalespersonRow.commissionpct]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"commissionpct","ordinal_position":6,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  commissionpct: Option[BigDecimal],
  /** Points to [[sales.salesperson.SalespersonRow.salesytd]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"salesytd","ordinal_position":7,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  salesytd: Option[BigDecimal],
  /** Points to [[sales.salesperson.SalespersonRow.saleslastyear]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"saleslastyear","ordinal_position":8,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  saleslastyear: Option[BigDecimal],
  /** Points to [[sales.salesperson.SalespersonRow.rowguid]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"rowguid","ordinal_position":9,"is_nullable":"YES","data_type":"uuid","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"uuid","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  rowguid: Option[UUID],
  /** Points to [[sales.salesperson.SalespersonRow.modifieddate]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"sp","column_name":"modifieddate","ordinal_position":10,"is_nullable":"YES","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  modifieddate: Option[LocalDateTime]
)

object SpRow {
  def rowParser(prefix: String): RowParser[SpRow] = { row =>
    Success(
      SpRow(
        id = row[Option[Int]](prefix + "id"),
        businessentityid = row[Option[BusinessentityId]](prefix + "businessentityid"),
        territoryid = row[Option[SalesterritoryId]](prefix + "territoryid"),
        salesquota = row[Option[BigDecimal]](prefix + "salesquota"),
        bonus = row[Option[BigDecimal]](prefix + "bonus"),
        commissionpct = row[Option[BigDecimal]](prefix + "commissionpct"),
        salesytd = row[Option[BigDecimal]](prefix + "salesytd"),
        saleslastyear = row[Option[BigDecimal]](prefix + "saleslastyear"),
        rowguid = row[Option[UUID]](prefix + "rowguid"),
        modifieddate = row[Option[LocalDateTime]](prefix + "modifieddate")
      )
    )
  }

  implicit val oFormat: OFormat[SpRow] = new OFormat[SpRow]{
    override def writes(o: SpRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "businessentityid" -> o.businessentityid,
        "territoryid" -> o.territoryid,
        "salesquota" -> o.salesquota,
        "bonus" -> o.bonus,
        "commissionpct" -> o.commissionpct,
        "salesytd" -> o.salesytd,
        "saleslastyear" -> o.saleslastyear,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SpRow] = {
      JsResult.fromTry(
        Try(
          SpRow(
            id = json.\("id").toOption.map(_.as[Int]),
            businessentityid = json.\("businessentityid").toOption.map(_.as[BusinessentityId]),
            territoryid = json.\("territoryid").toOption.map(_.as[SalesterritoryId]),
            salesquota = json.\("salesquota").toOption.map(_.as[BigDecimal]),
            bonus = json.\("bonus").toOption.map(_.as[BigDecimal]),
            commissionpct = json.\("commissionpct").toOption.map(_.as[BigDecimal]),
            salesytd = json.\("salesytd").toOption.map(_.as[BigDecimal]),
            saleslastyear = json.\("saleslastyear").toOption.map(_.as[BigDecimal]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
