/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package st

import adventureworks.person.countryregion.CountryregionId
import adventureworks.public.Name
import adventureworks.sales.salesterritory.SalesterritoryId
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class StRow(
  /** debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"id","ordinal_position":1,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  id: Option[Int],
  /** Points to [[sales.salesterritory.SalesterritoryRow.territoryid]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"territoryid","ordinal_position":2,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  territoryid: Option[SalesterritoryId],
  /** Points to [[sales.salesterritory.SalesterritoryRow.name]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"name","ordinal_position":3,"is_nullable":"YES","data_type":"character varying","character_maximum_length":50,"character_octet_length":200,"domain_catalog":"Adventureworks","domain_schema":"public","domain_name":"Name","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  name: Option[Name],
  /** Points to [[sales.salesterritory.SalesterritoryRow.countryregioncode]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"countryregioncode","ordinal_position":4,"is_nullable":"YES","data_type":"character varying","character_maximum_length":3,"character_octet_length":12,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  countryregioncode: Option[CountryregionId],
  /** Points to [[sales.salesterritory.SalesterritoryRow.group]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"group","ordinal_position":5,"is_nullable":"YES","data_type":"character varying","character_maximum_length":50,"character_octet_length":200,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  group: Option[String],
  /** Points to [[sales.salesterritory.SalesterritoryRow.salesytd]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"salesytd","ordinal_position":6,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  salesytd: Option[BigDecimal],
  /** Points to [[sales.salesterritory.SalesterritoryRow.saleslastyear]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"saleslastyear","ordinal_position":7,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  saleslastyear: Option[BigDecimal],
  /** Points to [[sales.salesterritory.SalesterritoryRow.costytd]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"costytd","ordinal_position":8,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  costytd: Option[BigDecimal],
  /** Points to [[sales.salesterritory.SalesterritoryRow.costlastyear]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"costlastyear","ordinal_position":9,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  costlastyear: Option[BigDecimal],
  /** Points to [[sales.salesterritory.SalesterritoryRow.rowguid]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"rowguid","ordinal_position":10,"is_nullable":"YES","data_type":"uuid","udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"uuid","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  rowguid: Option[UUID],
  /** Points to [[sales.salesterritory.SalesterritoryRow.modifieddate]]
      debug: {"table_catalog":"Adventureworks","table_schema":"sa","table_name":"st","column_name":"modifieddate","ordinal_position":11,"is_nullable":"YES","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"11","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
  modifieddate: Option[LocalDateTime]
)

object StRow {
  def rowParser(prefix: String): RowParser[StRow] = { row =>
    Success(
      StRow(
        id = row[Option[Int]](prefix + "id"),
        territoryid = row[Option[SalesterritoryId]](prefix + "territoryid"),
        name = row[Option[Name]](prefix + "name"),
        countryregioncode = row[Option[CountryregionId]](prefix + "countryregioncode"),
        group = row[Option[String]](prefix + "group"),
        salesytd = row[Option[BigDecimal]](prefix + "salesytd"),
        saleslastyear = row[Option[BigDecimal]](prefix + "saleslastyear"),
        costytd = row[Option[BigDecimal]](prefix + "costytd"),
        costlastyear = row[Option[BigDecimal]](prefix + "costlastyear"),
        rowguid = row[Option[UUID]](prefix + "rowguid"),
        modifieddate = row[Option[LocalDateTime]](prefix + "modifieddate")
      )
    )
  }

  implicit val oFormat: OFormat[StRow] = new OFormat[StRow]{
    override def writes(o: StRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "territoryid" -> o.territoryid,
        "name" -> o.name,
        "countryregioncode" -> o.countryregioncode,
        "group" -> o.group,
        "salesytd" -> o.salesytd,
        "saleslastyear" -> o.saleslastyear,
        "costytd" -> o.costytd,
        "costlastyear" -> o.costlastyear,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[StRow] = {
      JsResult.fromTry(
        Try(
          StRow(
            id = json.\("id").toOption.map(_.as[Int]),
            territoryid = json.\("territoryid").toOption.map(_.as[SalesterritoryId]),
            name = json.\("name").toOption.map(_.as[Name]),
            countryregioncode = json.\("countryregioncode").toOption.map(_.as[CountryregionId]),
            group = json.\("group").toOption.map(_.as[String]),
            salesytd = json.\("salesytd").toOption.map(_.as[BigDecimal]),
            saleslastyear = json.\("saleslastyear").toOption.map(_.as[BigDecimal]),
            costytd = json.\("costytd").toOption.map(_.as[BigDecimal]),
            costlastyear = json.\("costlastyear").toOption.map(_.as[BigDecimal]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
