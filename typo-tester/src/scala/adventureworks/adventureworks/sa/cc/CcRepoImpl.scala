/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cc

import adventureworks.sales.creditcard.CreditcardId
import anorm.NamedParameter
import anorm.ParameterValue
import anorm.RowParser
import anorm.SqlStringInterpolation
import anorm.Success
import java.sql.Connection
import java.time.LocalDateTime

object CcRepoImpl extends CcRepo {
  override def selectAll(implicit c: Connection): List[CcRow] = {
    SQL"select id, creditcardid, cardtype, cardnumber, expmonth, expyear, modifieddate from sa.cc".as(rowParser.*)
  }
  override def selectByFieldValues(fieldValues: List[CcFieldOrIdValue[_]])(implicit c: Connection): List[CcRow] = {
    fieldValues match {
      case Nil => selectAll
      case nonEmpty =>
        val namedParams = nonEmpty.map{
          case CcFieldValue.id(value) => NamedParameter("id", ParameterValue.from(value))
          case CcFieldValue.creditcardid(value) => NamedParameter("creditcardid", ParameterValue.from(value))
          case CcFieldValue.cardtype(value) => NamedParameter("cardtype", ParameterValue.from(value))
          case CcFieldValue.cardnumber(value) => NamedParameter("cardnumber", ParameterValue.from(value))
          case CcFieldValue.expmonth(value) => NamedParameter("expmonth", ParameterValue.from(value))
          case CcFieldValue.expyear(value) => NamedParameter("expyear", ParameterValue.from(value))
          case CcFieldValue.modifieddate(value) => NamedParameter("modifieddate", ParameterValue.from(value))
        }
        val q = s"""select * from sa.cc where ${namedParams.map(x => s"${x.name} = {${x.name}}").mkString(" AND ")}"""
        // this line is here to include an extension method which is only needed for scala 3. no import is emitted for `SQL` to avoid warning for scala 2
        import anorm._
        SQL(q)
          .on(namedParams: _*)
          .as(rowParser.*)
    }
  
  }
  val rowParser: RowParser[CcRow] =
    RowParser[CcRow] { row =>
      Success(
        CcRow(
          id = row[Option[Int]]("id"),
          creditcardid = row[Option[CreditcardId]]("creditcardid"),
          cardtype = row[Option[String]]("cardtype"),
          cardnumber = row[Option[String]]("cardnumber"),
          expmonth = row[Option[Int]]("expmonth"),
          expyear = row[Option[Int]]("expyear"),
          modifieddate = row[Option[LocalDateTime]]("modifieddate")
        )
      )
    }
}
