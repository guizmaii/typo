/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package pod

import adventureworks.production.product.ProductId
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PodRow(
  id: Option[Int] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"id","ordinal_position":1,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.purchaseorderid]] */
  purchaseorderid: Option[PurchaseorderheaderId] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"purchaseorderid","ordinal_position":2,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.purchaseorderdetailid]] */
  purchaseorderdetailid: Option[Int] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"purchaseorderdetailid","ordinal_position":3,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.duedate]] */
  duedate: Option[LocalDateTime] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"duedate","ordinal_position":4,"is_nullable":"YES","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.orderqty]] */
  orderqty: Option[Int] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"orderqty","ordinal_position":5,"is_nullable":"YES","data_type":"smallint","numeric_precision":16,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int2","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.productid]] */
  productid: Option[ProductId] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"productid","ordinal_position":6,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.unitprice]] */
  unitprice: Option[BigDecimal] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"unitprice","ordinal_position":7,"is_nullable":"YES","data_type":"numeric","numeric_precision_radix":10,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.receivedqty]] */
  receivedqty: Option[BigDecimal] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"receivedqty","ordinal_position":8,"is_nullable":"YES","data_type":"numeric","numeric_precision":8,"numeric_precision_radix":10,"numeric_scale":2,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.rejectedqty]] */
  rejectedqty: Option[BigDecimal] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"rejectedqty","ordinal_position":9,"is_nullable":"YES","data_type":"numeric","numeric_precision":8,"numeric_precision_radix":10,"numeric_scale":2,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"numeric","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.modifieddate]] */
  modifieddate: Option[LocalDateTime] /* {"table_catalog":"Adventureworks","table_schema":"pu","table_name":"pod","column_name":"modifieddate","ordinal_position":10,"is_nullable":"YES","data_type":"timestamp without time zone","datetime_precision":6,"udt_catalog":"Adventureworks","udt_schema":"pg_catalog","udt_name":"timestamp","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
)

object PodRow {
  def rowParser(prefix: String): RowParser[PodRow] = { row =>
    Success(
      PodRow(
        id = row[Option[Int]](prefix + "id"),
        purchaseorderid = row[Option[PurchaseorderheaderId]](prefix + "purchaseorderid"),
        purchaseorderdetailid = row[Option[Int]](prefix + "purchaseorderdetailid"),
        duedate = row[Option[LocalDateTime]](prefix + "duedate"),
        orderqty = row[Option[Int]](prefix + "orderqty"),
        productid = row[Option[ProductId]](prefix + "productid"),
        unitprice = row[Option[BigDecimal]](prefix + "unitprice"),
        receivedqty = row[Option[BigDecimal]](prefix + "receivedqty"),
        rejectedqty = row[Option[BigDecimal]](prefix + "rejectedqty"),
        modifieddate = row[Option[LocalDateTime]](prefix + "modifieddate")
      )
    )
  }

  implicit val oFormat: OFormat[PodRow] = new OFormat[PodRow]{
    override def writes(o: PodRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "purchaseorderid" -> o.purchaseorderid,
        "purchaseorderdetailid" -> o.purchaseorderdetailid,
        "duedate" -> o.duedate,
        "orderqty" -> o.orderqty,
        "productid" -> o.productid,
        "unitprice" -> o.unitprice,
        "receivedqty" -> o.receivedqty,
        "rejectedqty" -> o.rejectedqty,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PodRow] = {
      JsResult.fromTry(
        Try(
          PodRow(
            id = json.\("id").toOption.map(_.as[Int]),
            purchaseorderid = json.\("purchaseorderid").toOption.map(_.as[PurchaseorderheaderId]),
            purchaseorderdetailid = json.\("purchaseorderdetailid").toOption.map(_.as[Int]),
            duedate = json.\("duedate").toOption.map(_.as[LocalDateTime]),
            orderqty = json.\("orderqty").toOption.map(_.as[Int]),
            productid = json.\("productid").toOption.map(_.as[ProductId]),
            unitprice = json.\("unitprice").toOption.map(_.as[BigDecimal]),
            receivedqty = json.\("receivedqty").toOption.map(_.as[BigDecimal]),
            rejectedqty = json.\("rejectedqty").toOption.map(_.as[BigDecimal]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
