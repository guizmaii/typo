/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package countryregion

import anorm.Column
import anorm.ParameterMetaData
import anorm.RowParser
import anorm.SqlParser
import anorm.ToStatement
import play.api.libs.json.Format

case class CountryregionId(value: String) extends AnyVal
object CountryregionId {
  implicit val ordering: Ordering[CountryregionId] = Ordering.by(_.value)
  implicit val format: Format[CountryregionId] = implicitly[Format[String]].bimap(CountryregionId.apply, _.value)
  implicit val toStatement: ToStatement[CountryregionId] = implicitly[ToStatement[String]].contramap(_.value)
  implicit val column: Column[CountryregionId] = implicitly[Column[String]].map(CountryregionId.apply)
  def rowParser(prefix: String): RowParser[CountryregionId] = SqlParser.get[CountryregionId](prefix + "countryregioncode")
  implicit val parameterMetadata: ParameterMetaData[CountryregionId] = new ParameterMetaData[CountryregionId] {
    override def sqlType: String = implicitly[ParameterMetaData[String]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[String]].jdbcType
  }

}
