/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package wr

import adventureworks.production.location.LocationId
import adventureworks.production.workorder.WorkorderId
import java.time.LocalDateTime

sealed abstract class WrFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class WrFieldValue[T](name: String, value: T) extends WrFieldOrIdValue(name, value)

object WrFieldValue {
  case class id(override val value: Option[Int]) extends WrFieldValue("id", value)
  case class workorderid(override val value: Option[WorkorderId]) extends WrFieldValue("workorderid", value)
  case class productid(override val value: Option[Int]) extends WrFieldValue("productid", value)
  case class operationsequence(override val value: Option[Int]) extends WrFieldValue("operationsequence", value)
  case class locationid(override val value: Option[LocationId]) extends WrFieldValue("locationid", value)
  case class scheduledstartdate(override val value: Option[LocalDateTime]) extends WrFieldValue("scheduledstartdate", value)
  case class scheduledenddate(override val value: Option[LocalDateTime]) extends WrFieldValue("scheduledenddate", value)
  case class actualstartdate(override val value: Option[LocalDateTime]) extends WrFieldValue("actualstartdate", value)
  case class actualenddate(override val value: Option[LocalDateTime]) extends WrFieldValue("actualenddate", value)
  case class actualresourcehrs(override val value: Option[BigDecimal]) extends WrFieldValue("actualresourcehrs", value)
  case class plannedcost(override val value: Option[BigDecimal]) extends WrFieldValue("plannedcost", value)
  case class actualcost(override val value: Option[BigDecimal]) extends WrFieldValue("actualcost", value)
  case class modifieddate(override val value: Option[LocalDateTime]) extends WrFieldValue("modifieddate", value)
}
