/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pch

import adventureworks.production.product.ProductId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PchRow(
  id: Option[Int],
  /** Points to [[production.productcosthistory.ProductcosthistoryRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[production.productcosthistory.ProductcosthistoryRow.startdate]] */
  startdate: Option[LocalDateTime],
  /** Points to [[production.productcosthistory.ProductcosthistoryRow.enddate]] */
  enddate: Option[LocalDateTime],
  /** Points to [[production.productcosthistory.ProductcosthistoryRow.standardcost]] */
  standardcost: Option[BigDecimal],
  /** Points to [[production.productcosthistory.ProductcosthistoryRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object PchRow {
  implicit val oFormat: OFormat[PchRow] = new OFormat[PchRow]{
    override def writes(o: PchRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "productid" -> o.productid,
        "startdate" -> o.startdate,
        "enddate" -> o.enddate,
        "standardcost" -> o.standardcost,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PchRow] = {
      JsResult.fromTry(
        Try(
          PchRow(
            id = json.\("id").toOption.map(_.as[Int]),
            productid = json.\("productid").toOption.map(_.as[ProductId]),
            startdate = json.\("startdate").toOption.map(_.as[LocalDateTime]),
            enddate = json.\("enddate").toOption.map(_.as[LocalDateTime]),
            standardcost = json.\("standardcost").toOption.map(_.as[BigDecimal]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
