/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package i

import adventureworks.production.illustration.IllustrationId
import java.time.LocalDateTime
import org.postgresql.jdbc.PgSQLXML
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class IRow(
  id: Option[Int],
  /** Points to [[production.illustration.IllustrationRow.illustrationid]] */
  illustrationid: Option[IllustrationId],
  /** Points to [[production.illustration.IllustrationRow.diagram]] */
  diagram: Option[PgSQLXML],
  /** Points to [[production.illustration.IllustrationRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object IRow {
  implicit val oFormat: OFormat[IRow] = new OFormat[IRow]{
    override def writes(o: IRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "illustrationid" -> o.illustrationid,
        "diagram" -> o.diagram,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[IRow] = {
      JsResult.fromTry(
        Try(
          IRow(
            id = json.\("id").toOption.map(_.as[Int]),
            illustrationid = json.\("illustrationid").toOption.map(_.as[IllustrationId]),
            diagram = json.\("diagram").toOption.map(_.as[PgSQLXML]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
