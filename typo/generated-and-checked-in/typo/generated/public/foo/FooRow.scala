/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package public
package foo

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class FooRow(
  /** debug: {"table_catalog":"postgres","table_schema":"public","table_name":"foo","column_name":"array_agg","ordinal_position":1,"is_nullable":"YES","data_type":"ARRAY","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_name","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
  arrayAgg: Option[Array[String]]
)

object FooRow {
  implicit val oFormat: OFormat[FooRow] = new OFormat[FooRow]{
    override def writes(o: FooRow): JsObject =
      Json.obj(
        "array_agg" -> o.arrayAgg
      )
  
    override def reads(json: JsValue): JsResult[FooRow] = {
      JsResult.fromTry(
        Try(
          FooRow(
            arrayAgg = json.\("array_agg").toOption.map(_.as[Array[String]])
          )
        )
      )
    }
  }
}
