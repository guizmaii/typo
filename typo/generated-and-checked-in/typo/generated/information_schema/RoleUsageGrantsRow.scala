/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package information_schema

import anorm.RowParser
import anorm.Success

case class RoleUsageGrantsRow(
  /** Points to [[UsagePrivilegesRow.grantor]] */
  grantor: Option[String],
  /** Points to [[UsagePrivilegesRow.grantee]] */
  grantee: Option[String],
  /** Points to [[UsagePrivilegesRow.objectCatalog]] */
  objectCatalog: Option[String],
  /** Points to [[UsagePrivilegesRow.objectSchema]] */
  objectSchema: Option[String],
  /** Points to [[UsagePrivilegesRow.objectName]] */
  objectName: Option[String],
  /** Points to [[UsagePrivilegesRow.objectType]] */
  objectType: Option[String],
  /** Points to [[UsagePrivilegesRow.privilegeType]] */
  privilegeType: Option[String],
  /** Points to [[UsagePrivilegesRow.isGrantable]] */
  isGrantable: Option[String]
)

object RoleUsageGrantsRow {
  implicit val rowParser: RowParser[RoleUsageGrantsRow] = { row =>
    Success(
      RoleUsageGrantsRow(
        grantor = row[Option[String]]("grantor"),
        grantee = row[Option[String]]("grantee"),
        objectCatalog = row[Option[String]]("object_catalog"),
        objectSchema = row[Option[String]]("object_schema"),
        objectName = row[Option[String]]("object_name"),
        objectType = row[Option[String]]("object_type"),
        privilegeType = row[Option[String]]("privilege_type"),
        isGrantable = row[Option[String]]("is_grantable")
      )
    )
  }

  
}
