/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources)
 */
package typo
package generated
package information_schema

import anorm.RowParser
import anorm.Success
import typo.generated.pg_catalog.PgUserMappingRow

case class PgUserMappingsRow(
  /** Points to [[PgUserMappingRow.oid]] */
  oid: Long,
  /** Points to [[PgUserMappingRow.umoptions]] */
  umoptions: Option[Array[String]],
  /** Points to [[PgUserMappingRow.umuser]] */
  umuser: Long,
  authorizationIdentifier: /* unknown nullability */ Option[String],
  /** Points to [[PgForeignServersRow.foreignServerCatalog]] */
  foreignServerCatalog: Option[String],
  /** Points to [[PgForeignServersRow.foreignServerName]] */
  foreignServerName: Option[String],
  /** Points to [[PgForeignServersRow.authorizationIdentifier]] */
  srvowner: Option[String]
)

object PgUserMappingsRow {
  implicit val rowParser: RowParser[PgUserMappingsRow] = { row =>
    Success(
      PgUserMappingsRow(
        oid = row[Long]("oid"),
        umoptions = row[Option[Array[String]]]("umoptions"),
        umuser = row[Long]("umuser"),
        authorizationIdentifier = row[/* unknown nullability */ Option[String]]("authorization_identifier"),
        foreignServerCatalog = row[Option[String]]("foreign_server_catalog"),
        foreignServerName = row[Option[String]]("foreign_server_name"),
        srvowner = row[Option[String]]("srvowner")
      )
    )
  }

  
}
