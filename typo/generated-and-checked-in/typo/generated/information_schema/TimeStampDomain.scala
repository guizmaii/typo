/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package information_schema

import anorm.Column
import anorm.ParameterMetaData
import anorm.ToStatement
import java.time.ZonedDateTime
import play.api.libs.json.Format

/** Domain `information_schema.time_stamp`
  * No constraint
  */
case class TimeStampDomain(value: ZonedDateTime) extends AnyVal
object TimeStampDomain {
  implicit def ordering(implicit ev: Ordering[ZonedDateTime]): Ordering[TimeStampDomain] = Ordering.by(_.value)
  implicit val format: Format[TimeStampDomain] = implicitly[Format[ZonedDateTime]].bimap(TimeStampDomain.apply, _.value)
  implicit val toStatement: ToStatement[TimeStampDomain] = implicitly[ToStatement[ZonedDateTime]].contramap(_.value)
  implicit val column: Column[TimeStampDomain] = implicitly[Column[ZonedDateTime]].map(TimeStampDomain.apply)
  implicit val parameterMetadata: ParameterMetaData[TimeStampDomain] = new ParameterMetaData[TimeStampDomain] {
    override def sqlType: String = implicitly[ParameterMetaData[ZonedDateTime]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[ZonedDateTime]].jdbcType
  }

}
