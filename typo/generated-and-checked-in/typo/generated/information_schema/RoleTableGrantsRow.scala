/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package information_schema

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class RoleTableGrantsRow(
  /** Points to [[TablePrivilegesRow.grantor]] */
  grantor: Option[String] /* {"baseColumnName":"grantor","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"grantor","columnName":"grantor","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_privileges"} */,
  /** Points to [[TablePrivilegesRow.grantee]] */
  grantee: Option[String] /* {"baseColumnName":"grantee","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"grantee","columnName":"grantee","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_privileges"} */,
  /** Points to [[TablePrivilegesRow.tableCatalog]] */
  tableCatalog: Option[String] /* {"baseColumnName":"table_catalog","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"table_catalog","columnName":"table_catalog","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_privileges"} */,
  /** Points to [[TablePrivilegesRow.tableSchema]] */
  tableSchema: Option[String] /* {"baseColumnName":"table_schema","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"table_schema","columnName":"table_schema","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_privileges"} */,
  /** Points to [[TablePrivilegesRow.tableName]] */
  tableName: Option[String] /* {"baseColumnName":"table_name","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"table_name","columnName":"table_name","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_privileges"} */,
  /** Points to [[TablePrivilegesRow.privilegeType]] */
  privilegeType: Option[String] /* {"baseColumnName":"privilege_type","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"privilege_type","columnName":"privilege_type","columnType":"VarChar","columnTypeName":"varchar","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_privileges"} */,
  /** Points to [[TablePrivilegesRow.isGrantable]] */
  isGrantable: Option[String] /* {"baseColumnName":"is_grantable","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":3,"columnLabel":"is_grantable","columnName":"is_grantable","columnType":"VarChar","columnTypeName":"varchar","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":3,"scale":0,"tableName":"table_privileges"} */,
  /** Points to [[TablePrivilegesRow.withHierarchy]] */
  withHierarchy: Option[String] /* {"baseColumnName":"with_hierarchy","baseRelationName":"information_schema.table_privileges","columnClassName":"java.lang.String","columnDisplaySize":3,"columnLabel":"with_hierarchy","columnName":"with_hierarchy","columnType":"VarChar","columnTypeName":"varchar","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":3,"scale":0,"tableName":"table_privileges"} */
)

object RoleTableGrantsRow {
  implicit val rowParser: RowParser[RoleTableGrantsRow] = { row =>
    Success(
      RoleTableGrantsRow(
        grantor = row[Option[String]]("grantor"),
        grantee = row[Option[String]]("grantee"),
        tableCatalog = row[Option[String]]("table_catalog"),
        tableSchema = row[Option[String]]("table_schema"),
        tableName = row[Option[String]]("table_name"),
        privilegeType = row[Option[String]]("privilege_type"),
        isGrantable = row[Option[String]]("is_grantable"),
        withHierarchy = row[Option[String]]("with_hierarchy")
      )
    )
  }

  implicit val oFormat: OFormat[RoleTableGrantsRow] = new OFormat[RoleTableGrantsRow]{
    override def writes(o: RoleTableGrantsRow): JsObject =
      Json.obj(
        "grantor" -> o.grantor,
      "grantee" -> o.grantee,
      "table_catalog" -> o.tableCatalog,
      "table_schema" -> o.tableSchema,
      "table_name" -> o.tableName,
      "privilege_type" -> o.privilegeType,
      "is_grantable" -> o.isGrantable,
      "with_hierarchy" -> o.withHierarchy
      )

    override def reads(json: JsValue): JsResult[RoleTableGrantsRow] = {
      JsResult.fromTry(
        Try(
          RoleTableGrantsRow(
            grantor = json.\("grantor").toOption.map(_.as[String]),
            grantee = json.\("grantee").toOption.map(_.as[String]),
            tableCatalog = json.\("table_catalog").toOption.map(_.as[String]),
            tableSchema = json.\("table_schema").toOption.map(_.as[String]),
            tableName = json.\("table_name").toOption.map(_.as[String]),
            privilegeType = json.\("privilege_type").toOption.map(_.as[String]),
            isGrantable = json.\("is_grantable").toOption.map(_.as[String]),
            withHierarchy = json.\("with_hierarchy").toOption.map(_.as[String])
          )
        )
      )
    }
  }
}
