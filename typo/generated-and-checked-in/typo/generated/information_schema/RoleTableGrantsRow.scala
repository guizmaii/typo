/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources)
 */
package typo
package generated
package information_schema

import anorm.RowParser
import anorm.Success

case class RoleTableGrantsRow(
  /** Points to [[TablePrivilegesRow.grantor]] */
  grantor: Option[String],
  /** Points to [[TablePrivilegesRow.grantee]] */
  grantee: Option[String],
  /** Points to [[TablePrivilegesRow.tableCatalog]] */
  tableCatalog: Option[String],
  /** Points to [[TablePrivilegesRow.tableSchema]] */
  tableSchema: Option[String],
  /** Points to [[TablePrivilegesRow.tableName]] */
  tableName: Option[String],
  /** Points to [[TablePrivilegesRow.privilegeType]] */
  privilegeType: Option[String],
  /** Points to [[TablePrivilegesRow.isGrantable]] */
  isGrantable: Option[String],
  /** Points to [[TablePrivilegesRow.withHierarchy]] */
  withHierarchy: Option[String]
)

object RoleTableGrantsRow {
  implicit val rowParser: RowParser[RoleTableGrantsRow] = { row =>
    Success(
      RoleTableGrantsRow(
        grantor = row[Option[String]]("grantor"),
        grantee = row[Option[String]]("grantee"),
        tableCatalog = row[Option[String]]("table_catalog"),
        tableSchema = row[Option[String]]("table_schema"),
        tableName = row[Option[String]]("table_name"),
        privilegeType = row[Option[String]]("privilege_type"),
        isGrantable = row[Option[String]]("is_grantable"),
        withHierarchy = row[Option[String]]("with_hierarchy")
      )
    )
  }

  
}
