/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package information_schema

import anorm.RowParser
import anorm.Success
import typo.generated.pg_catalog.PgForeignServerRow

case class PgForeignServersRow(
  /** Points to [[PgForeignServerRow.oid]] */
  oid: Long,
  /** Points to [[PgForeignServerRow.srvoptions]] */
  srvoptions: Option[Array[String]],
  foreignServerCatalog: /* unknown nullability */ Option[String],
  foreignServerName: /* unknown nullability */ Option[String],
  foreignDataWrapperCatalog: /* unknown nullability */ Option[String],
  foreignDataWrapperName: /* unknown nullability */ Option[String],
  foreignServerType: /* unknown nullability */ Option[String],
  foreignServerVersion: /* unknown nullability */ Option[String],
  authorizationIdentifier: /* unknown nullability */ Option[String]
)

object PgForeignServersRow {
  implicit val rowParser: RowParser[PgForeignServersRow] = { row =>
    Success(
      PgForeignServersRow(
        oid = row[Long]("oid"),
        srvoptions = row[Option[Array[String]]]("srvoptions"),
        foreignServerCatalog = row[/* unknown nullability */ Option[String]]("foreign_server_catalog"),
        foreignServerName = row[/* unknown nullability */ Option[String]]("foreign_server_name"),
        foreignDataWrapperCatalog = row[/* unknown nullability */ Option[String]]("foreign_data_wrapper_catalog"),
        foreignDataWrapperName = row[/* unknown nullability */ Option[String]]("foreign_data_wrapper_name"),
        foreignServerType = row[/* unknown nullability */ Option[String]]("foreign_server_type"),
        foreignServerVersion = row[/* unknown nullability */ Option[String]]("foreign_server_version"),
        authorizationIdentifier = row[/* unknown nullability */ Option[String]]("authorization_identifier")
      )
    )
  }

  
}
