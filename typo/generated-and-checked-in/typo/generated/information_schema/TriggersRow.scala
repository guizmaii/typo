/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package information_schema

import anorm.RowParser
import anorm.Success
import java.time.ZonedDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class TriggersRow(
  triggerCatalog: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"trigger_catalog","ordinal_position":1,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  triggerSchema: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"trigger_schema","ordinal_position":2,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  triggerName: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"trigger_name","ordinal_position":3,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventManipulation: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"event_manipulation","ordinal_position":4,"is_nullable":"YES","data_type":"character varying","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"character_data","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventObjectCatalog: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"event_object_catalog","ordinal_position":5,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventObjectSchema: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"event_object_schema","ordinal_position":6,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventObjectTable: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"event_object_table","ordinal_position":7,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionOrder: Option[Int] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_order","ordinal_position":8,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"cardinal_number","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionCondition: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_condition","ordinal_position":9,"is_nullable":"YES","data_type":"character varying","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"character_data","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionStatement: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_statement","ordinal_position":10,"is_nullable":"YES","data_type":"character varying","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"character_data","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionOrientation: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_orientation","ordinal_position":11,"is_nullable":"YES","data_type":"character varying","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"character_data","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"11","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionTiming: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_timing","ordinal_position":12,"is_nullable":"YES","data_type":"character varying","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"character_data","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"varchar","dtd_identifier":"12","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionReferenceOldTable: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_reference_old_table","ordinal_position":13,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"13","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionReferenceNewTable: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_reference_new_table","ordinal_position":14,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"14","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionReferenceOldRow: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_reference_old_row","ordinal_position":15,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"15","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  actionReferenceNewRow: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"action_reference_new_row","ordinal_position":16,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"16","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  created: Option[ZonedDateTime] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggers","column_name":"created","ordinal_position":17,"is_nullable":"YES","data_type":"timestamp with time zone","datetime_precision":2,"domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"time_stamp","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"timestamptz","dtd_identifier":"17","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object TriggersRow {
  implicit val rowParser: RowParser[TriggersRow] = { row =>
    Success(
      TriggersRow(
        triggerCatalog = row[Option[String]]("trigger_catalog"),
        triggerSchema = row[Option[String]]("trigger_schema"),
        triggerName = row[Option[String]]("trigger_name"),
        eventManipulation = row[Option[String]]("event_manipulation"),
        eventObjectCatalog = row[Option[String]]("event_object_catalog"),
        eventObjectSchema = row[Option[String]]("event_object_schema"),
        eventObjectTable = row[Option[String]]("event_object_table"),
        actionOrder = row[Option[Int]]("action_order"),
        actionCondition = row[Option[String]]("action_condition"),
        actionStatement = row[Option[String]]("action_statement"),
        actionOrientation = row[Option[String]]("action_orientation"),
        actionTiming = row[Option[String]]("action_timing"),
        actionReferenceOldTable = row[Option[String]]("action_reference_old_table"),
        actionReferenceNewTable = row[Option[String]]("action_reference_new_table"),
        actionReferenceOldRow = row[Option[String]]("action_reference_old_row"),
        actionReferenceNewRow = row[Option[String]]("action_reference_new_row"),
        created = row[Option[ZonedDateTime]]("created")
      )
    )
  }

  implicit val oFormat: OFormat[TriggersRow] = new OFormat[TriggersRow]{
    override def writes(o: TriggersRow): JsObject =
      Json.obj(
        "trigger_catalog" -> o.triggerCatalog,
      "trigger_schema" -> o.triggerSchema,
      "trigger_name" -> o.triggerName,
      "event_manipulation" -> o.eventManipulation,
      "event_object_catalog" -> o.eventObjectCatalog,
      "event_object_schema" -> o.eventObjectSchema,
      "event_object_table" -> o.eventObjectTable,
      "action_order" -> o.actionOrder,
      "action_condition" -> o.actionCondition,
      "action_statement" -> o.actionStatement,
      "action_orientation" -> o.actionOrientation,
      "action_timing" -> o.actionTiming,
      "action_reference_old_table" -> o.actionReferenceOldTable,
      "action_reference_new_table" -> o.actionReferenceNewTable,
      "action_reference_old_row" -> o.actionReferenceOldRow,
      "action_reference_new_row" -> o.actionReferenceNewRow,
      "created" -> o.created
      )

    override def reads(json: JsValue): JsResult[TriggersRow] = {
      JsResult.fromTry(
        Try(
          TriggersRow(
            triggerCatalog = json.\("trigger_catalog").toOption.map(_.as[String]),
            triggerSchema = json.\("trigger_schema").toOption.map(_.as[String]),
            triggerName = json.\("trigger_name").toOption.map(_.as[String]),
            eventManipulation = json.\("event_manipulation").toOption.map(_.as[String]),
            eventObjectCatalog = json.\("event_object_catalog").toOption.map(_.as[String]),
            eventObjectSchema = json.\("event_object_schema").toOption.map(_.as[String]),
            eventObjectTable = json.\("event_object_table").toOption.map(_.as[String]),
            actionOrder = json.\("action_order").toOption.map(_.as[Int]),
            actionCondition = json.\("action_condition").toOption.map(_.as[String]),
            actionStatement = json.\("action_statement").toOption.map(_.as[String]),
            actionOrientation = json.\("action_orientation").toOption.map(_.as[String]),
            actionTiming = json.\("action_timing").toOption.map(_.as[String]),
            actionReferenceOldTable = json.\("action_reference_old_table").toOption.map(_.as[String]),
            actionReferenceNewTable = json.\("action_reference_new_table").toOption.map(_.as[String]),
            actionReferenceOldRow = json.\("action_reference_old_row").toOption.map(_.as[String]),
            actionReferenceNewRow = json.\("action_reference_new_row").toOption.map(_.as[String]),
            created = json.\("created").toOption.map(_.as[ZonedDateTime])
          )
        )
      )
    }
  }
}
