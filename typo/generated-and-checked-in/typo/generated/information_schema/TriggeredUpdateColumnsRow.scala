/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package information_schema

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class TriggeredUpdateColumnsRow(
  triggerCatalog: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggered_update_columns","column_name":"trigger_catalog","ordinal_position":1,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  triggerSchema: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggered_update_columns","column_name":"trigger_schema","ordinal_position":2,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  triggerName: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggered_update_columns","column_name":"trigger_name","ordinal_position":3,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventObjectCatalog: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggered_update_columns","column_name":"event_object_catalog","ordinal_position":4,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventObjectSchema: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggered_update_columns","column_name":"event_object_schema","ordinal_position":5,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventObjectTable: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggered_update_columns","column_name":"event_object_table","ordinal_position":6,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  eventObjectColumn: Option[String] /* {"table_catalog":"postgres","table_schema":"information_schema","table_name":"triggered_update_columns","column_name":"event_object_column","ordinal_position":7,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","domain_catalog":"postgres","domain_schema":"information_schema","domain_name":"sql_identifier","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object TriggeredUpdateColumnsRow {
  def rowParser(prefix: String): RowParser[TriggeredUpdateColumnsRow] = { row =>
    Success(
      TriggeredUpdateColumnsRow(
        triggerCatalog = row[Option[String]](prefix + "trigger_catalog"),
        triggerSchema = row[Option[String]](prefix + "trigger_schema"),
        triggerName = row[Option[String]](prefix + "trigger_name"),
        eventObjectCatalog = row[Option[String]](prefix + "event_object_catalog"),
        eventObjectSchema = row[Option[String]](prefix + "event_object_schema"),
        eventObjectTable = row[Option[String]](prefix + "event_object_table"),
        eventObjectColumn = row[Option[String]](prefix + "event_object_column")
      )
    )
  }

  implicit val oFormat: OFormat[TriggeredUpdateColumnsRow] = new OFormat[TriggeredUpdateColumnsRow]{
    override def writes(o: TriggeredUpdateColumnsRow): JsObject =
      Json.obj(
        "trigger_catalog" -> o.triggerCatalog,
      "trigger_schema" -> o.triggerSchema,
      "trigger_name" -> o.triggerName,
      "event_object_catalog" -> o.eventObjectCatalog,
      "event_object_schema" -> o.eventObjectSchema,
      "event_object_table" -> o.eventObjectTable,
      "event_object_column" -> o.eventObjectColumn
      )

    override def reads(json: JsValue): JsResult[TriggeredUpdateColumnsRow] = {
      JsResult.fromTry(
        Try(
          TriggeredUpdateColumnsRow(
            triggerCatalog = json.\("trigger_catalog").toOption.map(_.as[String]),
            triggerSchema = json.\("trigger_schema").toOption.map(_.as[String]),
            triggerName = json.\("trigger_name").toOption.map(_.as[String]),
            eventObjectCatalog = json.\("event_object_catalog").toOption.map(_.as[String]),
            eventObjectSchema = json.\("event_object_schema").toOption.map(_.as[String]),
            eventObjectTable = json.\("event_object_table").toOption.map(_.as[String]),
            eventObjectColumn = json.\("event_object_column").toOption.map(_.as[String])
          )
        )
      )
    }
  }
}
