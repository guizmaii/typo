/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgAvailableExtensionsRow(
  name: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_available_extensions","column_name":"name","ordinal_position":1,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  defaultVersion: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_available_extensions","column_name":"default_version","ordinal_position":2,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  installedVersion: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_available_extensions","column_name":"installed_version","ordinal_position":3,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  comment: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_available_extensions","column_name":"comment","ordinal_position":4,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object PgAvailableExtensionsRow {
  def rowParser(prefix: String): RowParser[PgAvailableExtensionsRow] = { row =>
    Success(
      PgAvailableExtensionsRow(
        name = row[Option[String]](prefix + "name"),
        defaultVersion = row[Option[String]](prefix + "default_version"),
        installedVersion = row[Option[String]](prefix + "installed_version"),
        comment = row[Option[String]](prefix + "comment")
      )
    )
  }

  implicit val oFormat: OFormat[PgAvailableExtensionsRow] = new OFormat[PgAvailableExtensionsRow]{
    override def writes(o: PgAvailableExtensionsRow): JsObject =
      Json.obj(
        "name" -> o.name,
      "default_version" -> o.defaultVersion,
      "installed_version" -> o.installedVersion,
      "comment" -> o.comment
      )

    override def reads(json: JsValue): JsResult[PgAvailableExtensionsRow] = {
      JsResult.fromTry(
        Try(
          PgAvailableExtensionsRow(
            name = json.\("name").toOption.map(_.as[String]),
            defaultVersion = json.\("default_version").toOption.map(_.as[String]),
            installedVersion = json.\("installed_version").toOption.map(_.as[String]),
            comment = json.\("comment").toOption.map(_.as[String])
          )
        )
      )
    }
  }
}
