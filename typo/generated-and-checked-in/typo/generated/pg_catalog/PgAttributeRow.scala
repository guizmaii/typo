/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success
import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgAttributeRow(
  attrelid: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attrelid","ordinal_position":1,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attname: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attname","ordinal_position":2,"is_nullable":"NO","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  atttypid: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"atttypid","ordinal_position":3,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attstattarget: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attstattarget","ordinal_position":4,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attlen: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attlen","ordinal_position":5,"is_nullable":"NO","data_type":"smallint","numeric_precision":16,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int2","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attnum: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attnum","ordinal_position":6,"is_nullable":"NO","data_type":"smallint","numeric_precision":16,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int2","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attndims: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attndims","ordinal_position":7,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attcacheoff: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attcacheoff","ordinal_position":8,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  atttypmod: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"atttypmod","ordinal_position":9,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attbyval: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attbyval","ordinal_position":10,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attalign: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attalign","ordinal_position":11,"is_nullable":"NO","data_type":"\"char\"","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"char","dtd_identifier":"11","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attstorage: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attstorage","ordinal_position":12,"is_nullable":"NO","data_type":"\"char\"","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"char","dtd_identifier":"12","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attcompression: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attcompression","ordinal_position":13,"is_nullable":"NO","data_type":"\"char\"","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"char","dtd_identifier":"13","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attnotnull: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attnotnull","ordinal_position":14,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"14","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  atthasdef: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"atthasdef","ordinal_position":15,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"15","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  atthasmissing: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"atthasmissing","ordinal_position":16,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"16","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attidentity: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attidentity","ordinal_position":17,"is_nullable":"NO","data_type":"\"char\"","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"char","dtd_identifier":"17","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attgenerated: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attgenerated","ordinal_position":18,"is_nullable":"NO","data_type":"\"char\"","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"char","dtd_identifier":"18","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attisdropped: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attisdropped","ordinal_position":19,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"19","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attislocal: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attislocal","ordinal_position":20,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"20","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attinhcount: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attinhcount","ordinal_position":21,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"21","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attcollation: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attcollation","ordinal_position":22,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"22","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attacl: Option[Array[/* aclitem */ PGobject]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attacl","ordinal_position":23,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_aclitem","dtd_identifier":"23","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attoptions: Option[Array[String]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attoptions","ordinal_position":24,"is_nullable":"YES","data_type":"ARRAY","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_text","dtd_identifier":"24","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attfdwoptions: Option[Array[String]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attfdwoptions","ordinal_position":25,"is_nullable":"YES","data_type":"ARRAY","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_text","dtd_identifier":"25","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  attmissingval: Option[/* anyarray */ PGobject] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attribute","column_name":"attmissingval","ordinal_position":26,"is_nullable":"YES","data_type":"anyarray","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"anyarray","dtd_identifier":"26","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
){
  val compositeId: PgAttributeId = PgAttributeId(attrelid, attnum)
}

object PgAttributeRow {
  def rowParser(prefix: String): RowParser[PgAttributeRow] = { row =>
    Success(
      PgAttributeRow(
        attrelid = row[/* oid */ Long](prefix + "attrelid"),
        attname = row[String](prefix + "attname"),
        atttypid = row[/* oid */ Long](prefix + "atttypid"),
        attstattarget = row[Int](prefix + "attstattarget"),
        attlen = row[Int](prefix + "attlen"),
        attnum = row[Int](prefix + "attnum"),
        attndims = row[Int](prefix + "attndims"),
        attcacheoff = row[Int](prefix + "attcacheoff"),
        atttypmod = row[Int](prefix + "atttypmod"),
        attbyval = row[Boolean](prefix + "attbyval"),
        attalign = row[String](prefix + "attalign"),
        attstorage = row[String](prefix + "attstorage"),
        attcompression = row[String](prefix + "attcompression"),
        attnotnull = row[Boolean](prefix + "attnotnull"),
        atthasdef = row[Boolean](prefix + "atthasdef"),
        atthasmissing = row[Boolean](prefix + "atthasmissing"),
        attidentity = row[String](prefix + "attidentity"),
        attgenerated = row[String](prefix + "attgenerated"),
        attisdropped = row[Boolean](prefix + "attisdropped"),
        attislocal = row[Boolean](prefix + "attislocal"),
        attinhcount = row[Int](prefix + "attinhcount"),
        attcollation = row[/* oid */ Long](prefix + "attcollation"),
        attacl = row[Option[Array[/* aclitem */ PGobject]]](prefix + "attacl"),
        attoptions = row[Option[Array[String]]](prefix + "attoptions"),
        attfdwoptions = row[Option[Array[String]]](prefix + "attfdwoptions"),
        attmissingval = row[Option[/* anyarray */ PGobject]](prefix + "attmissingval")
      )
    )
  }

  implicit val oFormat: OFormat[PgAttributeRow] = new OFormat[PgAttributeRow]{
    override def writes(o: PgAttributeRow): JsObject =
      Json.obj(
        "attrelid" -> o.attrelid,
      "attname" -> o.attname,
      "atttypid" -> o.atttypid,
      "attstattarget" -> o.attstattarget,
      "attlen" -> o.attlen,
      "attnum" -> o.attnum,
      "attndims" -> o.attndims,
      "attcacheoff" -> o.attcacheoff,
      "atttypmod" -> o.atttypmod,
      "attbyval" -> o.attbyval,
      "attalign" -> o.attalign,
      "attstorage" -> o.attstorage,
      "attcompression" -> o.attcompression,
      "attnotnull" -> o.attnotnull,
      "atthasdef" -> o.atthasdef,
      "atthasmissing" -> o.atthasmissing,
      "attidentity" -> o.attidentity,
      "attgenerated" -> o.attgenerated,
      "attisdropped" -> o.attisdropped,
      "attislocal" -> o.attislocal,
      "attinhcount" -> o.attinhcount,
      "attcollation" -> o.attcollation,
      "attacl" -> o.attacl,
      "attoptions" -> o.attoptions,
      "attfdwoptions" -> o.attfdwoptions,
      "attmissingval" -> o.attmissingval
      )

    override def reads(json: JsValue): JsResult[PgAttributeRow] = {
      JsResult.fromTry(
        Try(
          PgAttributeRow(
            attrelid = json.\("attrelid").as[/* oid */ Long],
            attname = json.\("attname").as[String],
            atttypid = json.\("atttypid").as[/* oid */ Long],
            attstattarget = json.\("attstattarget").as[Int],
            attlen = json.\("attlen").as[Int],
            attnum = json.\("attnum").as[Int],
            attndims = json.\("attndims").as[Int],
            attcacheoff = json.\("attcacheoff").as[Int],
            atttypmod = json.\("atttypmod").as[Int],
            attbyval = json.\("attbyval").as[Boolean],
            attalign = json.\("attalign").as[String],
            attstorage = json.\("attstorage").as[String],
            attcompression = json.\("attcompression").as[String],
            attnotnull = json.\("attnotnull").as[Boolean],
            atthasdef = json.\("atthasdef").as[Boolean],
            atthasmissing = json.\("atthasmissing").as[Boolean],
            attidentity = json.\("attidentity").as[String],
            attgenerated = json.\("attgenerated").as[String],
            attisdropped = json.\("attisdropped").as[Boolean],
            attislocal = json.\("attislocal").as[Boolean],
            attinhcount = json.\("attinhcount").as[Int],
            attcollation = json.\("attcollation").as[/* oid */ Long],
            attacl = json.\("attacl").toOption.map(_.as[Array[/* aclitem */ PGobject]]),
            attoptions = json.\("attoptions").toOption.map(_.as[Array[String]]),
            attfdwoptions = json.\("attfdwoptions").toOption.map(_.as[Array[String]]),
            attmissingval = json.\("attmissingval").toOption.map(_.as[/* anyarray */ PGobject])
          )
        )
      )
    }
  }
}
