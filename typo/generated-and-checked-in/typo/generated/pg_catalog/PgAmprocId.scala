/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.Column
import anorm.RowParser
import anorm.SqlParser
import anorm.ToStatement
import play.api.libs.json.Format

case class PgAmprocId(value: /* oid */ Long) extends AnyVal
object PgAmprocId {
  implicit val ordering: Ordering[PgAmprocId] = Ordering.by(_.value)
  implicit val format: Format[PgAmprocId] = implicitly[Format[/* oid */ Long]].bimap(PgAmprocId.apply, _.value)
  implicit val toStatement: ToStatement[PgAmprocId] = implicitly[ToStatement[/* oid */ Long]].contramap(_.value)
  implicit val column: Column[PgAmprocId] = implicitly[Column[/* oid */ Long]].map(PgAmprocId.apply)
  def rowParser(prefix: String): RowParser[PgAmprocId] = SqlParser.get[PgAmprocId](prefix + "oid")
}
