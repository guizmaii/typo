/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgPublicationRow(
  oid: PgPublicationId /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"oid","ordinal_position":1,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  pubname: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"pubname","ordinal_position":2,"is_nullable":"NO","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  pubowner: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"pubowner","ordinal_position":3,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  puballtables: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"puballtables","ordinal_position":4,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  pubinsert: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"pubinsert","ordinal_position":5,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  pubupdate: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"pubupdate","ordinal_position":6,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  pubdelete: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"pubdelete","ordinal_position":7,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  pubtruncate: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"pubtruncate","ordinal_position":8,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  pubviaroot: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_publication","column_name":"pubviaroot","ordinal_position":9,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
)

object PgPublicationRow {
  def rowParser(prefix: String): RowParser[PgPublicationRow] = { row =>
    Success(
      PgPublicationRow(
        oid = row[PgPublicationId](prefix + "oid"),
        pubname = row[String](prefix + "pubname"),
        pubowner = row[/* oid */ Long](prefix + "pubowner"),
        puballtables = row[Boolean](prefix + "puballtables"),
        pubinsert = row[Boolean](prefix + "pubinsert"),
        pubupdate = row[Boolean](prefix + "pubupdate"),
        pubdelete = row[Boolean](prefix + "pubdelete"),
        pubtruncate = row[Boolean](prefix + "pubtruncate"),
        pubviaroot = row[Boolean](prefix + "pubviaroot")
      )
    )
  }

  implicit val oFormat: OFormat[PgPublicationRow] = new OFormat[PgPublicationRow]{
    override def writes(o: PgPublicationRow): JsObject =
      Json.obj(
        "oid" -> o.oid,
      "pubname" -> o.pubname,
      "pubowner" -> o.pubowner,
      "puballtables" -> o.puballtables,
      "pubinsert" -> o.pubinsert,
      "pubupdate" -> o.pubupdate,
      "pubdelete" -> o.pubdelete,
      "pubtruncate" -> o.pubtruncate,
      "pubviaroot" -> o.pubviaroot
      )

    override def reads(json: JsValue): JsResult[PgPublicationRow] = {
      JsResult.fromTry(
        Try(
          PgPublicationRow(
            oid = json.\("oid").as[PgPublicationId],
            pubname = json.\("pubname").as[String],
            pubowner = json.\("pubowner").as[/* oid */ Long],
            puballtables = json.\("puballtables").as[Boolean],
            pubinsert = json.\("pubinsert").as[Boolean],
            pubupdate = json.\("pubupdate").as[Boolean],
            pubdelete = json.\("pubdelete").as[Boolean],
            pubtruncate = json.\("pubtruncate").as[Boolean],
            pubviaroot = json.\("pubviaroot").as[Boolean]
          )
        )
      )
    }
  }
}
