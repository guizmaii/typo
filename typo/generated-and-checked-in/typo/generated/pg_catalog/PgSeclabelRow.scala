/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgSeclabelRow(
  objoid: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_seclabel","column_name":"objoid","ordinal_position":1,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  classoid: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_seclabel","column_name":"classoid","ordinal_position":2,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  objsubid: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_seclabel","column_name":"objsubid","ordinal_position":3,"is_nullable":"NO","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  provider: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_seclabel","column_name":"provider","ordinal_position":4,"is_nullable":"NO","data_type":"text","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  label: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_seclabel","column_name":"label","ordinal_position":5,"is_nullable":"NO","data_type":"text","character_octet_length":1073741824,"collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
){
  val compositeId: PgSeclabelId = PgSeclabelId(objoid, classoid, objsubid, provider)
}

object PgSeclabelRow {
  def rowParser(prefix: String): RowParser[PgSeclabelRow] = { row =>
    Success(
      PgSeclabelRow(
        objoid = row[/* oid */ Long](prefix + "objoid"),
        classoid = row[/* oid */ Long](prefix + "classoid"),
        objsubid = row[Int](prefix + "objsubid"),
        provider = row[String](prefix + "provider"),
        label = row[String](prefix + "label")
      )
    )
  }

  implicit val oFormat: OFormat[PgSeclabelRow] = new OFormat[PgSeclabelRow]{
    override def writes(o: PgSeclabelRow): JsObject =
      Json.obj(
        "objoid" -> o.objoid,
      "classoid" -> o.classoid,
      "objsubid" -> o.objsubid,
      "provider" -> o.provider,
      "label" -> o.label
      )

    override def reads(json: JsValue): JsResult[PgSeclabelRow] = {
      JsResult.fromTry(
        Try(
          PgSeclabelRow(
            objoid = json.\("objoid").as[/* oid */ Long],
            classoid = json.\("classoid").as[/* oid */ Long],
            objsubid = json.\("objsubid").as[Int],
            provider = json.\("provider").as[String],
            label = json.\("label").as[String]
          )
        )
      )
    }
  }
}
