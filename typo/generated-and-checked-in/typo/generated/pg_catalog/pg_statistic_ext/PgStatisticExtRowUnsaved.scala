/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_statistic_ext

import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgStatisticExtRowUnsaved(
  stxrelid: /* oid */ Long,
  stxname: String,
  stxnamespace: /* oid */ Long,
  stxowner: /* oid */ Long,
  stxstattarget: Int,
  stxkeys: /* int2vector */ PGobject,
  stxkind: Array[String],
  stxexprs: Option[/* pg_node_tree */ PGobject]
)
object PgStatisticExtRowUnsaved {
  implicit val oFormat: OFormat[PgStatisticExtRowUnsaved] = new OFormat[PgStatisticExtRowUnsaved]{
    override def writes(o: PgStatisticExtRowUnsaved): JsObject =
      Json.obj(
        "stxrelid" -> o.stxrelid,
      "stxname" -> o.stxname,
      "stxnamespace" -> o.stxnamespace,
      "stxowner" -> o.stxowner,
      "stxstattarget" -> o.stxstattarget,
      "stxkeys" -> o.stxkeys,
      "stxkind" -> o.stxkind,
      "stxexprs" -> o.stxexprs
      )

    override def reads(json: JsValue): JsResult[PgStatisticExtRowUnsaved] = {
      JsResult.fromTry(
        Try(
          PgStatisticExtRowUnsaved(
            stxrelid = json.\("stxrelid").as[/* oid */ Long],
            stxname = json.\("stxname").as[String],
            stxnamespace = json.\("stxnamespace").as[/* oid */ Long],
            stxowner = json.\("stxowner").as[/* oid */ Long],
            stxstattarget = json.\("stxstattarget").as[Int],
            stxkeys = json.\("stxkeys").as[/* int2vector */ PGobject],
            stxkind = json.\("stxkind").as[Array[String]],
            stxexprs = json.\("stxexprs").toOption.map(_.as[/* pg_node_tree */ PGobject])
          )
        )
      )
    }
  }
}
