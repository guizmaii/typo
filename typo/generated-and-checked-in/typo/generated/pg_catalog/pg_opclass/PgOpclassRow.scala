/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_opclass

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgOpclassRow(
  oid: PgOpclassId /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"oid","ordinal_position":1,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opcmethod: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opcmethod","ordinal_position":2,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opcname: String /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opcname","ordinal_position":3,"is_nullable":"NO","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opcnamespace: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opcnamespace","ordinal_position":4,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opcowner: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opcowner","ordinal_position":5,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opcfamily: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opcfamily","ordinal_position":6,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opcintype: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opcintype","ordinal_position":7,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opcdefault: Boolean /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opcdefault","ordinal_position":8,"is_nullable":"NO","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  opckeytype: /* oid */ Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_opclass","column_name":"opckeytype","ordinal_position":9,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
)

object PgOpclassRow {
  def rowParser(prefix: String): RowParser[PgOpclassRow] = { row =>
    Success(
      PgOpclassRow(
        oid = row[PgOpclassId](prefix + "oid"),
        opcmethod = row[/* oid */ Long](prefix + "opcmethod"),
        opcname = row[String](prefix + "opcname"),
        opcnamespace = row[/* oid */ Long](prefix + "opcnamespace"),
        opcowner = row[/* oid */ Long](prefix + "opcowner"),
        opcfamily = row[/* oid */ Long](prefix + "opcfamily"),
        opcintype = row[/* oid */ Long](prefix + "opcintype"),
        opcdefault = row[Boolean](prefix + "opcdefault"),
        opckeytype = row[/* oid */ Long](prefix + "opckeytype")
      )
    )
  }

  implicit val oFormat: OFormat[PgOpclassRow] = new OFormat[PgOpclassRow]{
    override def writes(o: PgOpclassRow): JsObject =
      Json.obj(
        "oid" -> o.oid,
      "opcmethod" -> o.opcmethod,
      "opcname" -> o.opcname,
      "opcnamespace" -> o.opcnamespace,
      "opcowner" -> o.opcowner,
      "opcfamily" -> o.opcfamily,
      "opcintype" -> o.opcintype,
      "opcdefault" -> o.opcdefault,
      "opckeytype" -> o.opckeytype
      )

    override def reads(json: JsValue): JsResult[PgOpclassRow] = {
      JsResult.fromTry(
        Try(
          PgOpclassRow(
            oid = json.\("oid").as[PgOpclassId],
            opcmethod = json.\("opcmethod").as[/* oid */ Long],
            opcname = json.\("opcname").as[String],
            opcnamespace = json.\("opcnamespace").as[/* oid */ Long],
            opcowner = json.\("opcowner").as[/* oid */ Long],
            opcfamily = json.\("opcfamily").as[/* oid */ Long],
            opcintype = json.\("opcintype").as[/* oid */ Long],
            opcdefault = json.\("opcdefault").as[Boolean],
            opckeytype = json.\("opckeytype").as[/* oid */ Long]
          )
        )
      )
    }
  }
}
