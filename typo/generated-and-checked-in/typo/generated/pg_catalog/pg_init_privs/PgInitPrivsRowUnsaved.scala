/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_init_privs

import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgInitPrivsRowUnsaved(
  privtype: String,
  initprivs: Array[/* aclitem */ PGobject]
)
object PgInitPrivsRowUnsaved {
  implicit val oFormat: OFormat[PgInitPrivsRowUnsaved] = new OFormat[PgInitPrivsRowUnsaved]{
    override def writes(o: PgInitPrivsRowUnsaved): JsObject =
      Json.obj(
        "privtype" -> o.privtype,
      "initprivs" -> o.initprivs
      )

    override def reads(json: JsValue): JsResult[PgInitPrivsRowUnsaved] = {
      JsResult.fromTry(
        Try(
          PgInitPrivsRowUnsaved(
            privtype = json.\("privtype").as[String],
            initprivs = json.\("initprivs").as[Array[/* aclitem */ PGobject]]
          )
        )
      )
    }
  }
}
