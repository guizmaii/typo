/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_attribute

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgAttributeId(attrelid: /* oid */ Long, attnum: Int)
object PgAttributeId {
  implicit def ordering: Ordering[PgAttributeId] = Ordering.by(x => (x.attrelid, x.attnum))
  implicit val oFormat: OFormat[PgAttributeId] = new OFormat[PgAttributeId]{
    override def writes(o: PgAttributeId): JsObject =
      Json.obj(
        "attrelid" -> o.attrelid,
        "attnum" -> o.attnum
      )
  
    override def reads(json: JsValue): JsResult[PgAttributeId] = {
      JsResult.fromTry(
        Try(
          PgAttributeId(
            attrelid = json.\("attrelid").as[/* oid */ Long],
            attnum = json.\("attnum").as[Int]
          )
        )
      )
    }
  }
  def rowParser(prefix: String): RowParser[PgAttributeId] = { row =>
    Success(
      PgAttributeId(
        attrelid = row[/* oid */ Long](prefix + "attrelid"),
        attnum = row[Int](prefix + "attnum")
      )
    )
  }

}
