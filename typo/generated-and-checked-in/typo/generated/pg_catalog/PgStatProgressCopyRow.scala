/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success

case class PgStatProgressCopyRow(
  pid: /* unknown nullability */ Option[Int],
  datid: /* unknown nullability */ Option[Long],
  /** Points to [[PgDatabaseRow.datname]] */
  datname: String,
  relid: /* unknown nullability */ Option[Long],
  command: /* unknown nullability */ Option[String],
  `type`: /* unknown nullability */ Option[String],
  bytesProcessed: /* unknown nullability */ Option[Long],
  bytesTotal: /* unknown nullability */ Option[Long],
  tuplesProcessed: /* unknown nullability */ Option[Long],
  tuplesExcluded: /* unknown nullability */ Option[Long]
)

object PgStatProgressCopyRow {
  implicit val rowParser: RowParser[PgStatProgressCopyRow] = { row =>
    Success(
      PgStatProgressCopyRow(
        pid = row[/* unknown nullability */ Option[Int]]("pid"),
        datid = row[/* unknown nullability */ Option[Long]]("datid"),
        datname = row[String]("datname"),
        relid = row[/* unknown nullability */ Option[Long]]("relid"),
        command = row[/* unknown nullability */ Option[String]]("command"),
        `type` = row[/* unknown nullability */ Option[String]]("type"),
        bytesProcessed = row[/* unknown nullability */ Option[Long]]("bytes_processed"),
        bytesTotal = row[/* unknown nullability */ Option[Long]]("bytes_total"),
        tuplesProcessed = row[/* unknown nullability */ Option[Long]]("tuples_processed"),
        tuplesExcluded = row[/* unknown nullability */ Option[Long]]("tuples_excluded")
      )
    )
  }

  
}
