/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.Column
import anorm.RowParser
import anorm.SqlParser
import anorm.ToStatement
import play.api.libs.json.Format

case class PgStatisticExtDataId(value: /* oid */ Long) extends AnyVal
object PgStatisticExtDataId {
  implicit val ordering: Ordering[PgStatisticExtDataId] = Ordering.by(_.value)
  implicit val format: Format[PgStatisticExtDataId] = implicitly[Format[/* oid */ Long]].bimap(PgStatisticExtDataId.apply, _.value)
  implicit val toStatement: ToStatement[PgStatisticExtDataId] = implicitly[ToStatement[/* oid */ Long]].contramap(_.value)
  implicit val column: Column[PgStatisticExtDataId] = implicitly[Column[/* oid */ Long]].map(PgStatisticExtDataId.apply)
  def rowParser(prefix: String): RowParser[PgStatisticExtDataId] = SqlParser.get[PgStatisticExtDataId](prefix + "stxoid")
}
