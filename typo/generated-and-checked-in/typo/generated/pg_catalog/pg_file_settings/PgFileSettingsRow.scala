/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_file_settings

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgFileSettingsRow(
  sourcefile: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_file_settings","column_name":"sourcefile","ordinal_position":1,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  sourceline: Option[Int] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_file_settings","column_name":"sourceline","ordinal_position":2,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  seqno: Option[Int] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_file_settings","column_name":"seqno","ordinal_position":3,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  name: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_file_settings","column_name":"name","ordinal_position":4,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  setting: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_file_settings","column_name":"setting","ordinal_position":5,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  applied: Option[Boolean] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_file_settings","column_name":"applied","ordinal_position":6,"is_nullable":"YES","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  error: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_file_settings","column_name":"error","ordinal_position":7,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object PgFileSettingsRow {
  def rowParser(prefix: String): RowParser[PgFileSettingsRow] = { row =>
    Success(
      PgFileSettingsRow(
        sourcefile = row[Option[String]](prefix + "sourcefile"),
        sourceline = row[Option[Int]](prefix + "sourceline"),
        seqno = row[Option[Int]](prefix + "seqno"),
        name = row[Option[String]](prefix + "name"),
        setting = row[Option[String]](prefix + "setting"),
        applied = row[Option[Boolean]](prefix + "applied"),
        error = row[Option[String]](prefix + "error")
      )
    )
  }

  implicit val oFormat: OFormat[PgFileSettingsRow] = new OFormat[PgFileSettingsRow]{
    override def writes(o: PgFileSettingsRow): JsObject =
      Json.obj(
        "sourcefile" -> o.sourcefile,
      "sourceline" -> o.sourceline,
      "seqno" -> o.seqno,
      "name" -> o.name,
      "setting" -> o.setting,
      "applied" -> o.applied,
      "error" -> o.error
      )

    override def reads(json: JsValue): JsResult[PgFileSettingsRow] = {
      JsResult.fromTry(
        Try(
          PgFileSettingsRow(
            sourcefile = json.\("sourcefile").toOption.map(_.as[String]),
            sourceline = json.\("sourceline").toOption.map(_.as[Int]),
            seqno = json.\("seqno").toOption.map(_.as[Int]),
            name = json.\("name").toOption.map(_.as[String]),
            setting = json.\("setting").toOption.map(_.as[String]),
            applied = json.\("applied").toOption.map(_.as[Boolean]),
            error = json.\("error").toOption.map(_.as[String])
          )
        )
      )
    }
  }
}
