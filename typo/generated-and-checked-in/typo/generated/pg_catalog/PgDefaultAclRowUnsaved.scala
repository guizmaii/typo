/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgDefaultAclRowUnsaved(
  defaclrole: /* oid */ Long,
  defaclnamespace: /* oid */ Long,
  defaclobjtype: String,
  defaclacl: Array[/* aclitem */ PGobject]
)
object PgDefaultAclRowUnsaved {
  implicit val oFormat: OFormat[PgDefaultAclRowUnsaved] = new OFormat[PgDefaultAclRowUnsaved]{
    override def writes(o: PgDefaultAclRowUnsaved): JsObject =
      Json.obj(
        "defaclrole" -> o.defaclrole,
      "defaclnamespace" -> o.defaclnamespace,
      "defaclobjtype" -> o.defaclobjtype,
      "defaclacl" -> o.defaclacl
      )

    override def reads(json: JsValue): JsResult[PgDefaultAclRowUnsaved] = {
      JsResult.fromTry(
        Try(
          PgDefaultAclRowUnsaved(
            defaclrole = json.\("defaclrole").as[/* oid */ Long],
            defaclnamespace = json.\("defaclnamespace").as[/* oid */ Long],
            defaclobjtype = json.\("defaclobjtype").as[String],
            defaclacl = json.\("defaclacl").as[Array[/* aclitem */ PGobject]]
          )
        )
      )
    }
  }
}
