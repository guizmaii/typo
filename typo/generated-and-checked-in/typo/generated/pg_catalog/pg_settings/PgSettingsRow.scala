/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_settings

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgSettingsRow(
  name: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"name","ordinal_position":1,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  setting: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"setting","ordinal_position":2,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  unit: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"unit","ordinal_position":3,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  category: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"category","ordinal_position":4,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  shortDesc: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"short_desc","ordinal_position":5,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  extraDesc: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"extra_desc","ordinal_position":6,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  context: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"context","ordinal_position":7,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  vartype: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"vartype","ordinal_position":8,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  source: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"source","ordinal_position":9,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  minVal: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"min_val","ordinal_position":10,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  maxVal: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"max_val","ordinal_position":11,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"11","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  enumvals: Option[Array[String]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"enumvals","ordinal_position":12,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_text","dtd_identifier":"12","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  bootVal: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"boot_val","ordinal_position":13,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"13","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  resetVal: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"reset_val","ordinal_position":14,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"14","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  sourcefile: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"sourcefile","ordinal_position":15,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"15","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  sourceline: Option[Int] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"sourceline","ordinal_position":16,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"16","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  pendingRestart: Option[Boolean] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_settings","column_name":"pending_restart","ordinal_position":17,"is_nullable":"YES","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"17","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object PgSettingsRow {
  def rowParser(prefix: String): RowParser[PgSettingsRow] = { row =>
    Success(
      PgSettingsRow(
        name = row[Option[String]](prefix + "name"),
        setting = row[Option[String]](prefix + "setting"),
        unit = row[Option[String]](prefix + "unit"),
        category = row[Option[String]](prefix + "category"),
        shortDesc = row[Option[String]](prefix + "short_desc"),
        extraDesc = row[Option[String]](prefix + "extra_desc"),
        context = row[Option[String]](prefix + "context"),
        vartype = row[Option[String]](prefix + "vartype"),
        source = row[Option[String]](prefix + "source"),
        minVal = row[Option[String]](prefix + "min_val"),
        maxVal = row[Option[String]](prefix + "max_val"),
        enumvals = row[Option[Array[String]]](prefix + "enumvals"),
        bootVal = row[Option[String]](prefix + "boot_val"),
        resetVal = row[Option[String]](prefix + "reset_val"),
        sourcefile = row[Option[String]](prefix + "sourcefile"),
        sourceline = row[Option[Int]](prefix + "sourceline"),
        pendingRestart = row[Option[Boolean]](prefix + "pending_restart")
      )
    )
  }

  implicit val oFormat: OFormat[PgSettingsRow] = new OFormat[PgSettingsRow]{
    override def writes(o: PgSettingsRow): JsObject =
      Json.obj(
        "name" -> o.name,
      "setting" -> o.setting,
      "unit" -> o.unit,
      "category" -> o.category,
      "short_desc" -> o.shortDesc,
      "extra_desc" -> o.extraDesc,
      "context" -> o.context,
      "vartype" -> o.vartype,
      "source" -> o.source,
      "min_val" -> o.minVal,
      "max_val" -> o.maxVal,
      "enumvals" -> o.enumvals,
      "boot_val" -> o.bootVal,
      "reset_val" -> o.resetVal,
      "sourcefile" -> o.sourcefile,
      "sourceline" -> o.sourceline,
      "pending_restart" -> o.pendingRestart
      )

    override def reads(json: JsValue): JsResult[PgSettingsRow] = {
      JsResult.fromTry(
        Try(
          PgSettingsRow(
            name = json.\("name").toOption.map(_.as[String]),
            setting = json.\("setting").toOption.map(_.as[String]),
            unit = json.\("unit").toOption.map(_.as[String]),
            category = json.\("category").toOption.map(_.as[String]),
            shortDesc = json.\("short_desc").toOption.map(_.as[String]),
            extraDesc = json.\("extra_desc").toOption.map(_.as[String]),
            context = json.\("context").toOption.map(_.as[String]),
            vartype = json.\("vartype").toOption.map(_.as[String]),
            source = json.\("source").toOption.map(_.as[String]),
            minVal = json.\("min_val").toOption.map(_.as[String]),
            maxVal = json.\("max_val").toOption.map(_.as[String]),
            enumvals = json.\("enumvals").toOption.map(_.as[Array[String]]),
            bootVal = json.\("boot_val").toOption.map(_.as[String]),
            resetVal = json.\("reset_val").toOption.map(_.as[String]),
            sourcefile = json.\("sourcefile").toOption.map(_.as[String]),
            sourceline = json.\("sourceline").toOption.map(_.as[Int]),
            pendingRestart = json.\("pending_restart").toOption.map(_.as[Boolean])
          )
        )
      )
    }
  }
}
