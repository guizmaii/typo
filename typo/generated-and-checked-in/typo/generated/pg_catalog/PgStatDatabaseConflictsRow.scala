/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success

case class PgStatDatabaseConflictsRow(
  /** Points to [[PgDatabaseRow.oid]] */
  datid: Long,
  /** Points to [[PgDatabaseRow.datname]] */
  datname: String,
  conflTablespace: /* unknown nullability */ Option[Long],
  conflLock: /* unknown nullability */ Option[Long],
  conflSnapshot: /* unknown nullability */ Option[Long],
  conflBufferpin: /* unknown nullability */ Option[Long],
  conflDeadlock: /* unknown nullability */ Option[Long]
)

object PgStatDatabaseConflictsRow {
  implicit val rowParser: RowParser[PgStatDatabaseConflictsRow] = { row =>
    Success(
      PgStatDatabaseConflictsRow(
        datid = row[Long]("datid"),
        datname = row[String]("datname"),
        conflTablespace = row[/* unknown nullability */ Option[Long]]("confl_tablespace"),
        conflLock = row[/* unknown nullability */ Option[Long]]("confl_lock"),
        conflSnapshot = row[/* unknown nullability */ Option[Long]]("confl_snapshot"),
        conflBufferpin = row[/* unknown nullability */ Option[Long]]("confl_bufferpin"),
        conflDeadlock = row[/* unknown nullability */ Option[Long]]("confl_deadlock")
      )
    )
  }

  
}
