/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgLanguageRowUnsaved(
  lanname: String,
  lanowner: /* oid */ Long,
  lanispl: Boolean,
  lanpltrusted: Boolean,
  lanplcallfoid: /* oid */ Long,
  laninline: /* oid */ Long,
  lanvalidator: /* oid */ Long,
  lanacl: Option[Array[/* aclitem */ PGobject]]
)
object PgLanguageRowUnsaved {
  implicit val oFormat: OFormat[PgLanguageRowUnsaved] = new OFormat[PgLanguageRowUnsaved]{
    override def writes(o: PgLanguageRowUnsaved): JsObject =
      Json.obj(
        "lanname" -> o.lanname,
      "lanowner" -> o.lanowner,
      "lanispl" -> o.lanispl,
      "lanpltrusted" -> o.lanpltrusted,
      "lanplcallfoid" -> o.lanplcallfoid,
      "laninline" -> o.laninline,
      "lanvalidator" -> o.lanvalidator,
      "lanacl" -> o.lanacl
      )

    override def reads(json: JsValue): JsResult[PgLanguageRowUnsaved] = {
      JsResult.fromTry(
        Try(
          PgLanguageRowUnsaved(
            lanname = json.\("lanname").as[String],
            lanowner = json.\("lanowner").as[/* oid */ Long],
            lanispl = json.\("lanispl").as[Boolean],
            lanpltrusted = json.\("lanpltrusted").as[Boolean],
            lanplcallfoid = json.\("lanplcallfoid").as[/* oid */ Long],
            laninline = json.\("laninline").as[/* oid */ Long],
            lanvalidator = json.\("lanvalidator").as[/* oid */ Long],
            lanacl = json.\("lanacl").toOption.map(_.as[Array[/* aclitem */ PGobject]])
          )
        )
      )
    }
  }
}
