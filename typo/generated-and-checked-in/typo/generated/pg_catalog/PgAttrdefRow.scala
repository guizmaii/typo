/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success
import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgAttrdefRow(
  oid: PgAttrdefId /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attrdef","column_name":"oid","ordinal_position":1,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  adrelid: Long /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attrdef","column_name":"adrelid","ordinal_position":2,"is_nullable":"NO","data_type":"oid","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"oid","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  adnum: Int /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attrdef","column_name":"adnum","ordinal_position":3,"is_nullable":"NO","data_type":"smallint","numeric_precision":16,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int2","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */,
  adbin: PGobject /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_attrdef","column_name":"adbin","ordinal_position":4,"is_nullable":"NO","data_type":"pg_node_tree","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"pg_node_tree","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"YES"} */
)

object PgAttrdefRow {
  implicit val rowParser: RowParser[PgAttrdefRow] = { row =>
    Success(
      PgAttrdefRow(
        oid = row[PgAttrdefId]("oid"),
        adrelid = row[Long]("adrelid"),
        adnum = row[Int]("adnum"),
        adbin = row[PGobject]("adbin")
      )
    )
  }

  implicit val oFormat: OFormat[PgAttrdefRow] = new OFormat[PgAttrdefRow]{
    override def writes(o: PgAttrdefRow): JsObject =
      Json.obj(
        "oid" -> o.oid,
      "adrelid" -> o.adrelid,
      "adnum" -> o.adnum,
      "adbin" -> o.adbin
      )

    override def reads(json: JsValue): JsResult[PgAttrdefRow] = {
      JsResult.fromTry(
        Try(
          PgAttrdefRow(
            oid = json.\("oid").as[PgAttrdefId],
            adrelid = json.\("adrelid").as[Long],
            adnum = json.\("adnum").as[Int],
            adbin = json.\("adbin").as[PGobject]
          )
        )
      )
    }
  }
}
