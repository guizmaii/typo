/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success

case class PgPoliciesRow(
  /** Points to [[PgNamespaceRow.nspname]] */
  schemaname: String,
  /** Points to [[PgClassRow.relname]] */
  tablename: String,
  /** Points to [[PgPolicyRow.polname]] */
  policyname: String,
  permissive: /* unknown nullability */ Option[String],
  roles: /* unknown nullability */ Option[Array[String]],
  cmd: /* unknown nullability */ Option[String],
  qual: /* unknown nullability */ Option[String],
  withCheck: /* unknown nullability */ Option[String]
)

object PgPoliciesRow {
  implicit val rowParser: RowParser[PgPoliciesRow] = { row =>
    Success(
      PgPoliciesRow(
        schemaname = row[String]("schemaname"),
        tablename = row[String]("tablename"),
        policyname = row[String]("policyname"),
        permissive = row[/* unknown nullability */ Option[String]]("permissive"),
        roles = row[/* unknown nullability */ Option[Array[String]]]("roles"),
        cmd = row[/* unknown nullability */ Option[String]]("cmd"),
        qual = row[/* unknown nullability */ Option[String]]("qual"),
        withCheck = row[/* unknown nullability */ Option[String]]("with_check")
      )
    )
  }

  
}
