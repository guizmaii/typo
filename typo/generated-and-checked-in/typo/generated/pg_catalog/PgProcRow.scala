/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success

case class PgProcRow(
  oid: PgProcId,
  proname: String,
  pronamespace: Long,
  proowner: Long,
  prolang: Long,
  procost: Float,
  prorows: Float,
  provariadic: Long,
  prosupport: String,
  prokind: String,
  prosecdef: Boolean,
  proleakproof: Boolean,
  proisstrict: Boolean,
  proretset: Boolean,
  provolatile: String,
  proparallel: String,
  pronargs: Short,
  pronargdefaults: Short,
  prorettype: Long,
  proargtypes: String,
  proallargtypes: Option[Array[Long]],
  proargmodes: Option[Array[String]],
  proargnames: Option[Array[String]],
  proargdefaults: Option[String],
  protrftypes: Option[Array[Long]],
  prosrc: String,
  probin: Option[String],
  prosqlbody: Option[String],
  proconfig: Option[Array[String]],
  proacl: Option[Array[String]]
)

object PgProcRow {
  implicit val rowParser: RowParser[PgProcRow] = { row =>
    Success(
      PgProcRow(
        oid = row[PgProcId]("oid"),
        proname = row[String]("proname"),
        pronamespace = row[Long]("pronamespace"),
        proowner = row[Long]("proowner"),
        prolang = row[Long]("prolang"),
        procost = row[Float]("procost"),
        prorows = row[Float]("prorows"),
        provariadic = row[Long]("provariadic"),
        prosupport = row[String]("prosupport"),
        prokind = row[String]("prokind"),
        prosecdef = row[Boolean]("prosecdef"),
        proleakproof = row[Boolean]("proleakproof"),
        proisstrict = row[Boolean]("proisstrict"),
        proretset = row[Boolean]("proretset"),
        provolatile = row[String]("provolatile"),
        proparallel = row[String]("proparallel"),
        pronargs = row[Short]("pronargs"),
        pronargdefaults = row[Short]("pronargdefaults"),
        prorettype = row[Long]("prorettype"),
        proargtypes = row[String]("proargtypes"),
        proallargtypes = row[Option[Array[Long]]]("proallargtypes"),
        proargmodes = row[Option[Array[String]]]("proargmodes"),
        proargnames = row[Option[Array[String]]]("proargnames"),
        proargdefaults = row[Option[String]]("proargdefaults"),
        protrftypes = row[Option[Array[Long]]]("protrftypes"),
        prosrc = row[String]("prosrc"),
        probin = row[Option[String]]("probin"),
        prosqlbody = row[Option[String]]("prosqlbody"),
        proconfig = row[Option[Array[String]]]("proconfig"),
        proacl = row[Option[Array[String]]]("proacl")
      )
    )
  }

  
}
