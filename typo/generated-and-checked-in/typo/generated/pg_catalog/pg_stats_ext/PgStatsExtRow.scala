/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_stats_ext

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgStatsExtRow(
  schemaname: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"schemaname","ordinal_position":1,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  tablename: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"tablename","ordinal_position":2,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  statisticsSchemaname: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"statistics_schemaname","ordinal_position":3,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  statisticsName: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"statistics_name","ordinal_position":4,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  statisticsOwner: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"statistics_owner","ordinal_position":5,"is_nullable":"YES","data_type":"name","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"name","dtd_identifier":"5","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  attnames: Option[Array[String]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"attnames","ordinal_position":6,"is_nullable":"YES","data_type":"ARRAY","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_name","dtd_identifier":"6","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  exprs: Option[Array[String]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"exprs","ordinal_position":7,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_text","dtd_identifier":"7","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  kinds: Option[Array[String]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"kinds","ordinal_position":8,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_char","dtd_identifier":"8","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  nDistinct: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"n_distinct","ordinal_position":9,"is_nullable":"YES","data_type":"pg_ndistinct","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"pg_ndistinct","dtd_identifier":"9","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  dependencies: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"dependencies","ordinal_position":10,"is_nullable":"YES","data_type":"pg_dependencies","collation_catalog":"postgres","collation_schema":"pg_catalog","collation_name":"C","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"pg_dependencies","dtd_identifier":"10","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  mostCommonVals: Option[Array[String]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"most_common_vals","ordinal_position":11,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_text","dtd_identifier":"11","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  mostCommonValNulls: Option[Array[Boolean]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"most_common_val_nulls","ordinal_position":12,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_bool","dtd_identifier":"12","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  mostCommonFreqs: Option[Array[Double]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"most_common_freqs","ordinal_position":13,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_float8","dtd_identifier":"13","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  mostCommonBaseFreqs: Option[Array[Double]] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stats_ext","column_name":"most_common_base_freqs","ordinal_position":14,"is_nullable":"YES","data_type":"ARRAY","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"_float8","dtd_identifier":"14","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object PgStatsExtRow {
  def rowParser(prefix: String): RowParser[PgStatsExtRow] = { row =>
    Success(
      PgStatsExtRow(
        schemaname = row[Option[String]](prefix + "schemaname"),
        tablename = row[Option[String]](prefix + "tablename"),
        statisticsSchemaname = row[Option[String]](prefix + "statistics_schemaname"),
        statisticsName = row[Option[String]](prefix + "statistics_name"),
        statisticsOwner = row[Option[String]](prefix + "statistics_owner"),
        attnames = row[Option[Array[String]]](prefix + "attnames"),
        exprs = row[Option[Array[String]]](prefix + "exprs"),
        kinds = row[Option[Array[String]]](prefix + "kinds"),
        nDistinct = row[Option[String]](prefix + "n_distinct"),
        dependencies = row[Option[String]](prefix + "dependencies"),
        mostCommonVals = row[Option[Array[String]]](prefix + "most_common_vals"),
        mostCommonValNulls = row[Option[Array[Boolean]]](prefix + "most_common_val_nulls"),
        mostCommonFreqs = row[Option[Array[Double]]](prefix + "most_common_freqs"),
        mostCommonBaseFreqs = row[Option[Array[Double]]](prefix + "most_common_base_freqs")
      )
    )
  }

  implicit val oFormat: OFormat[PgStatsExtRow] = new OFormat[PgStatsExtRow]{
    override def writes(o: PgStatsExtRow): JsObject =
      Json.obj(
        "schemaname" -> o.schemaname,
      "tablename" -> o.tablename,
      "statistics_schemaname" -> o.statisticsSchemaname,
      "statistics_name" -> o.statisticsName,
      "statistics_owner" -> o.statisticsOwner,
      "attnames" -> o.attnames,
      "exprs" -> o.exprs,
      "kinds" -> o.kinds,
      "n_distinct" -> o.nDistinct,
      "dependencies" -> o.dependencies,
      "most_common_vals" -> o.mostCommonVals,
      "most_common_val_nulls" -> o.mostCommonValNulls,
      "most_common_freqs" -> o.mostCommonFreqs,
      "most_common_base_freqs" -> o.mostCommonBaseFreqs
      )

    override def reads(json: JsValue): JsResult[PgStatsExtRow] = {
      JsResult.fromTry(
        Try(
          PgStatsExtRow(
            schemaname = json.\("schemaname").toOption.map(_.as[String]),
            tablename = json.\("tablename").toOption.map(_.as[String]),
            statisticsSchemaname = json.\("statistics_schemaname").toOption.map(_.as[String]),
            statisticsName = json.\("statistics_name").toOption.map(_.as[String]),
            statisticsOwner = json.\("statistics_owner").toOption.map(_.as[String]),
            attnames = json.\("attnames").toOption.map(_.as[Array[String]]),
            exprs = json.\("exprs").toOption.map(_.as[Array[String]]),
            kinds = json.\("kinds").toOption.map(_.as[Array[String]]),
            nDistinct = json.\("n_distinct").toOption.map(_.as[String]),
            dependencies = json.\("dependencies").toOption.map(_.as[String]),
            mostCommonVals = json.\("most_common_vals").toOption.map(_.as[Array[String]]),
            mostCommonValNulls = json.\("most_common_val_nulls").toOption.map(_.as[Array[Boolean]]),
            mostCommonFreqs = json.\("most_common_freqs").toOption.map(_.as[Array[Double]]),
            mostCommonBaseFreqs = json.\("most_common_base_freqs").toOption.map(_.as[Array[Double]])
          )
        )
      )
    }
  }
}
