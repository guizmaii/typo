/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success

case class PgTablesRow(
  /** Points to [[PgNamespaceRow.nspname]] */
  schemaname: String,
  /** Points to [[PgClassRow.relname]] */
  tablename: String,
  tableowner: /* unknown nullability */ Option[String],
  /** Points to [[PgTablespaceRow.spcname]] */
  tablespace: String,
  /** Points to [[PgClassRow.relhasindex]] */
  hasindexes: Boolean,
  /** Points to [[PgClassRow.relhasrules]] */
  hasrules: Boolean,
  /** Points to [[PgClassRow.relhastriggers]] */
  hastriggers: Boolean,
  /** Points to [[PgClassRow.relrowsecurity]] */
  rowsecurity: Boolean
)

object PgTablesRow {
  implicit val rowParser: RowParser[PgTablesRow] = { row =>
    Success(
      PgTablesRow(
        schemaname = row[String]("schemaname"),
        tablename = row[String]("tablename"),
        tableowner = row[/* unknown nullability */ Option[String]]("tableowner"),
        tablespace = row[String]("tablespace"),
        hasindexes = row[Boolean]("hasindexes"),
        hasrules = row[Boolean]("hasrules"),
        hastriggers = row[Boolean]("hastriggers"),
        rowsecurity = row[Boolean]("rowsecurity")
      )
    )
  }

  
}
