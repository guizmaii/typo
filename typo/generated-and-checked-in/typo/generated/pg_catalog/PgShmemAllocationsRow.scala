/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgShmemAllocationsRow(
  name: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_shmem_allocations","column_name":"name","ordinal_position":1,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  off: Option[Long] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_shmem_allocations","column_name":"off","ordinal_position":2,"is_nullable":"YES","data_type":"bigint","numeric_precision":64,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int8","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  size: Option[Long] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_shmem_allocations","column_name":"size","ordinal_position":3,"is_nullable":"YES","data_type":"bigint","numeric_precision":64,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int8","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  allocatedSize: Option[Long] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_shmem_allocations","column_name":"allocated_size","ordinal_position":4,"is_nullable":"YES","data_type":"bigint","numeric_precision":64,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int8","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object PgShmemAllocationsRow {
  implicit val rowParser: RowParser[PgShmemAllocationsRow] = { row =>
    Success(
      PgShmemAllocationsRow(
        name = row[Option[String]]("name"),
        off = row[Option[Long]]("off"),
        size = row[Option[Long]]("size"),
        allocatedSize = row[Option[Long]]("allocated_size")
      )
    )
  }

  implicit val oFormat: OFormat[PgShmemAllocationsRow] = new OFormat[PgShmemAllocationsRow]{
    override def writes(o: PgShmemAllocationsRow): JsObject =
      Json.obj(
        "name" -> o.name,
      "off" -> o.off,
      "size" -> o.size,
      "allocated_size" -> o.allocatedSize
      )

    override def reads(json: JsValue): JsResult[PgShmemAllocationsRow] = {
      JsResult.fromTry(
        Try(
          PgShmemAllocationsRow(
            name = json.\("name").toOption.map(_.as[String]),
            off = json.\("off").toOption.map(_.as[Long]),
            size = json.\("size").toOption.map(_.as[Long]),
            allocatedSize = json.\("allocated_size").toOption.map(_.as[Long])
          )
        )
      )
    }
  }
}
