/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success
import org.postgresql.util.PGobject

case class PgDatabaseRow(
  oid: PgDatabaseId,
  datname: String,
  datdba: Long,
  encoding: Int,
  datcollate: String,
  datctype: String,
  datistemplate: Boolean,
  datallowconn: Boolean,
  datconnlimit: Int,
  datlastsysoid: Long,
  datfrozenxid: Int,
  datminmxid: Int,
  dattablespace: Long,
  datacl: Option[Array[PGobject]]
)

object PgDatabaseRow {
  implicit val rowParser: RowParser[PgDatabaseRow] = { row =>
    Success(
      PgDatabaseRow(
        oid = row[PgDatabaseId]("oid"),
        datname = row[String]("datname"),
        datdba = row[Long]("datdba"),
        encoding = row[Int]("encoding"),
        datcollate = row[String]("datcollate"),
        datctype = row[String]("datctype"),
        datistemplate = row[Boolean]("datistemplate"),
        datallowconn = row[Boolean]("datallowconn"),
        datconnlimit = row[Int]("datconnlimit"),
        datlastsysoid = row[Long]("datlastsysoid"),
        datfrozenxid = row[Int]("datfrozenxid"),
        datminmxid = row[Int]("datminmxid"),
        dattablespace = row[Long]("dattablespace"),
        datacl = row[Option[Array[PGobject]]]("datacl")
      )
    )
  }

  
}
