/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success

case class PgStatUserFunctionsRow(
  /** Points to [[PgProcRow.oid]] */
  funcid: Long,
  /** Points to [[PgNamespaceRow.nspname]] */
  schemaname: String,
  /** Points to [[PgProcRow.proname]] */
  funcname: String,
  calls: /* unknown nullability */ Option[Long],
  totalTime: /* unknown nullability */ Option[Double],
  selfTime: /* unknown nullability */ Option[Double]
)

object PgStatUserFunctionsRow {
  implicit val rowParser: RowParser[PgStatUserFunctionsRow] = { row =>
    Success(
      PgStatUserFunctionsRow(
        funcid = row[Long]("funcid"),
        schemaname = row[String]("schemaname"),
        funcname = row[String]("funcname"),
        calls = row[/* unknown nullability */ Option[Long]]("calls"),
        totalTime = row[/* unknown nullability */ Option[Double]]("total_time"),
        selfTime = row[/* unknown nullability */ Option[Double]]("self_time")
      )
    )
  }

  
}
