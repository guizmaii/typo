/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_stat_activity

import java.time.ZonedDateTime
import org.postgresql.util.PGobject

sealed abstract class PgStatActivityFieldValue[T](val name: String, val value: T)

object PgStatActivityFieldValue {
  case class datid(override val value: Option[/* oid */ Long]) extends PgStatActivityFieldValue("datid", value)
  case class datname(override val value: Option[String]) extends PgStatActivityFieldValue("datname", value)
  case class pid(override val value: Option[Int]) extends PgStatActivityFieldValue("pid", value)
  case class leaderPid(override val value: Option[Int]) extends PgStatActivityFieldValue("leader_pid", value)
  case class usesysid(override val value: Option[/* oid */ Long]) extends PgStatActivityFieldValue("usesysid", value)
  case class usename(override val value: Option[String]) extends PgStatActivityFieldValue("usename", value)
  case class applicationName(override val value: Option[String]) extends PgStatActivityFieldValue("application_name", value)
  case class clientAddr(override val value: Option[/* inet */ PGobject]) extends PgStatActivityFieldValue("client_addr", value)
  case class clientHostname(override val value: Option[String]) extends PgStatActivityFieldValue("client_hostname", value)
  case class clientPort(override val value: Option[Int]) extends PgStatActivityFieldValue("client_port", value)
  case class backendStart(override val value: Option[ZonedDateTime]) extends PgStatActivityFieldValue("backend_start", value)
  case class xactStart(override val value: Option[ZonedDateTime]) extends PgStatActivityFieldValue("xact_start", value)
  case class queryStart(override val value: Option[ZonedDateTime]) extends PgStatActivityFieldValue("query_start", value)
  case class stateChange(override val value: Option[ZonedDateTime]) extends PgStatActivityFieldValue("state_change", value)
  case class waitEventType(override val value: Option[String]) extends PgStatActivityFieldValue("wait_event_type", value)
  case class waitEvent(override val value: Option[String]) extends PgStatActivityFieldValue("wait_event", value)
  case class state(override val value: Option[String]) extends PgStatActivityFieldValue("state", value)
  case class backendXid(override val value: Option[/* xid */ PGobject]) extends PgStatActivityFieldValue("backend_xid", value)
  case class backendXmin(override val value: Option[/* xid */ PGobject]) extends PgStatActivityFieldValue("backend_xmin", value)
  case class queryId(override val value: Option[Long]) extends PgStatActivityFieldValue("query_id", value)
  case class query(override val value: Option[String]) extends PgStatActivityFieldValue("query", value)
  case class backendType(override val value: Option[String]) extends PgStatActivityFieldValue("backend_type", value)
}
