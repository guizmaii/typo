/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_stat_gssapi

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgStatGssapiRow(
  pid: Option[Int] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stat_gssapi","column_name":"pid","ordinal_position":1,"is_nullable":"YES","data_type":"integer","numeric_precision":32,"numeric_precision_radix":2,"numeric_scale":0,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"int4","dtd_identifier":"1","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  gssAuthenticated: Option[Boolean] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stat_gssapi","column_name":"gss_authenticated","ordinal_position":2,"is_nullable":"YES","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"2","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  principal: Option[String] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stat_gssapi","column_name":"principal","ordinal_position":3,"is_nullable":"YES","data_type":"text","character_octet_length":1073741824,"udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"text","dtd_identifier":"3","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */,
  encrypted: Option[Boolean] /* {"table_catalog":"postgres","table_schema":"pg_catalog","table_name":"pg_stat_gssapi","column_name":"encrypted","ordinal_position":4,"is_nullable":"YES","data_type":"boolean","udt_catalog":"postgres","udt_schema":"pg_catalog","udt_name":"bool","dtd_identifier":"4","is_self_referencing":"NO","is_identity":"NO","identity_cycle":"NO","is_generated":"NEVER","is_updatable":"NO"} */
)

object PgStatGssapiRow {
  def rowParser(prefix: String): RowParser[PgStatGssapiRow] = { row =>
    Success(
      PgStatGssapiRow(
        pid = row[Option[Int]](prefix + "pid"),
        gssAuthenticated = row[Option[Boolean]](prefix + "gss_authenticated"),
        principal = row[Option[String]](prefix + "principal"),
        encrypted = row[Option[Boolean]](prefix + "encrypted")
      )
    )
  }

  implicit val oFormat: OFormat[PgStatGssapiRow] = new OFormat[PgStatGssapiRow]{
    override def writes(o: PgStatGssapiRow): JsObject =
      Json.obj(
        "pid" -> o.pid,
      "gss_authenticated" -> o.gssAuthenticated,
      "principal" -> o.principal,
      "encrypted" -> o.encrypted
      )

    override def reads(json: JsValue): JsResult[PgStatGssapiRow] = {
      JsResult.fromTry(
        Try(
          PgStatGssapiRow(
            pid = json.\("pid").toOption.map(_.as[Int]),
            gssAuthenticated = json.\("gss_authenticated").toOption.map(_.as[Boolean]),
            principal = json.\("principal").toOption.map(_.as[String]),
            encrypted = json.\("encrypted").toOption.map(_.as[Boolean])
          )
        )
      )
    }
  }
}
