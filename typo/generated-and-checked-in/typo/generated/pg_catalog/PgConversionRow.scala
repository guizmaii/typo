/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog

import anorm.RowParser
import anorm.Success

case class PgConversionRow(
  oid: PgConversionId,
  conname: String,
  connamespace: Long,
  conowner: Long,
  conforencoding: Int,
  contoencoding: Int,
  conproc: String,
  condefault: Boolean
)

object PgConversionRow {
  implicit val rowParser: RowParser[PgConversionRow] = { row =>
    Success(
      PgConversionRow(
        oid = row[PgConversionId]("oid"),
        conname = row[String]("conname"),
        connamespace = row[Long]("connamespace"),
        conowner = row[Long]("conowner"),
        conforencoding = row[Int]("conforencoding"),
        contoencoding = row[Int]("contoencoding"),
        conproc = row[String]("conproc"),
        condefault = row[Boolean]("condefault")
      )
    )
  }

  
}
