/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_am

import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgAmRowUnsaved(
  amname: String,
  amhandler: /* regproc */ PGobject,
  amtype: String
)
object PgAmRowUnsaved {
  implicit val oFormat: OFormat[PgAmRowUnsaved] = new OFormat[PgAmRowUnsaved]{
    override def writes(o: PgAmRowUnsaved): JsObject =
      Json.obj(
        "amname" -> o.amname,
      "amhandler" -> o.amhandler,
      "amtype" -> o.amtype
      )

    override def reads(json: JsValue): JsResult[PgAmRowUnsaved] = {
      JsResult.fromTry(
        Try(
          PgAmRowUnsaved(
            amname = json.\("amname").as[String],
            amhandler = json.\("amhandler").as[/* regproc */ PGobject],
            amtype = json.\("amtype").as[String]
          )
        )
      )
    }
  }
}
