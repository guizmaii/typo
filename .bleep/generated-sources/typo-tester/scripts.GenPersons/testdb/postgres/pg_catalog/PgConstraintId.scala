/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package postgres
package pg_catalog

import anorm.Column
import anorm.ParameterMetaData
import anorm.RowParser
import anorm.SqlParser
import anorm.ToStatement
import play.api.libs.json.Format

case class PgConstraintId(value: /* oid */ Long) extends AnyVal
object PgConstraintId {
  implicit val ordering: Ordering[PgConstraintId] = Ordering.by(_.value)
  implicit val format: Format[PgConstraintId] = implicitly[Format[/* oid */ Long]].bimap(PgConstraintId.apply, _.value)
  implicit val toStatement: ToStatement[PgConstraintId] = implicitly[ToStatement[/* oid */ Long]].contramap(_.value)
  implicit val column: Column[PgConstraintId] = implicitly[Column[/* oid */ Long]].map(PgConstraintId.apply)
  def rowParser(prefix: String): RowParser[PgConstraintId] = SqlParser.get[PgConstraintId](prefix + "oid")
  implicit val parameterMetadata: ParameterMetaData[PgConstraintId] = new ParameterMetaData[PgConstraintId] {
    override def sqlType: String = implicitly[ParameterMetaData[/* oid */ Long]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[/* oid */ Long]].jdbcType
  }

}
