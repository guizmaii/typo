/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package postgres
package pg_catalog

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgStatUserFunctionsRow(
  funcid: Option[Long],
  schemaname: Option[String],
  funcname: Option[String],
  calls: Option[Long],
  totalTime: Option[Double],
  selfTime: Option[Double]
)

object PgStatUserFunctionsRow {
  implicit val rowParser: RowParser[PgStatUserFunctionsRow] = { row =>
    Success(
      PgStatUserFunctionsRow(
        funcid = row[Option[Long]]("funcid"),
        schemaname = row[Option[String]]("schemaname"),
        funcname = row[Option[String]]("funcname"),
        calls = row[Option[Long]]("calls"),
        totalTime = row[Option[Double]]("total_time"),
        selfTime = row[Option[Double]]("self_time")
      )
    )
  }

  implicit val oFormat: OFormat[PgStatUserFunctionsRow] = new OFormat[PgStatUserFunctionsRow]{
    override def writes(o: PgStatUserFunctionsRow): JsObject =
      Json.obj(
        "funcid" -> o.funcid,
      "schemaname" -> o.schemaname,
      "funcname" -> o.funcname,
      "calls" -> o.calls,
      "total_time" -> o.totalTime,
      "self_time" -> o.selfTime
      )

    override def reads(json: JsValue): JsResult[PgStatUserFunctionsRow] = {
      JsResult.fromTry(
        Try(
          PgStatUserFunctionsRow(
            funcid = json.\("funcid").toOption.map(_.as[Long]),
            schemaname = json.\("schemaname").toOption.map(_.as[String]),
            funcname = json.\("funcname").toOption.map(_.as[String]),
            calls = json.\("calls").toOption.map(_.as[Long]),
            totalTime = json.\("total_time").toOption.map(_.as[Double]),
            selfTime = json.\("self_time").toOption.map(_.as[Double])
          )
        )
      )
    }
  }
}
