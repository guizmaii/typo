/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package postgres
package pg_catalog

import anorm.Column
import anorm.ParameterMetaData
import anorm.RowParser
import anorm.SqlParser
import anorm.ToStatement
import play.api.libs.json.Format

case class PgRewriteId(value: /* oid */ Long) extends AnyVal
object PgRewriteId {
  implicit val ordering: Ordering[PgRewriteId] = Ordering.by(_.value)
  implicit val format: Format[PgRewriteId] = implicitly[Format[/* oid */ Long]].bimap(PgRewriteId.apply, _.value)
  implicit val toStatement: ToStatement[PgRewriteId] = implicitly[ToStatement[/* oid */ Long]].contramap(_.value)
  implicit val column: Column[PgRewriteId] = implicitly[Column[/* oid */ Long]].map(PgRewriteId.apply)
  def rowParser(prefix: String): RowParser[PgRewriteId] = SqlParser.get[PgRewriteId](prefix + "oid")
  implicit val parameterMetadata: ParameterMetaData[PgRewriteId] = new ParameterMetaData[PgRewriteId] {
    override def sqlType: String = implicitly[ParameterMetaData[/* oid */ Long]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[/* oid */ Long]].jdbcType
  }

}
