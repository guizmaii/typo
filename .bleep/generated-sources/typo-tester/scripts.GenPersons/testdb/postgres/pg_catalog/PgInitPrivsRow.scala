/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package postgres
package pg_catalog

import anorm.RowParser
import anorm.Success
import org.postgresql.util.PGobject
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgInitPrivsRow(
  objoid: /* oid */ Long,
  classoid: /* oid */ Long,
  objsubid: Int,
  privtype: String,
  initprivs: Array[/* aclitem */ PGobject]
){
  val compositeId: PgInitPrivsId = PgInitPrivsId(objoid, classoid, objsubid)
}

object PgInitPrivsRow {
  def rowParser(prefix: String): RowParser[PgInitPrivsRow] = { row =>
    Success(
      PgInitPrivsRow(
        objoid = row[/* oid */ Long](prefix + "objoid"),
        classoid = row[/* oid */ Long](prefix + "classoid"),
        objsubid = row[Int](prefix + "objsubid"),
        privtype = row[String](prefix + "privtype"),
        initprivs = row[Array[/* aclitem */ PGobject]](prefix + "initprivs")
      )
    )
  }

  implicit val oFormat: OFormat[PgInitPrivsRow] = new OFormat[PgInitPrivsRow]{
    override def writes(o: PgInitPrivsRow): JsObject =
      Json.obj(
        "objoid" -> o.objoid,
      "classoid" -> o.classoid,
      "objsubid" -> o.objsubid,
      "privtype" -> o.privtype,
      "initprivs" -> o.initprivs
      )

    override def reads(json: JsValue): JsResult[PgInitPrivsRow] = {
      JsResult.fromTry(
        Try(
          PgInitPrivsRow(
            objoid = json.\("objoid").as[/* oid */ Long],
            classoid = json.\("classoid").as[/* oid */ Long],
            objsubid = json.\("objsubid").as[Int],
            privtype = json.\("privtype").as[String],
            initprivs = json.\("initprivs").as[Array[/* aclitem */ PGobject]]
          )
        )
      )
    }
  }
}
