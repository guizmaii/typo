/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package postgres
package information_schema



sealed abstract class ColumnsFieldValue[T](val name: String, val value: T)

object ColumnsFieldValue {
  case class tableCatalog(override val value: Option[String]) extends ColumnsFieldValue("table_catalog", value)
  case class tableSchema(override val value: Option[String]) extends ColumnsFieldValue("table_schema", value)
  case class tableName(override val value: Option[String]) extends ColumnsFieldValue("table_name", value)
  case class columnName(override val value: Option[String]) extends ColumnsFieldValue("column_name", value)
  case class ordinalPosition(override val value: Option[Int]) extends ColumnsFieldValue("ordinal_position", value)
  case class columnDefault(override val value: Option[String]) extends ColumnsFieldValue("column_default", value)
  case class isNullable(override val value: Option[String]) extends ColumnsFieldValue("is_nullable", value)
  case class dataType(override val value: Option[String]) extends ColumnsFieldValue("data_type", value)
  case class characterMaximumLength(override val value: Option[Int]) extends ColumnsFieldValue("character_maximum_length", value)
  case class characterOctetLength(override val value: Option[Int]) extends ColumnsFieldValue("character_octet_length", value)
  case class numericPrecision(override val value: Option[Int]) extends ColumnsFieldValue("numeric_precision", value)
  case class numericPrecisionRadix(override val value: Option[Int]) extends ColumnsFieldValue("numeric_precision_radix", value)
  case class numericScale(override val value: Option[Int]) extends ColumnsFieldValue("numeric_scale", value)
  case class datetimePrecision(override val value: Option[Int]) extends ColumnsFieldValue("datetime_precision", value)
  case class intervalType(override val value: Option[String]) extends ColumnsFieldValue("interval_type", value)
  case class intervalPrecision(override val value: Option[Int]) extends ColumnsFieldValue("interval_precision", value)
  case class characterSetCatalog(override val value: Option[String]) extends ColumnsFieldValue("character_set_catalog", value)
  case class characterSetSchema(override val value: Option[String]) extends ColumnsFieldValue("character_set_schema", value)
  case class characterSetName(override val value: Option[String]) extends ColumnsFieldValue("character_set_name", value)
  case class collationCatalog(override val value: Option[String]) extends ColumnsFieldValue("collation_catalog", value)
  case class collationSchema(override val value: Option[String]) extends ColumnsFieldValue("collation_schema", value)
  case class collationName(override val value: Option[String]) extends ColumnsFieldValue("collation_name", value)
  case class domainCatalog(override val value: Option[String]) extends ColumnsFieldValue("domain_catalog", value)
  case class domainSchema(override val value: Option[String]) extends ColumnsFieldValue("domain_schema", value)
  case class domainName(override val value: Option[String]) extends ColumnsFieldValue("domain_name", value)
  case class udtCatalog(override val value: Option[String]) extends ColumnsFieldValue("udt_catalog", value)
  case class udtSchema(override val value: Option[String]) extends ColumnsFieldValue("udt_schema", value)
  case class udtName(override val value: Option[String]) extends ColumnsFieldValue("udt_name", value)
  case class scopeCatalog(override val value: Option[String]) extends ColumnsFieldValue("scope_catalog", value)
  case class scopeSchema(override val value: Option[String]) extends ColumnsFieldValue("scope_schema", value)
  case class scopeName(override val value: Option[String]) extends ColumnsFieldValue("scope_name", value)
  case class maximumCardinality(override val value: Option[Int]) extends ColumnsFieldValue("maximum_cardinality", value)
  case class dtdIdentifier(override val value: Option[String]) extends ColumnsFieldValue("dtd_identifier", value)
  case class isSelfReferencing(override val value: Option[String]) extends ColumnsFieldValue("is_self_referencing", value)
  case class isIdentity(override val value: Option[String]) extends ColumnsFieldValue("is_identity", value)
  case class identityGeneration(override val value: Option[String]) extends ColumnsFieldValue("identity_generation", value)
  case class identityStart(override val value: Option[String]) extends ColumnsFieldValue("identity_start", value)
  case class identityIncrement(override val value: Option[String]) extends ColumnsFieldValue("identity_increment", value)
  case class identityMaximum(override val value: Option[String]) extends ColumnsFieldValue("identity_maximum", value)
  case class identityMinimum(override val value: Option[String]) extends ColumnsFieldValue("identity_minimum", value)
  case class identityCycle(override val value: Option[String]) extends ColumnsFieldValue("identity_cycle", value)
  case class isGenerated(override val value: Option[String]) extends ColumnsFieldValue("is_generated", value)
  case class generationExpression(override val value: Option[String]) extends ColumnsFieldValue("generation_expression", value)
  case class isUpdatable(override val value: Option[String]) extends ColumnsFieldValue("is_updatable", value)
}
