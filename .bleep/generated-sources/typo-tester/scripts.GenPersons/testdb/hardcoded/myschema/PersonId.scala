/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded
package myschema

import anorm.Column
import anorm.ParameterMetaData
import anorm.RowParser
import anorm.SqlParser
import anorm.ToStatement
import play.api.libs.json.Format

case class PersonId(value: Long) extends AnyVal
object PersonId {
  implicit val ordering: Ordering[PersonId] = Ordering.by(_.value)
  implicit val format: Format[PersonId] = implicitly[Format[Long]].bimap(PersonId.apply, _.value)
  implicit val toStatement: ToStatement[PersonId] = implicitly[ToStatement[Long]].contramap(_.value)
  implicit val column: Column[PersonId] = implicitly[Column[Long]].map(PersonId.apply)
  def rowParser(prefix: String): RowParser[PersonId] = SqlParser.get[PersonId](prefix + "id")
  implicit val parameterMetadata: ParameterMetaData[PersonId] = new ParameterMetaData[PersonId] {
    override def sqlType: String = implicitly[ParameterMetaData[Long]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[Long]].jdbcType
  }

}
