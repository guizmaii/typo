/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_config

import anorm.ParameterValue
import anorm.SqlStringInterpolation
import anorm.ToStatement
import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder

object PgTsConfigRepoImpl extends PgTsConfigRepo {
  override def delete(oid: PgTsConfigId)(implicit c: Connection): Boolean = {
    SQL"delete from pg_catalog.pg_ts_config where oid = ${ParameterValue(oid, null, PgTsConfigId.toStatement)}".executeUpdate() > 0
  }
  override def delete: DeleteBuilder[PgTsConfigFields, PgTsConfigRow] = {
    DeleteBuilder("pg_catalog.pg_ts_config", PgTsConfigFields)
  }
  override def insert(unsaved: PgTsConfigRow)(implicit c: Connection): PgTsConfigRow = {
    SQL"""insert into pg_catalog.pg_ts_config(oid, cfgname, cfgnamespace, cfgowner, cfgparser)
          values (${ParameterValue(unsaved.oid, null, PgTsConfigId.toStatement)}::oid, ${ParameterValue(unsaved.cfgname, null, ToStatement.stringToStatement)}::name, ${ParameterValue(unsaved.cfgnamespace, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.cfgowner, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.cfgparser, null, ToStatement.longToStatement)}::oid)
          returning oid, cfgname, cfgnamespace, cfgowner, cfgparser
       """
      .executeInsert(PgTsConfigRow.rowParser(1).single)
    
  }
  override def select: SelectBuilder[PgTsConfigFields, PgTsConfigRow] = {
    SelectBuilderSql("pg_catalog.pg_ts_config", PgTsConfigFields, PgTsConfigRow.rowParser)
  }
  override def selectAll(implicit c: Connection): List[PgTsConfigRow] = {
    SQL"""select oid, cfgname, cfgnamespace, cfgowner, cfgparser
          from pg_catalog.pg_ts_config
       """.as(PgTsConfigRow.rowParser(1).*)
  }
  override def selectById(oid: PgTsConfigId)(implicit c: Connection): Option[PgTsConfigRow] = {
    SQL"""select oid, cfgname, cfgnamespace, cfgowner, cfgparser
          from pg_catalog.pg_ts_config
          where oid = ${ParameterValue(oid, null, PgTsConfigId.toStatement)}
       """.as(PgTsConfigRow.rowParser(1).singleOpt)
  }
  override def selectByIds(oids: Array[PgTsConfigId])(implicit c: Connection): List[PgTsConfigRow] = {
    SQL"""select oid, cfgname, cfgnamespace, cfgowner, cfgparser
          from pg_catalog.pg_ts_config
          where oid = ANY(${oids})
       """.as(PgTsConfigRow.rowParser(1).*)
    
  }
  override def update(row: PgTsConfigRow)(implicit c: Connection): Boolean = {
    val oid = row.oid
    SQL"""update pg_catalog.pg_ts_config
          set cfgname = ${ParameterValue(row.cfgname, null, ToStatement.stringToStatement)}::name,
              cfgnamespace = ${ParameterValue(row.cfgnamespace, null, ToStatement.longToStatement)}::oid,
              cfgowner = ${ParameterValue(row.cfgowner, null, ToStatement.longToStatement)}::oid,
              cfgparser = ${ParameterValue(row.cfgparser, null, ToStatement.longToStatement)}::oid
          where oid = ${ParameterValue(oid, null, PgTsConfigId.toStatement)}
       """.executeUpdate() > 0
  }
  override def update: UpdateBuilder[PgTsConfigFields, PgTsConfigRow] = {
    UpdateBuilder("pg_catalog.pg_ts_config", PgTsConfigFields, PgTsConfigRow.rowParser)
  }
  override def upsert(unsaved: PgTsConfigRow)(implicit c: Connection): PgTsConfigRow = {
    SQL"""insert into pg_catalog.pg_ts_config(oid, cfgname, cfgnamespace, cfgowner, cfgparser)
          values (
            ${ParameterValue(unsaved.oid, null, PgTsConfigId.toStatement)}::oid,
            ${ParameterValue(unsaved.cfgname, null, ToStatement.stringToStatement)}::name,
            ${ParameterValue(unsaved.cfgnamespace, null, ToStatement.longToStatement)}::oid,
            ${ParameterValue(unsaved.cfgowner, null, ToStatement.longToStatement)}::oid,
            ${ParameterValue(unsaved.cfgparser, null, ToStatement.longToStatement)}::oid
          )
          on conflict (oid)
          do update set
            cfgname = EXCLUDED.cfgname,
            cfgnamespace = EXCLUDED.cfgnamespace,
            cfgowner = EXCLUDED.cfgowner,
            cfgparser = EXCLUDED.cfgparser
          returning oid, cfgname, cfgnamespace, cfgowner, cfgparser
       """
      .executeInsert(PgTsConfigRow.rowParser(1).single)
    
  }
}
