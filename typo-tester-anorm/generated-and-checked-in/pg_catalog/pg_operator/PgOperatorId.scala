/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_operator

import anorm.Column
import anorm.ParameterMetaData
import anorm.ToStatement
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import typo.dsl.Bijection

/** Type for the primary key of table `pg_catalog.pg_operator` */
case class PgOperatorId(value: /* oid */ Long) extends AnyVal
object PgOperatorId {
  implicit lazy val arrayColumn: Column[Array[PgOperatorId]] = Column.columnToArray(column, implicitly)
  implicit lazy val arrayToStatement: ToStatement[Array[PgOperatorId]] = adventureworks.LongArrayToStatement.contramap(_.map(_.value))
  implicit lazy val bijection: Bijection[PgOperatorId, /* oid */ Long] = Bijection[PgOperatorId, /* oid */ Long](_.value)(PgOperatorId.apply)
  implicit lazy val column: Column[PgOperatorId] = Column.columnToLong.map(PgOperatorId.apply)
  implicit lazy val ordering: Ordering[PgOperatorId] = Ordering.by(_.value)
  implicit lazy val parameterMetadata: ParameterMetaData[PgOperatorId] = new ParameterMetaData[PgOperatorId] {
    override def sqlType: String = ParameterMetaData.LongParameterMetaData.sqlType
    override def jdbcType: Int = ParameterMetaData.LongParameterMetaData.jdbcType
  }
  implicit lazy val reads: Reads[PgOperatorId] = Reads.LongReads.map(PgOperatorId.apply)
  implicit lazy val toStatement: ToStatement[PgOperatorId] = ToStatement.longToStatement.contramap(_.value)
  implicit lazy val writes: Writes[PgOperatorId] = Writes.LongWrites.contramap(_.value)
}
