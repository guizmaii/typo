/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productmodel

import adventureworks.TypoXml
import adventureworks.public.Name
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class ProductmodelRow(
  /** Primary key for ProductModel records. */
  productmodelid: ProductmodelId,
  /** Product model description. */
  name: Name,
  /** Detailed product catalog information in xml format. */
  catalogdescription: Option[TypoXml],
  /** Manufacturing instructions in xml format. */
  instructions: Option[TypoXml],
  rowguid: UUID,
  modifieddate: LocalDateTime
)

object ProductmodelRow {
  val rowParser: RowParser[ProductmodelRow] =
    RowParser[ProductmodelRow] { row =>
      Success(
        ProductmodelRow(
          productmodelid = row[ProductmodelId]("productmodelid"),
          name = row[Name]("name"),
          catalogdescription = row[Option[TypoXml]]("catalogdescription"),
          instructions = row[Option[TypoXml]]("instructions"),
          rowguid = row[UUID]("rowguid"),
          modifieddate = row[LocalDateTime]("modifieddate")
        )
      )
    }
  implicit val oFormat: OFormat[ProductmodelRow] = new OFormat[ProductmodelRow]{
    override def writes(o: ProductmodelRow): JsObject =
      Json.obj(
        "productmodelid" -> o.productmodelid,
        "name" -> o.name,
        "catalogdescription" -> o.catalogdescription,
        "instructions" -> o.instructions,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[ProductmodelRow] = {
      JsResult.fromTry(
        Try(
          ProductmodelRow(
            productmodelid = json.\("productmodelid").as[ProductmodelId],
            name = json.\("name").as[Name],
            catalogdescription = json.\("catalogdescription").toOption.map(_.as[TypoXml]),
            instructions = json.\("instructions").toOption.map(_.as[TypoXml]),
            rowguid = json.\("rowguid").as[UUID],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
