/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductmodelcatalogdescription

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.production.productmodel.ProductmodelId
import adventureworks.public.Name
import anorm.Column
import anorm.RowParser
import anorm.Success
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class VproductmodelcatalogdescriptionViewRow(
  /** Points to [[productmodel.ProductmodelRow.productmodelid]] */
  productmodelid: ProductmodelId,
  /** Points to [[productmodel.ProductmodelRow.name]] */
  name: Name,
  Summary: String,
  manufacturer: String,
  copyright: /* max 30 chars */ String,
  producturl: /* max 256 chars */ String,
  warrantyperiod: /* max 256 chars */ String,
  warrantydescription: /* max 256 chars */ String,
  noofyears: /* max 256 chars */ String,
  maintenancedescription: /* max 256 chars */ String,
  wheel: /* max 256 chars */ String,
  saddle: /* max 256 chars */ String,
  pedal: /* max 256 chars */ String,
  bikeframe: String,
  crankset: /* max 256 chars */ String,
  pictureangle: /* max 256 chars */ String,
  picturesize: /* max 256 chars */ String,
  productphotoid: /* max 256 chars */ String,
  material: /* max 256 chars */ String,
  color: /* max 256 chars */ String,
  productline: /* max 256 chars */ String,
  style: /* max 256 chars */ String,
  riderexperience: /* max 1024 chars */ String,
  /** Points to [[productmodel.ProductmodelRow.rowguid]] */
  rowguid: UUID,
  /** Points to [[productmodel.ProductmodelRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object VproductmodelcatalogdescriptionViewRow {
  implicit lazy val reads: Reads[VproductmodelcatalogdescriptionViewRow] = Reads[VproductmodelcatalogdescriptionViewRow](json => JsResult.fromTry(
      Try(
        VproductmodelcatalogdescriptionViewRow(
          productmodelid = json.\("productmodelid").as(ProductmodelId.reads),
          name = json.\("name").as(Name.reads),
          Summary = json.\("Summary").as(Reads.StringReads),
          manufacturer = json.\("manufacturer").as(Reads.StringReads),
          copyright = json.\("copyright").as(Reads.StringReads),
          producturl = json.\("producturl").as(Reads.StringReads),
          warrantyperiod = json.\("warrantyperiod").as(Reads.StringReads),
          warrantydescription = json.\("warrantydescription").as(Reads.StringReads),
          noofyears = json.\("noofyears").as(Reads.StringReads),
          maintenancedescription = json.\("maintenancedescription").as(Reads.StringReads),
          wheel = json.\("wheel").as(Reads.StringReads),
          saddle = json.\("saddle").as(Reads.StringReads),
          pedal = json.\("pedal").as(Reads.StringReads),
          bikeframe = json.\("bikeframe").as(Reads.StringReads),
          crankset = json.\("crankset").as(Reads.StringReads),
          pictureangle = json.\("pictureangle").as(Reads.StringReads),
          picturesize = json.\("picturesize").as(Reads.StringReads),
          productphotoid = json.\("productphotoid").as(Reads.StringReads),
          material = json.\("material").as(Reads.StringReads),
          color = json.\("color").as(Reads.StringReads),
          productline = json.\("productline").as(Reads.StringReads),
          style = json.\("style").as(Reads.StringReads),
          riderexperience = json.\("riderexperience").as(Reads.StringReads),
          rowguid = json.\("rowguid").as(Reads.uuidReads),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[VproductmodelcatalogdescriptionViewRow] = RowParser[VproductmodelcatalogdescriptionViewRow] { row =>
    Success(
      VproductmodelcatalogdescriptionViewRow(
        productmodelid = row(idx + 0)(ProductmodelId.column),
        name = row(idx + 1)(Name.column),
        Summary = row(idx + 2)(Column.columnToString),
        manufacturer = row(idx + 3)(Column.columnToString),
        copyright = row(idx + 4)(Column.columnToString),
        producturl = row(idx + 5)(Column.columnToString),
        warrantyperiod = row(idx + 6)(Column.columnToString),
        warrantydescription = row(idx + 7)(Column.columnToString),
        noofyears = row(idx + 8)(Column.columnToString),
        maintenancedescription = row(idx + 9)(Column.columnToString),
        wheel = row(idx + 10)(Column.columnToString),
        saddle = row(idx + 11)(Column.columnToString),
        pedal = row(idx + 12)(Column.columnToString),
        bikeframe = row(idx + 13)(Column.columnToString),
        crankset = row(idx + 14)(Column.columnToString),
        pictureangle = row(idx + 15)(Column.columnToString),
        picturesize = row(idx + 16)(Column.columnToString),
        productphotoid = row(idx + 17)(Column.columnToString),
        material = row(idx + 18)(Column.columnToString),
        color = row(idx + 19)(Column.columnToString),
        productline = row(idx + 20)(Column.columnToString),
        style = row(idx + 21)(Column.columnToString),
        riderexperience = row(idx + 22)(Column.columnToString),
        rowguid = row(idx + 23)(Column.columnToUUID),
        modifieddate = row(idx + 24)(TypoLocalDateTime.column)
      )
    )
  }
  implicit lazy val writes: OWrites[VproductmodelcatalogdescriptionViewRow] = OWrites[VproductmodelcatalogdescriptionViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "productmodelid" -> ProductmodelId.writes.writes(o.productmodelid),
      "name" -> Name.writes.writes(o.name),
      "Summary" -> Writes.StringWrites.writes(o.Summary),
      "manufacturer" -> Writes.StringWrites.writes(o.manufacturer),
      "copyright" -> Writes.StringWrites.writes(o.copyright),
      "producturl" -> Writes.StringWrites.writes(o.producturl),
      "warrantyperiod" -> Writes.StringWrites.writes(o.warrantyperiod),
      "warrantydescription" -> Writes.StringWrites.writes(o.warrantydescription),
      "noofyears" -> Writes.StringWrites.writes(o.noofyears),
      "maintenancedescription" -> Writes.StringWrites.writes(o.maintenancedescription),
      "wheel" -> Writes.StringWrites.writes(o.wheel),
      "saddle" -> Writes.StringWrites.writes(o.saddle),
      "pedal" -> Writes.StringWrites.writes(o.pedal),
      "bikeframe" -> Writes.StringWrites.writes(o.bikeframe),
      "crankset" -> Writes.StringWrites.writes(o.crankset),
      "pictureangle" -> Writes.StringWrites.writes(o.pictureangle),
      "picturesize" -> Writes.StringWrites.writes(o.picturesize),
      "productphotoid" -> Writes.StringWrites.writes(o.productphotoid),
      "material" -> Writes.StringWrites.writes(o.material),
      "color" -> Writes.StringWrites.writes(o.color),
      "productline" -> Writes.StringWrites.writes(o.productline),
      "style" -> Writes.StringWrites.writes(o.style),
      "riderexperience" -> Writes.StringWrites.writes(o.riderexperience),
      "rowguid" -> Writes.UuidWrites.writes(o.rowguid),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
