/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sth

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.salesterritory.SalesterritoryId
import anorm.Column
import anorm.RowParser
import anorm.Success
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class SthViewRow(
  id: Int,
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.territoryid]] */
  territoryid: SalesterritoryId,
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.startdate]] */
  startdate: TypoLocalDateTime,
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.enddate]] */
  enddate: TypoLocalDateTime,
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.rowguid]] */
  rowguid: UUID,
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object SthViewRow {
  implicit lazy val reads: Reads[SthViewRow] = Reads[SthViewRow](json => JsResult.fromTry(
      Try(
        SthViewRow(
          id = json.\("id").as(Reads.IntReads),
          businessentityid = json.\("businessentityid").as(BusinessentityId.reads),
          territoryid = json.\("territoryid").as(SalesterritoryId.reads),
          startdate = json.\("startdate").as(TypoLocalDateTime.reads),
          enddate = json.\("enddate").as(TypoLocalDateTime.reads),
          rowguid = json.\("rowguid").as(Reads.uuidReads),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[SthViewRow] = RowParser[SthViewRow] { row =>
    Success(
      SthViewRow(
        id = row(idx + 0)(Column.columnToInt),
        businessentityid = row(idx + 1)(BusinessentityId.column),
        territoryid = row(idx + 2)(SalesterritoryId.column),
        startdate = row(idx + 3)(TypoLocalDateTime.column),
        enddate = row(idx + 4)(TypoLocalDateTime.column),
        rowguid = row(idx + 5)(Column.columnToUUID),
        modifieddate = row(idx + 6)(TypoLocalDateTime.column)
      )
    )
  }
  implicit lazy val writes: OWrites[SthViewRow] = OWrites[SthViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Writes.IntWrites.writes(o.id),
      "businessentityid" -> BusinessentityId.writes.writes(o.businessentityid),
      "territoryid" -> SalesterritoryId.writes.writes(o.territoryid),
      "startdate" -> TypoLocalDateTime.writes.writes(o.startdate),
      "enddate" -> TypoLocalDateTime.writes.writes(o.enddate),
      "rowguid" -> Writes.UuidWrites.writes(o.rowguid),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
