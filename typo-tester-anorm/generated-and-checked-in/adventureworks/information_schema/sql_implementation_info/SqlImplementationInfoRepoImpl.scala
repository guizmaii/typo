/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package sql_implementation_info

import adventureworks.information_schema.CardinalNumber
import adventureworks.information_schema.CharacterData
import anorm.ParameterValue
import anorm.SqlStringInterpolation
import anorm.ToStatement
import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder

object SqlImplementationInfoRepoImpl extends SqlImplementationInfoRepo {
  override def delete: DeleteBuilder[SqlImplementationInfoFields, SqlImplementationInfoRow] = {
    DeleteBuilder("information_schema.sql_implementation_info", SqlImplementationInfoFields)
  }
  override def insert(unsaved: SqlImplementationInfoRow)(implicit c: Connection): SqlImplementationInfoRow = {
    SQL"""insert into information_schema.sql_implementation_info("implementation_info_id", "implementation_info_name", "integer_value", "character_value", "comments")
          values (${ParameterValue(unsaved.implementationInfoId, null, ToStatement.optionToStatement(CharacterData.toStatement, CharacterData.parameterMetadata))}::varchar, ${ParameterValue(unsaved.implementationInfoName, null, ToStatement.optionToStatement(CharacterData.toStatement, CharacterData.parameterMetadata))}::varchar, ${ParameterValue(unsaved.integerValue, null, ToStatement.optionToStatement(CardinalNumber.toStatement, CardinalNumber.parameterMetadata))}::int4, ${ParameterValue(unsaved.characterValue, null, ToStatement.optionToStatement(CharacterData.toStatement, CharacterData.parameterMetadata))}::varchar, ${ParameterValue(unsaved.comments, null, ToStatement.optionToStatement(CharacterData.toStatement, CharacterData.parameterMetadata))}::varchar)
          returning "implementation_info_id", "implementation_info_name", "integer_value", "character_value", "comments"
       """
      .executeInsert(SqlImplementationInfoRow.rowParser(1).single)
    
  }
  override def select: SelectBuilder[SqlImplementationInfoFields, SqlImplementationInfoRow] = {
    SelectBuilderSql("information_schema.sql_implementation_info", SqlImplementationInfoFields, SqlImplementationInfoRow.rowParser)
  }
  override def selectAll(implicit c: Connection): List[SqlImplementationInfoRow] = {
    SQL"""select "implementation_info_id", "implementation_info_name", "integer_value", "character_value", "comments"
          from information_schema.sql_implementation_info
       """.as(SqlImplementationInfoRow.rowParser(1).*)
  }
  override def update: UpdateBuilder[SqlImplementationInfoFields, SqlImplementationInfoRow] = {
    UpdateBuilder("information_schema.sql_implementation_info", SqlImplementationInfoFields, SqlImplementationInfoRow.rowParser)
  }
}
