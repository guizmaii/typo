/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routine_table_usage

import adventureworks.information_schema.SqlIdentifier
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class RoutineTableUsageViewRow(
  specificCatalog: SqlIdentifier,
  specificSchema: SqlIdentifier,
  specificName: SqlIdentifier,
  routineCatalog: SqlIdentifier,
  routineSchema: SqlIdentifier,
  routineName: SqlIdentifier,
  tableCatalog: SqlIdentifier,
  tableSchema: SqlIdentifier,
  tableName: SqlIdentifier
)

object RoutineTableUsageViewRow {
  implicit lazy val reads: Reads[RoutineTableUsageViewRow] = Reads[RoutineTableUsageViewRow](json => JsResult.fromTry(
      Try(
        RoutineTableUsageViewRow(
          specificCatalog = json.\("specific_catalog").as(SqlIdentifier.reads),
          specificSchema = json.\("specific_schema").as(SqlIdentifier.reads),
          specificName = json.\("specific_name").as(SqlIdentifier.reads),
          routineCatalog = json.\("routine_catalog").as(SqlIdentifier.reads),
          routineSchema = json.\("routine_schema").as(SqlIdentifier.reads),
          routineName = json.\("routine_name").as(SqlIdentifier.reads),
          tableCatalog = json.\("table_catalog").as(SqlIdentifier.reads),
          tableSchema = json.\("table_schema").as(SqlIdentifier.reads),
          tableName = json.\("table_name").as(SqlIdentifier.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[RoutineTableUsageViewRow] = RowParser[RoutineTableUsageViewRow] { row =>
    Success(
      RoutineTableUsageViewRow(
        specificCatalog = row(idx + 0)(SqlIdentifier.column),
        specificSchema = row(idx + 1)(SqlIdentifier.column),
        specificName = row(idx + 2)(SqlIdentifier.column),
        routineCatalog = row(idx + 3)(SqlIdentifier.column),
        routineSchema = row(idx + 4)(SqlIdentifier.column),
        routineName = row(idx + 5)(SqlIdentifier.column),
        tableCatalog = row(idx + 6)(SqlIdentifier.column),
        tableSchema = row(idx + 7)(SqlIdentifier.column),
        tableName = row(idx + 8)(SqlIdentifier.column)
      )
    )
  }
  implicit lazy val writes: OWrites[RoutineTableUsageViewRow] = OWrites[RoutineTableUsageViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "specific_catalog" -> SqlIdentifier.writes.writes(o.specificCatalog),
      "specific_schema" -> SqlIdentifier.writes.writes(o.specificSchema),
      "specific_name" -> SqlIdentifier.writes.writes(o.specificName),
      "routine_catalog" -> SqlIdentifier.writes.writes(o.routineCatalog),
      "routine_schema" -> SqlIdentifier.writes.writes(o.routineSchema),
      "routine_name" -> SqlIdentifier.writes.writes(o.routineName),
      "table_catalog" -> SqlIdentifier.writes.writes(o.tableCatalog),
      "table_schema" -> SqlIdentifier.writes.writes(o.tableSchema),
      "table_name" -> SqlIdentifier.writes.writes(o.tableName)
    ))
  )
}
