/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package domain_constraints

import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.YesOrNo
import typo.dsl.SqlExpr.Field

trait DomainConstraintsViewFields[Row] {
  val constraintCatalog: Field[SqlIdentifier, Row]
  val constraintSchema: Field[SqlIdentifier, Row]
  val constraintName: Field[SqlIdentifier, Row]
  val domainCatalog: Field[SqlIdentifier, Row]
  val domainSchema: Field[SqlIdentifier, Row]
  val domainName: Field[SqlIdentifier, Row]
  val isDeferrable: Field[YesOrNo, Row]
  val initiallyDeferred: Field[YesOrNo, Row]
}
object DomainConstraintsViewFields extends DomainConstraintsViewStructure[DomainConstraintsViewRow](None, identity, (_, x) => x)

