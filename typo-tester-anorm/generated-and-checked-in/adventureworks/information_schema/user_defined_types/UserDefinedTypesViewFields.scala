/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package user_defined_types

import adventureworks.information_schema.CardinalNumber
import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.YesOrNo
import typo.dsl.SqlExpr.Field

trait UserDefinedTypesViewFields[Row] {
  val userDefinedTypeCatalog: Field[SqlIdentifier, Row]
  val userDefinedTypeSchema: Field[SqlIdentifier, Row]
  val userDefinedTypeName: Field[SqlIdentifier, Row]
  val userDefinedTypeCategory: Field[CharacterData, Row]
  val isInstantiable: Field[YesOrNo, Row]
  val isFinal: Field[YesOrNo, Row]
  val orderingForm: Field[CharacterData, Row]
  val orderingCategory: Field[CharacterData, Row]
  val orderingRoutineCatalog: Field[SqlIdentifier, Row]
  val orderingRoutineSchema: Field[SqlIdentifier, Row]
  val orderingRoutineName: Field[SqlIdentifier, Row]
  val referenceType: Field[CharacterData, Row]
  val dataType: Field[CharacterData, Row]
  val characterMaximumLength: Field[CardinalNumber, Row]
  val characterOctetLength: Field[CardinalNumber, Row]
  val characterSetCatalog: Field[SqlIdentifier, Row]
  val characterSetSchema: Field[SqlIdentifier, Row]
  val characterSetName: Field[SqlIdentifier, Row]
  val collationCatalog: Field[SqlIdentifier, Row]
  val collationSchema: Field[SqlIdentifier, Row]
  val collationName: Field[SqlIdentifier, Row]
  val numericPrecision: Field[CardinalNumber, Row]
  val numericPrecisionRadix: Field[CardinalNumber, Row]
  val numericScale: Field[CardinalNumber, Row]
  val datetimePrecision: Field[CardinalNumber, Row]
  val intervalType: Field[CharacterData, Row]
  val intervalPrecision: Field[CardinalNumber, Row]
  val sourceDtdIdentifier: Field[SqlIdentifier, Row]
  val refDtdIdentifier: Field[SqlIdentifier, Row]
}
object UserDefinedTypesViewFields extends UserDefinedTypesViewStructure[UserDefinedTypesViewRow](None, identity, (_, x) => x)

