/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package role_udt_grants

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.YesOrNo
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class RoleUdtGrantsViewRow(
  /** Points to [[udt_privileges.UdtPrivilegesViewRow.grantor]] */
  grantor: SqlIdentifier,
  /** Points to [[udt_privileges.UdtPrivilegesViewRow.grantee]] */
  grantee: SqlIdentifier,
  /** Points to [[udt_privileges.UdtPrivilegesViewRow.udtCatalog]] */
  udtCatalog: SqlIdentifier,
  /** Points to [[udt_privileges.UdtPrivilegesViewRow.udtSchema]] */
  udtSchema: SqlIdentifier,
  /** Points to [[udt_privileges.UdtPrivilegesViewRow.udtName]] */
  udtName: SqlIdentifier,
  /** Points to [[udt_privileges.UdtPrivilegesViewRow.privilegeType]] */
  privilegeType: CharacterData,
  /** Points to [[udt_privileges.UdtPrivilegesViewRow.isGrantable]] */
  isGrantable: YesOrNo
)

object RoleUdtGrantsViewRow {
  implicit lazy val reads: Reads[RoleUdtGrantsViewRow] = Reads[RoleUdtGrantsViewRow](json => JsResult.fromTry(
      Try(
        RoleUdtGrantsViewRow(
          grantor = json.\("grantor").as(SqlIdentifier.reads),
          grantee = json.\("grantee").as(SqlIdentifier.reads),
          udtCatalog = json.\("udt_catalog").as(SqlIdentifier.reads),
          udtSchema = json.\("udt_schema").as(SqlIdentifier.reads),
          udtName = json.\("udt_name").as(SqlIdentifier.reads),
          privilegeType = json.\("privilege_type").as(CharacterData.reads),
          isGrantable = json.\("is_grantable").as(YesOrNo.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[RoleUdtGrantsViewRow] = RowParser[RoleUdtGrantsViewRow] { row =>
    Success(
      RoleUdtGrantsViewRow(
        grantor = row(idx + 0)(SqlIdentifier.column),
        grantee = row(idx + 1)(SqlIdentifier.column),
        udtCatalog = row(idx + 2)(SqlIdentifier.column),
        udtSchema = row(idx + 3)(SqlIdentifier.column),
        udtName = row(idx + 4)(SqlIdentifier.column),
        privilegeType = row(idx + 5)(CharacterData.column),
        isGrantable = row(idx + 6)(YesOrNo.column)
      )
    )
  }
  implicit lazy val writes: OWrites[RoleUdtGrantsViewRow] = OWrites[RoleUdtGrantsViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "grantor" -> SqlIdentifier.writes.writes(o.grantor),
      "grantee" -> SqlIdentifier.writes.writes(o.grantee),
      "udt_catalog" -> SqlIdentifier.writes.writes(o.udtCatalog),
      "udt_schema" -> SqlIdentifier.writes.writes(o.udtSchema),
      "udt_name" -> SqlIdentifier.writes.writes(o.udtName),
      "privilege_type" -> CharacterData.writes.writes(o.privilegeType),
      "is_grantable" -> YesOrNo.writes.writes(o.isGrantable)
    ))
  )
}
