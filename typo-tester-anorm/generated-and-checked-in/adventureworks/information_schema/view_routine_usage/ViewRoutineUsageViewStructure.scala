/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package view_routine_usage

import adventureworks.information_schema.SqlIdentifier
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.Structure.Relation

class ViewRoutineUsageViewStructure[Row](val prefix: Option[String], val extract: Row => ViewRoutineUsageViewRow, val merge: (Row, ViewRoutineUsageViewRow) => Row)
  extends Relation[ViewRoutineUsageViewFields, ViewRoutineUsageViewRow, Row]
    with ViewRoutineUsageViewFields[Row] { outer =>

  override val tableCatalog = new Field[SqlIdentifier, Row](prefix, "table_catalog", None, Some("name"))(x => extract(x).tableCatalog, (row, value) => merge(row, extract(row).copy(tableCatalog = value)))
  override val tableSchema = new Field[SqlIdentifier, Row](prefix, "table_schema", None, Some("name"))(x => extract(x).tableSchema, (row, value) => merge(row, extract(row).copy(tableSchema = value)))
  override val tableName = new Field[SqlIdentifier, Row](prefix, "table_name", None, Some("name"))(x => extract(x).tableName, (row, value) => merge(row, extract(row).copy(tableName = value)))
  override val specificCatalog = new Field[SqlIdentifier, Row](prefix, "specific_catalog", None, Some("name"))(x => extract(x).specificCatalog, (row, value) => merge(row, extract(row).copy(specificCatalog = value)))
  override val specificSchema = new Field[SqlIdentifier, Row](prefix, "specific_schema", None, Some("name"))(x => extract(x).specificSchema, (row, value) => merge(row, extract(row).copy(specificSchema = value)))
  override val specificName = new Field[SqlIdentifier, Row](prefix, "specific_name", None, Some("name"))(x => extract(x).specificName, (row, value) => merge(row, extract(row).copy(specificName = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](tableCatalog, tableSchema, tableName, specificCatalog, specificSchema, specificName)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => ViewRoutineUsageViewRow, merge: (NewRow, ViewRoutineUsageViewRow) => NewRow): ViewRoutineUsageViewStructure[NewRow] =
    new ViewRoutineUsageViewStructure(prefix, extract, merge)
}
