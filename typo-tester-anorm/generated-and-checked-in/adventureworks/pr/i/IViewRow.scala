/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package i

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoXml
import adventureworks.production.illustration.IllustrationId
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class IViewRow(
  id: Int,
  /** Points to [[production.illustration.IllustrationRow.illustrationid]] */
  illustrationid: IllustrationId,
  /** Points to [[production.illustration.IllustrationRow.diagram]] */
  diagram: TypoXml,
  /** Points to [[production.illustration.IllustrationRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object IViewRow {
  implicit lazy val reads: Reads[IViewRow] = Reads[IViewRow](json => JsResult.fromTry(
      Try(
        IViewRow(
          id = json.\("id").as(Reads.IntReads),
          illustrationid = json.\("illustrationid").as(IllustrationId.reads),
          diagram = json.\("diagram").as(TypoXml.reads),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[IViewRow] = RowParser[IViewRow] { row =>
    Success(
      IViewRow(
        id = row(idx + 0)(Column.columnToInt),
        illustrationid = row(idx + 1)(IllustrationId.column),
        diagram = row(idx + 2)(TypoXml.column),
        modifieddate = row(idx + 3)(TypoLocalDateTime.column)
      )
    )
  }
  implicit lazy val writes: OWrites[IViewRow] = OWrites[IViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Writes.IntWrites.writes(o.id),
      "illustrationid" -> IllustrationId.writes.writes(o.illustrationid),
      "diagram" -> TypoXml.writes.writes(o.diagram),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
