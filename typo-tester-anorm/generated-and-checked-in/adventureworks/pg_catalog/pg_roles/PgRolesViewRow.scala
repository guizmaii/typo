/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_roles

import adventureworks.customtypes.TypoOffsetDateTime
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgRolesViewRow(
  rolname: String,
  rolsuper: Boolean,
  rolinherit: Boolean,
  rolcreaterole: Boolean,
  rolcreatedb: Boolean,
  rolcanlogin: Boolean,
  rolreplication: Boolean,
  rolconnlimit: Int,
  rolpassword: String,
  rolvaliduntil: TypoOffsetDateTime,
  rolbypassrls: Boolean,
  rolconfig: Option[Array[String]],
  oid: /* oid */ Long
)

object PgRolesViewRow {
  implicit lazy val reads: Reads[PgRolesViewRow] = Reads[PgRolesViewRow](json => JsResult.fromTry(
      Try(
        PgRolesViewRow(
          rolname = json.\("rolname").as(Reads.StringReads),
          rolsuper = json.\("rolsuper").as(Reads.BooleanReads),
          rolinherit = json.\("rolinherit").as(Reads.BooleanReads),
          rolcreaterole = json.\("rolcreaterole").as(Reads.BooleanReads),
          rolcreatedb = json.\("rolcreatedb").as(Reads.BooleanReads),
          rolcanlogin = json.\("rolcanlogin").as(Reads.BooleanReads),
          rolreplication = json.\("rolreplication").as(Reads.BooleanReads),
          rolconnlimit = json.\("rolconnlimit").as(Reads.IntReads),
          rolpassword = json.\("rolpassword").as(Reads.StringReads),
          rolvaliduntil = json.\("rolvaliduntil").as(TypoOffsetDateTime.reads),
          rolbypassrls = json.\("rolbypassrls").as(Reads.BooleanReads),
          rolconfig = json.\("rolconfig").toOption.map(_.as(Reads.ArrayReads[String](Reads.StringReads, implicitly))),
          oid = json.\("oid").as(Reads.LongReads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgRolesViewRow] = RowParser[PgRolesViewRow] { row =>
    Success(
      PgRolesViewRow(
        rolname = row(idx + 0)(Column.columnToString),
        rolsuper = row(idx + 1)(Column.columnToBoolean),
        rolinherit = row(idx + 2)(Column.columnToBoolean),
        rolcreaterole = row(idx + 3)(Column.columnToBoolean),
        rolcreatedb = row(idx + 4)(Column.columnToBoolean),
        rolcanlogin = row(idx + 5)(Column.columnToBoolean),
        rolreplication = row(idx + 6)(Column.columnToBoolean),
        rolconnlimit = row(idx + 7)(Column.columnToInt),
        rolpassword = row(idx + 8)(Column.columnToString),
        rolvaliduntil = row(idx + 9)(TypoOffsetDateTime.column),
        rolbypassrls = row(idx + 10)(Column.columnToBoolean),
        rolconfig = row(idx + 11)(Column.columnToOption(Column.columnToArray[String](Column.columnToString, implicitly))),
        oid = row(idx + 12)(Column.columnToLong)
      )
    )
  }
  implicit lazy val writes: OWrites[PgRolesViewRow] = OWrites[PgRolesViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "rolname" -> Writes.StringWrites.writes(o.rolname),
      "rolsuper" -> Writes.BooleanWrites.writes(o.rolsuper),
      "rolinherit" -> Writes.BooleanWrites.writes(o.rolinherit),
      "rolcreaterole" -> Writes.BooleanWrites.writes(o.rolcreaterole),
      "rolcreatedb" -> Writes.BooleanWrites.writes(o.rolcreatedb),
      "rolcanlogin" -> Writes.BooleanWrites.writes(o.rolcanlogin),
      "rolreplication" -> Writes.BooleanWrites.writes(o.rolreplication),
      "rolconnlimit" -> Writes.IntWrites.writes(o.rolconnlimit),
      "rolpassword" -> Writes.StringWrites.writes(o.rolpassword),
      "rolvaliduntil" -> TypoOffsetDateTime.writes.writes(o.rolvaliduntil),
      "rolbypassrls" -> Writes.BooleanWrites.writes(o.rolbypassrls),
      "rolconfig" -> Writes.OptionWrites(Writes.arrayWrites[String](implicitly, Writes.StringWrites)).writes(o.rolconfig),
      "oid" -> Writes.LongWrites.writes(o.oid)
    ))
  )
}
