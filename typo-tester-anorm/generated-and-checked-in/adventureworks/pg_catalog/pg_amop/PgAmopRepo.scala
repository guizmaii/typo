/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_amop

import adventureworks.customtypes.TypoShort
import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder

trait PgAmopRepo {
  def delete(oid: PgAmopId)(implicit c: Connection): Boolean
  def delete: DeleteBuilder[PgAmopFields, PgAmopRow]
  def insert(unsaved: PgAmopRow)(implicit c: Connection): PgAmopRow
  def select: SelectBuilder[PgAmopFields, PgAmopRow]
  def selectAll(implicit c: Connection): List[PgAmopRow]
  def selectById(oid: PgAmopId)(implicit c: Connection): Option[PgAmopRow]
  def selectByIds(oids: Array[PgAmopId])(implicit c: Connection): List[PgAmopRow]
  def selectByUnique(amopfamily: /* oid */ Long, amoplefttype: /* oid */ Long, amoprighttype: /* oid */ Long, amopstrategy: TypoShort)(implicit c: Connection): Option[PgAmopRow]
  def selectByUnique(amopopr: /* oid */ Long, amoppurpose: String, amopfamily: /* oid */ Long)(implicit c: Connection): Option[PgAmopRow]
  def update(row: PgAmopRow)(implicit c: Connection): Boolean
  def update: UpdateBuilder[PgAmopFields, PgAmopRow]
  def upsert(unsaved: PgAmopRow)(implicit c: Connection): PgAmopRow
}
