/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_depend

import anorm.ParameterValue
import anorm.SqlStringInterpolation
import anorm.ToStatement
import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder

object PgDependRepoImpl extends PgDependRepo {
  override def delete: DeleteBuilder[PgDependFields, PgDependRow] = {
    DeleteBuilder("pg_catalog.pg_depend", PgDependFields)
  }
  override def insert(unsaved: PgDependRow)(implicit c: Connection): PgDependRow = {
    SQL"""insert into pg_catalog.pg_depend(classid, objid, objsubid, refclassid, refobjid, refobjsubid, deptype)
          values (${ParameterValue(unsaved.classid, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.objid, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.objsubid, null, ToStatement.intToStatement)}::int4, ${ParameterValue(unsaved.refclassid, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.refobjid, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.refobjsubid, null, ToStatement.intToStatement)}::int4, ${ParameterValue(unsaved.deptype, null, ToStatement.stringToStatement)}::char)
          returning classid, objid, objsubid, refclassid, refobjid, refobjsubid, deptype
       """
      .executeInsert(PgDependRow.rowParser(1).single)
    
  }
  override def select: SelectBuilder[PgDependFields, PgDependRow] = {
    SelectBuilderSql("pg_catalog.pg_depend", PgDependFields, PgDependRow.rowParser)
  }
  override def selectAll(implicit c: Connection): List[PgDependRow] = {
    SQL"""select classid, objid, objsubid, refclassid, refobjid, refobjsubid, deptype
          from pg_catalog.pg_depend
       """.as(PgDependRow.rowParser(1).*)
  }
  override def update: UpdateBuilder[PgDependFields, PgDependRow] = {
    UpdateBuilder("pg_catalog.pg_depend", PgDependFields, PgDependRow.rowParser)
  }
}
