/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_shmem_allocations

import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgShmemAllocationsViewRow(
  name: String,
  off: Long,
  size: Long,
  allocatedSize: Long
)

object PgShmemAllocationsViewRow {
  implicit lazy val reads: Reads[PgShmemAllocationsViewRow] = Reads[PgShmemAllocationsViewRow](json => JsResult.fromTry(
      Try(
        PgShmemAllocationsViewRow(
          name = json.\("name").as(Reads.StringReads),
          off = json.\("off").as(Reads.LongReads),
          size = json.\("size").as(Reads.LongReads),
          allocatedSize = json.\("allocated_size").as(Reads.LongReads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgShmemAllocationsViewRow] = RowParser[PgShmemAllocationsViewRow] { row =>
    Success(
      PgShmemAllocationsViewRow(
        name = row(idx + 0)(Column.columnToString),
        off = row(idx + 1)(Column.columnToLong),
        size = row(idx + 2)(Column.columnToLong),
        allocatedSize = row(idx + 3)(Column.columnToLong)
      )
    )
  }
  implicit lazy val writes: OWrites[PgShmemAllocationsViewRow] = OWrites[PgShmemAllocationsViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "name" -> Writes.StringWrites.writes(o.name),
      "off" -> Writes.LongWrites.writes(o.off),
      "size" -> Writes.LongWrites.writes(o.size),
      "allocated_size" -> Writes.LongWrites.writes(o.allocatedSize)
    ))
  )
}
