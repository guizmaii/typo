/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_timezone_abbrevs

import adventureworks.customtypes.TypoInterval
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgTimezoneAbbrevsViewRow(
  abbrev: String,
  utcOffset: TypoInterval,
  isDst: Boolean
)

object PgTimezoneAbbrevsViewRow {
  implicit lazy val reads: Reads[PgTimezoneAbbrevsViewRow] = Reads[PgTimezoneAbbrevsViewRow](json => JsResult.fromTry(
      Try(
        PgTimezoneAbbrevsViewRow(
          abbrev = json.\("abbrev").as(Reads.StringReads),
          utcOffset = json.\("utc_offset").as(TypoInterval.reads),
          isDst = json.\("is_dst").as(Reads.BooleanReads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgTimezoneAbbrevsViewRow] = RowParser[PgTimezoneAbbrevsViewRow] { row =>
    Success(
      PgTimezoneAbbrevsViewRow(
        abbrev = row(idx + 0)(Column.columnToString),
        utcOffset = row(idx + 1)(TypoInterval.column),
        isDst = row(idx + 2)(Column.columnToBoolean)
      )
    )
  }
  implicit lazy val writes: OWrites[PgTimezoneAbbrevsViewRow] = OWrites[PgTimezoneAbbrevsViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "abbrev" -> Writes.StringWrites.writes(o.abbrev),
      "utc_offset" -> TypoInterval.writes.writes(o.utcOffset),
      "is_dst" -> Writes.BooleanWrites.writes(o.isDst)
    ))
  )
}
